
#actecute cleanup
echo "Which mode? (b(atch),i(nteractive))"
read md
if [ $md = "b" ]
then
echo "MODE BATCH" > lognames
else
echo "MODE INTER" > lognames
fi

echo "Which source language? (d(utch), e(nglish))"
read sl
if [ $sl = "d" ]
then
sl=dutch
fi
if [ $sl = "e" ]
then
sl=english
fi

echo "Which target language? (d(utch), e(nglish), s(panish))"
read tl
if [ $tl = "d" ]
then
tl=dutch 
fi
if [ $tl = "e" ]
then
tl=english
fi
if [ $tl = "s" ]
then
tl=spanish
fi

echo "amdict        $sl/mdict.dat" >> lognames
echo "gmdict        $tl/mdict.dat" >> lognames
echo "ablex         $sl/blex.dat" >> lognames
echo "gblex         $tl/blex.dat" >> lognames
echo "asdict        $sl/sdict.dat" >> lognames
echo "gsdict        $tl/sdict.dat" >> lognames
echo "asiddict      $sl/siddict.dat" >> lognames
echo "gsiddict      $tl/siddict.dat" >> lognames
echo "aiddict       $sl/iddict.dat" >> lognames
echo "giddict       $tl/iddict.dat" >> lognames
echo "aildict       $sl/ildict.dat" >> lognames
echo "gildict       $tl/ildict.dat" >> lognames
echo "afixiddict    $sl/fixid.dat" >> lognames
echo "gfixiddict    $tl/fixid.dat" >> lognames
echo "askeyfile     $sl/bskeydef.dat" >> lognames
echo "gskeyfile     $tl/bskeydef.dat" >> lognames
echo "mkeyfile      interlingua/bmkeydef.dat" >> lognames
echo "aconfigsys   $sl/config.sys" >> lognames
echo "apfsearch    $sl/aprefix.sso" >> lognames
echo "asfsearch    $sl/asuffix.sso" >> lognames
echo "algluesearch $sl/alglue.sso" >> lognames
echo "argluesearch $sl/arglue.sso" >> lognames
echo "amgluesearch $sl/amglue.sso" >> lognames
echo "apfchar      $sl/aprefix.sco" >> lognames
echo "asfchar      $sl/asuffix.sco" >> lognames
echo "algluechar   $sl/alglue.sco" >> lognames
echo "argluechar   $sl/arglue.sco" >> lognames
echo "amgluechar   $sl/amglue.sco" >> lognames
echo "apfvar       $sl/aprefix.svo" >> lognames
echo "asfvar       $sl/asuffix.svo" >> lognames
echo "algluevar    $sl/alglue.svo" >> lognames
echo "argluevar    $sl/arglue.svo" >> lognames
echo "amgluevar    $sl/amglue.svo" >> lognames
echo "apfvarstr    $sl/aprefix.svs" >> lognames
echo "asfvarstr    $sl/asuffix.svs" >> lognames
echo "algluevarstr $sl/alglue.svs" >> lognames
echo "argluevarstr $sl/arglue.svs" >> lognames
echo "amgluevarstr $sl/amglue.svs" >> lognames
echo "apfrule      $sl/aprefix.sro" >> lognames
echo "asfrule      $sl/asuffix.sro" >> lognames
echo "algluerule   $sl/alglue.sro" >> lognames
echo "argluerule   $sl/arglue.sro" >> lognames
echo "amgluerule   $sl/amglue.sro" >> lognames
echo "gconfigsys   $tl/config.sys" >> lognames
echo "gpfsearch    $tl/gprefix.sso" >> lognames
echo "gsfsearch    $tl/gsuffix.sso" >> lognames
echo "glgluesearch $tl/glglue.sso" >> lognames
echo "grgluesearch $tl/grglue.sso" >> lognames
echo "gmgluesearch $tl/gmglue.sso" >> lognames
echo "gpfchar      $tl/gprefix.sco" >> lognames
echo "gsfchar      $tl/gsuffix.sco" >> lognames
echo "glgluechar   $tl/glglue.sco" >> lognames
echo "grgluechar   $tl/grglue.sco" >> lognames
echo "gmgluechar   $tl/gmglue.sco" >> lognames
echo "gpfvar       $tl/gprefix.svo" >> lognames
echo "gsfvar       $tl/gsuffix.svo" >> lognames
echo "glgluevar    $tl/glglue.svo" >> lognames
echo "grgluevar    $tl/grglue.svo" >> lognames
echo "gmgluevar    $tl/gmglue.svo" >> lognames
echo "gpfvarstr    $tl/gprefix.svs" >> lognames
echo "gsfvarstr    $tl/gsuffix.svs" >> lognames
echo "glgluevarstr $tl/glglue.svs" >> lognames
echo "grgluevarstr $tl/grglue.svs" >> lognames
echo "gmgluevarstr $tl/gmglue.svs" >> lognames
echo "gpfrule      $tl/gprefix.sro" >> lognames
echo "gsfrule      $tl/gsuffix.sro" >> lognames
echo "glgluerule   $tl/glglue.sro" >> lognames
echo "grgluerule   $tl/grglue.sro" >> lognames
echo "gmgluerule   $tl/gmglue.sro" >> lognames

#
# X-Window image
#

#echo "Xw       Xw/Xw" >> lognames
#UIDPATH=Xw/%U; export UIDPATH
#XBMLANGPATH=Xw/%B; export XBMLANGPATH

#echo "Xw       Xw/target/Xw.exe" >> lognames
echo "Xw       $RBS_ARCHIVE$RBS_RELEASE/Xw/Xw.exe" >> lognames

UIDPATH=$RBS_ARCHIVE$RBS_RELEASE/Xw/%U; export UIDPATH
XBMLANGPATH=$RBS_ARCHIVE$RBS_RELEASE/Xw/%B; export XBMLANGPATH

#
# Analysis image
#
echo "ANALYSIS from? (u(ser),a(rchive))"
read x
if [ $x = "u" ]
then
echo "aimage       $sl/target/analysis.exe" >> lognames
else
echo "aimage       $RBS_ARCHIVE$RBS_RELEASE/$sl/analysis.exe" >> lognames
fi

# 
# Generation image
#
echo "GENERATION from? (u(ser),a(rchive))"
read x
if [ $x = "u" ]
then
echo "gimage       $tl/target/generation.exe" >> lognames
else
echo "gimage       $RBS_ARCHIVE$RBS_RELEASE/$tl/generation.exe" >> lognames
fi

#
# Logfiles
#
echo "logfile      general/target/log.txt" >> lognames
echo "alogfile     $sl/target/alog.txt" >> lognames
echo "glogfile     $tl/target/glog.txt" >> lognames

#
# Batch input and output file
#
if [ $md = "b" ]
then
echo "Batch inputfile (don't use tildes)"
read inb
echo "Batch outputfile (don't use tildes)"
read oub
echo "inputfile    $inb" >> lognames
echo "outputfile   $oub" >> lognames
fi

cat $RBS_ARCHIVE$RBS_RELEASE/RBS_logicals >> lognames

#
# Start Control image
#
#general/target/control.exe lognames
$RBS_ARCHIVE$RBS_RELEASE/general/control.exe lognames


