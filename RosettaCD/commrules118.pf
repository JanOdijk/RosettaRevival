{*DUTCH}
 PROCEDURE commrules118_init;EXTERNAL;
{*
SUBGRAMMAR
CARDINALS
FUNCTION CARDINALS:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCARD1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH1:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCARD2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
AppendCtrlExpr(ELEMGRAPH2,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
BEGIN
CARDINALS:=GRAPH
END;
*
DIGIT
*
CARD
*
}
{rule:}
{:RCARD1}
 FUNCTION COMRCARD1(Is1:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RCARD1
*
*
1
DIGIT
CARD
}
{:RCARD1}
{rule:}
{:RCARD2}
 FUNCTION COMRCARD2(Is1:LISTREE_pStree;Is2:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RCARD2
*
*
2
CARD
DIGIT
CARD
}
{:RCARD2}
{*
SUBGRAMMAR
DATUMFORMATION
FUNCTION DATUMFORMATION:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDATUMNP
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH1:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDATUMYEAR
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH2:=result;
END;
                                                      FUNCTION ELEMGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDATUMDAY
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH3:=result;
END;
                                                      FUNCTION ELEMGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDATUMDAYNAME
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
AppendCtrlExpr(ELEMGRAPH2,result);
AppendCtrlExpr(ELEMGRAPH3,result);
AppendCtrlExpr(ELEMGRAPH4,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
BEGIN
DATUMFORMATION:=GRAPH
END;
*
PROPERNOUN
*
NP
*
}
{rule:}
{:RDATUMNP}
 FUNCTION COMRDATUMNP(SUPERPAR:LSDOMAINT_DEIXISTYPE;
Is1:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RDATUMNP
*
SUPERPAR
DEIXISTYPE
*
1
PROPERNOUN
NP
}
{:RDATUMNP}
{rule:}
{:RDATUMDAY}
 FUNCTION COMRDATUMDAY(Is1:LISTREE_pStree;Is2:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RDATUMDAY
*
*
2
NP
DETP
NP
}
{:RDATUMDAY}
{rule:}
{:RDATUMYEAR}
 FUNCTION COMRDATUMYEAR(Is1:LISTREE_pStree;Is2:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RDATUMYEAR
*
*
2
NP
NP
NP
}
{:RDATUMYEAR}
{rule:}
{:RDATUMDAYNAME}
 FUNCTION COMRDATUMDAYNAME(Is1:LISTREE_pStree;Is2:LISTREE_pStree
):LISTREE_SetOfStrees;
EXTERNAL;
{*
RULE
RDATUMDAYNAME
*
*
2
NP
NP
NP
}
{:RDATUMDAYNAME}

