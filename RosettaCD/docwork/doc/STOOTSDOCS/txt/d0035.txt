$FL 12
$PL 274,16
$LD 5
$OP SH=S,HY=1,la=E,ph=r,pn=c,AN=C
$NP 
$UC _
$AC @
$XC ~`

   

            Project ROSETTA : Machine Translation


            Topic     :  General

    ---------------------------------------------------------







         Title        :  Complex Basic Expressions/COLING version 1

         Author       :  Andre@' Schenk









         Doc.Nr       :  0035

         Date         :  85/08/20

         Status       :  informal

         Supersedes   :  

         Distribution :  project

         Clearance    :  project

         Keywords     :  idioms
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 0035                    date:85/08/20
$Np 1
$CD 11
$LD 4
$AC @
$SC %&
$OP PN=C,AN=N,LA=E,SH=U
$C1 Abstract
$ This paper discusses one of the problems of machine translation, namely the
translation of idioms and of expressions that are similar to idioms. This type
of expression will be called Complex Basic Expression. The paper describes a
solution to the problem of complex basic expressions within the theoretical
framework of the Rosetta machine translation project.$

$ The Rosetta project was initiated at the Philips
Research Laboratories in 1980 by Jan Landsbergen. The Rosetta system is a
multilingual system which uses an intermediate language and translates between 
Dutch, English and, in the future, Spanish.$
$C1 Isomorphic Montague Grammars
$C2 Introduction
$ The Rosetta system is based on the "isomorphic grammar" approach to
translation. In this approach a sentence s' is considered a possible
translation of a sentence s if s and s' have not only the same meaning but if
they also have similar derivational histories, which implies that their
meanings are derived in the same way from the same basic meanings (Landsbergen,
1984). This approach requires that 'isomorphic grammars' are written for the
languages under consideration.$

$ In the following paragraphs some relevant
properties of Montague grammars and the notions isomorphic grammars and
M-grammars will be introduced. In the final paragraph an example of an
M-grammar will be given.$
$C2 Outline of Montague Grammars
$ A language is defined by the following three components of a Montague
grammar:$
$ (i) the lexicon, i.e. a set of basic expressions with their syntactic
categories. Basic expressions are the smallest meaningful units of a language,
for instance stems or content words.$

$ (ii) a set of syntactic rules. The syntactic rules specify the categories
of the expressions they can be applied to, prescribe how expressions have to
be combined to form a new expression and specify the category of the newly
formed expression.$

$ Starting from basic expressions, an expression can be formed by applying
syntactic rules. This process of making an expression can be represented by a
syntactic 'derivation tree'. The basic expressions are labels of the terminal
nodes and the names of the rules that are applicable are labels of the
non-terminal nodes. In the example below (Fig. (1)), rule R&1& makes
the NP "the cat" from the basic expression "cat" and rule R&2& makes the
expression$
    "the cat is walking"
$ on the basis of the NP and the basic expression "walk".$

$CD 12
$RL 13
                     SENTENCE         R&2&
                                      /\
                the cat is walking   /  \
                                    /    \
                                   /      \
                       NP         R&1&     walk
                                  |
                    the cat       |
                                  |
                                  |
                                 cat

                                   Figure(1)

$CD 11
$ iii) a set of semantic rules. For each syntactic rule there is a semantic
rule. The Compositionality Principle of Montague Grammar defines
the meaning of an expression as a function of the meaning of the parts of
that expression.$

$ The basic expressions and the syntactic rules are chosen in
such a way that the meaning of a phrase can be defined by a syntax-directed
translation into a logical language. Each basic expression has a corresponding
expression in the logical language, which is the representation of its meaning.
For each syntactic rule there is a logical composition rule, which states how
the meaning representation of the phrase constructed by the syntactic rule is
derived from the meaning representation of the constituent phrases. So the
syntactic derivation tree corresponds to a 'logical derivation tree'.$

$ This is shown for the above example in figure (2):$
$RL 18
$CD 12

              SENTENCE         R&2&             L&2&  
                               /\             /\
          the cat is walking  /  \   <==>    /  \ 
                             /    \         /    \
                            /      \       /      \
                NP         R&1&     walk    L&1&      B&2&
                           |              |
             the cat       |              |
                           |              |
                           |              |
                          cat             B&1&

                        syntactic       logical
                        derivation      derivation
                        tree            tree

                                 Figure(2)
$CD 11
$C2 Isomorphic Grammars
$ Assuming there is a grammar that can generate the Dutch equivalent of the
English sentence from fig. (1), then the derivation tree for the sentence$
    "de kat loopt"
$ looks like figure (3), in which R'&1& builds the NP "de kat" from the basic
expression "kat" and rule R'&2& constructs the expression "de kat loopt" from
the NP and the basic expression "lopen":$

$CD 12
$RL 13
                     SENTENCE         R'&2&
                                      /\
                   de kat loopt      /  \
                                    /    \
                                   /      \
                       NP         R'&1&    lopen
                                  |
                     de kat       |
                                  |
                                  |
                                 kat

                                   Figure(3)
$CD 11

$ Examination of the two examples in figures (1) and (3) shows that there is a
correspondence between both the basic expressions and the syntactic rules of
the two grammars. The basic expressions have the same meaning and the rules
correspond to the same logical composition rule.$

$ If grammars for larger fragments of Dutch, English or for other languages
are written, the grammars can be attuned to each other as follows:$
$ - for each basic expression of a grammar G of a language L there is at least
one basic expression of a grammar G' of a language L' with the same meaning,$
$ - for each syntactic rule of G there is at least one syntactic rule of G'
corresponding to the same meaning operation. Syntactically these rules may
differ considerably.$

$ In the following example (Figure(4)) this correspondence is shown between the
Dutch expression "de kat loopt" and the English expression "the cat is
walking".  Each rule of the syntactic derivation tree is mapped into a
corresponding rule of the logical derivation tree and each basic expression is
mapped into the corresponding basic meaning. Note that in this simple
example ambiguities are left out of consideration.$

$RL 20
$CD 12
Dutch                                                                 English


      SENTENCE         R'&2&            L&2&           R&2&           SENTENCE
                       /\             /\           /\ 
    de kat loopt      /  \   <==>    /  \  <==>   /  \     the cat is walking
                     /    \         /    \       /    \ 
                    /      \       /      \     /      \
        NP         R'&1&  lopen     L&1&      B&2&   R&1&     walk         NP
                   |              |            |  
      de kat       |              |            |                the cat
                   |              |            |
                   |              |            |
                  kat             B&1&          cat

                syntactic       logical      syntactic
                derivation      derivation   derivation
                tree            tree         tree  

                                 Figure(4)

$CD 11
$ Grammars that correspond to each other in the way described above will be
called 'isomorphic' and the logical derivation trees, representations
of both the syntactic and the semantic structure of sentences, can be used as
intermediate expressions.$
$C2 M-Grammars
$ The grammars used in the system, called M-grammars, can be seen as a
computationally viable variant of Montague Grammar which is in accordance
with the transformational extensions proposed by Partee, 1973. This implies
that the syntactic rules operate on syntactic trees rather than on strings.
Restrictions have been imposed on the grammars in such a way that effective
parsing procedures are possible.$

$ The syntactic trees an M-Grammar operates on are called 'S-Trees'.$
$ An 'S-Tree' is a labelled ordered tree. The labels
of the nodes specify a syntactic category and a list of attribute-value
pairs. The labels of the terminal nodes correspond to basic expressions. The
branches
are labelled with the names of syntactic relations, such as subject, head,
object, etc.$
$ An 'M-Grammar' defines a set of S-Trees by specifying a set of basic
S-Trees and a set of rules called 'M-Rules'.$
$ An 'M-Rule' R&i& defines a function F&i& from tuples of S-Trees to sets of
S-Trees. Application of R&i& to a tuple t&1&,...,t&n& results in a set
F&i&(t&1&,...,t&n&). If this set is empty, the rule is said to be not
applicable (cf. Landsbergen, 1982).$
$C2 An Example of an M-Grammar
$ In this paragraph an example will be given of an M-Grammar that generates
the Dutch sentence:$
    "hij geeft een boek aan Marie"
    (Eng. "he gives a book to Marie")
$ Only those M-Rules that are relevant to the discussion in the following
chapters will be dealt with.$

$ The M-Grammar needed for this example:$
$ (i) basic S-trees:$
VAR (x&1&), VAR (x&2&),...
  (VAR's are syntactic variables corresponding to logical variables)
VERB1(geven)
NOUN1(hij)
NOUN2(boek)
NOUN3(Marie)
$ Expressions like VERB(geven) are abbreviations of basic S-trees that specify
categories and attribute-value pairs, so VERB(geven) stands for:$
    VERB {stem      : 'geven',
          number    : unspecified,
          voices    : active, passive,
          ...       : ...             }

$ (ii) M-Rules:$
R&1&  : VERB1(geven) + VAR (x&i&) + VAR (x&j&) + VAR (x&k&) ==>
         CL(x&i& geven x&j& x&k&)
$ The rule operates on a ditransitive verb and three variables and makes a
clause in which the variables are respectively subject, object and
prepositional object (cf. the remark below).$
R&2&  : NOUN1(hij) ==>
         NP(hij)
R&3&  : NOUN2(boek) ==>
         NP(een boek)
R&4&  : NOUN3(Marie) ==>
         PP(aan Marie)
R&5,i&: NP(hij) + CL(x&i& geven x&j& x&k&) ==>
         CL(hij geven x&j& x&k&)
$ This is a rule scheme with an instance for every variable index i. The
rule substitutes an NP for the subject variable. The same holds for rules
R&6,j& and R&7,k& in which an NP and a PP are substituted for respectively the
object and the prepositional object.$
R&6,j&: NP(het boek) + CL(hij geven x&j& x&k&) ==>
         CL(hij geven het boek x&k&)
R&7,k&: PP(aan Marie) + CL(hij geven het boek x&k&) ==>
         CL(hij geven het boek aan Marie)
R&8&  : CL(hij geven het boek aan Marie) ==>
         SENTENCE(hij geeft het boek aan Marie)
$ This rule assigns the simple present tense to the verb and adjusts its
form to number and person of the subject.$

$ Note that in this example (and other examples) an expression like:$
    CL(x&i& geven x&j& x&k&)
$ is an abbreviation of a more exact representation like:$

$RL 11
                             CL


              subj     head      obj    prepobj


              VAR      VERB      VAR     VAR
              x&i&      'geven'    x&j&      x&k&

                           Figure(5)

$C1 Complex Basic Expressions
$C2 Introduction
$ In this section complex basic expressions 
will be discussed. It will be argued that there are three reasons for having
complex basic expressions when looking at more than one language.
A definition of Complex Basic Expressions (CBE's) will be given.$
$C2 Reasons for Introducing Complex Basic Expressions
$ Traditionally, in Montague semantics, as for instance in the PTQ paper
(Montague, 1973), a basic expression has a primitive meaning. However, the
semantic concept basic expression does not always coincide with what one would
call a syntactic primitive. This is the case with for instance idioms.$

$ Fraser (1970) defines idioms as follows : "I shall
regard an idiom as a constituent or series of constituents for which 
the semantic interpretation is not a compositional function of the
formatives of which it is composed." Consider for instance the English
sentence:$
  "Pete kicked the bucket"
$ The following structure can be assigned to this sentence:$

$RL 17
                            CL


                    subj    head    obj


                     NP     VERB    NP
                           'kick'
  

                    head        det   head


                    NOUN        ART   NOUN
                   'Pete'      'the' 'bucket'

                              Figure(6)

$ In figure (6) "Pete" with category Noun, "kick" with category VERB, "the"
with category ART and "bucket" with category NOUN are terminal S-Trees.
It is impossible to infer directly from these four terminal nodes and from
applying syntactic rules and their corresponding semantic rules to these nodes
that the meaning of this sentence is
that the subject has died. The above definition implies that sentences
containing idioms cannot be treated according to
the compositionality principle in a straigtforward way.$

$ Note that the sentence
can also mean that the subject hit a specific vessel with his foot. In the
present discussion literal meanings will be ignored.$

$ The problem arises because basic expressions are terminal S-trees, i.e.
terminal nodes. Since idioms have one primitive meaning (the primitive meaning
of "kick the bucket" is 'die'), they can be treated as basic expressions. Basic
expressions that are idiomatic will be
treated as terminal S-trees that have an internal structure. This type of
expression will be called Complex Basic Expression.$

$ This complex tree structure can undergo syntactic operations. This is
necessary, because, although restricted, elements can be
moved or modified for tense, agreement, etc. in many idioms, e.g. in:$
    "the woman promised the man not to lose her temper"
$ Several operations have taken place on the idiom "lose one's temper"; for
example the possessive pronoun "her"
is adjusted in form to the subject of the main clause "the woman" (for an
indication of a solution to this problem cf. paragraph 4.5.2.). If elements
in idioms are not accessible for syntactic operations, i.e. if idioms are
treated as units, this is impossible.$

$ Before giving a
definition of complex basic expressions, two other reasons for introducing
them will be given.$

$ Phenomena that are similar to idioms are the following:$
$ (i) If the isomorphy principle has to be retained and if more than one
language is taken into consideration, constructions, that are not idiomatic
and that consist of more than one word, are possible. In Dutch$
    "kwaad worden" (Eng. "become angry")
$ is not an idiom in the sense defined above (i.e. the meaning of the
expression "kwaad worden" can be composed in a natural way from "kwaad" en
"worden"), but has an idiomatic equivalent in English:$
    "lose one's temper".
$ If "kwaad worden" has to correspond to "lose one's temper", then in a
technical sense, in Dutch, "kwaad worden" can be treated as an idiom.$

$ (ii) The Italian word$
    "adagiare"
$ which translates into English$
    "lay down with care"
$ and Spanish$
    "madrugar"
$ which translates into English$
    "get up early"
$ are words that correspond to complex expressions in English (and Dutch). From
a translational point of view cases like "get up early" can be treated
as idioms.$

$ Thus, schematically there are three reasons for introducing CBE's:$

(i) idiomatic expressions, e.g.:
    "de plaat poetsen" ("sling one's hook"),
(ii) expressions corresponding to an idiom in another language, e.g.:
    "kwaad worden" ("lose one's temper"),
(iii) expressions corresponding to a word in another language, e.g.:
    "lay down with care" ("adagiare").

$ This last type of CBE is a problematic one. In the case of$
    "zacht neerleggen" <==> "lay down with care"
$ the relation between the Dutch and
English expressions can be established in a straightforward manner, because
they are both translations of the same
word in Italian ("adagiare"). Constructions that are similar to this type, for
instance$
    "zacht aanraken" <==> "touch gently"
$ where "zacht" in the context of "aanraken" has to be translated into
"gently" might be regarded to be a fourth reason for introducing CBE's. When
the relation to a third language does not
exist, however, they cannot be regarded as CBE's. The
translation problem
in these cases will have to be solved by other means, for instance a semantic
type system. Since these phenomena are not relevant to the present discussion,
they will be left out of consideration.$
$C2 Definition of Complex Basic Expressions
$ As was mentioned above, traditionally, a basic expression is a basic S-tree
(terminal node). A complex basic expression is a variant of these basic
expressions; it is a complex basic S-tree. For example, the basic S-tree for
"kick the bucket" looks like the following:$

$RL 17
                            CL


                    subj    head    obj


                    VAR     VERB    NP
                    V&1&     'kick'
  

                                det   head


                                ART   NOUN
                               'the' 'bucket'

                              Figure(7)

$ A basic expression consists of a category and a set of attribute-value pairs,
a complex basic expression consists of a category, a set of attribute-value
pairs and an internal syntactic tree structure.$

$ A basic expression is a complex basic expression iff.:$
$ i) it is a non-terminal basic S-tree that cannot be decomposed by rules that
obey the compositionality principle,$
$ ii) it corresponds to a basic meaning.$

$ As can easily be seen, the isomorphy hypothesis is retained here, since the
structure as a whole is a basic expression that corresponds to a basic meaning.
This basic meaning corresponds to at least one basic expression in another
language (cf. section(4.3)).$
$C1 Treatment of Complex Basic Expressions 
$C2 Introduction
$ In this section an M-Grammar will be given that can deal with Complex Basic
Expressions, two such M-Grammars will be related to each other according to the
isomorphy principle and the dictionary representation will be
given. In the final paragraph some apparent problems will be briefly
discussed.$
$C2 An Example of an M-Grammar for Complex Basic Expressions
$ In this paragraph an M-Grammar will be presented that generates the Dutch
idiomatic sentence:$
    "hij geeft de pijp aan Maarten"
    (Eng. "he opts out", lit. "he gives the pipe to Maarten")
$ In this sentence "geven de pijp aan Maarten" is a CBE, that corresponds to
the English verb "opt out".$
$ A comparison will be made to the grammar of section (2.5).$

$ The grammar:$
(i) basic S-trees
VAR (x&1&), VAR (x&2&),...
VERB1(geven de pijp aan Maarten)
NOUN1(hij)

(ii) M-Rules:
R'&1&  : VERB1(geven de pijp aan Maarten) + VAR (x&i&) ==>
          CL(x&i& geven de pijp aan Maarten)
$ This rule expects a (complex) intransitive verb and a variable; it constructs
a clause in which the variable is the subject.$
R'&2&  : NOUN1(hij) ==>
          NP(hij)
R'&3,i&: NP(hij) + CL(x&i& geven de pijp aan Maarten) ==>
          CL(hij geven de pijp aan Maarten)
R'&4&  : CL(hij geven de pijp aan Maarten) ==>
          SENTENCE(hij geeft de pijp aan Maarten)

$ The result of application of rule R'&1& is represented as a tree structure in
figure (8):$

$RL 22
                             CL


              subj   head        obj      prepobj


              VAR    VERB        NP         PP
              x&i&    'geven'

                             det   head  head   obj


                             ART   NOUN  PREP   NP
                             'de' 'pijp' 'aan'

                                               head


                                               NOUN
                                             'Maarten'

                              Figure(8)

$ After applying rules R'&2& and R'&3,i&, this construct is similar to the
result
of application of rules R&1& to R&7,k& of paragraph (2.5). Some of the basic
expressions differ. Another difference is that here the rules that construct
NP's and PP's do not have to be applied, since the internal structures of the
NP and the PP are in the correct form already.$

$ Rule R'&4& of this section and rule R&8& of section (2.5) can be applied to
this structure and so are any other possible rules of an M-Grammar (for a brief
discussion of
restrictions on transformations with respect to CBE's cf. paragraph (4.5.3)).$
$C2 Complex Basic Expressions and the Isomorphy Principle
$ Assume we have an M-Grammar that generates the English sentence:$
    "he opts out"
$ Then it is possible to let the M-Grammar of section (4.2) correspond to
this grammar in the following way:$
$RL 20

$CD 12
Dutch                                                                   English

      SENTENCE         R&2&               L&2&           R'&2&          SENTENCE
                       /\               /\           /\ 
hij geeft de pijp aan /  \    <==>     /  \   <==>  /  \         he opts out
     Maarten         /    \           /    \       /    \ 
                    /      \         /      \     /      \
        NP         R&1&     geven     L&1&      B&2&   R'&1&    opt out      NP
                   |     de pijp    |            |  
       hij         |   aan Maarten  |            |                   he
                   |                |            |
                   |                |            |
                  hij               B&1&          he

                   syntactic         logical      syntactic
                   derivation        derivation   derivation
                   tree              tree         tree  

                                   Figure(9)
$CD 11

$ Here "hij" and "he" correspond to the basic meaning B&1&, "geven de pijp aan
Maarten" and "opt out" to B&2&, rules R&1& and R'&1& correspond to meaning rule
L&1& and R&2& and R'&2& to L&2&. This example abstracts from any other rules.
In this way it is possible to establish a correspondence between complex basic
expressions in one language and basic expressions that are not complex in
another. In a similar fashion it is possible to establish a relation
between complex basic expressions in one language and complex basic expressions
in another. Note that in this way it is not necessary to incorporate a
so-called structural transfer in the machine translation system for the
translation of CBE's.$
$C2 Complex Basic Expressions and the Lexicon
$ Basic expressions are listed in the basic lexicon of a grammar. CBE's are
special in the sense that they are listed as tree structures, while the
other basic expressions are listed as terminal nodes.$

$ A CBE is represented as a canonical surface tree structure in the
basic lexicon. By canonical surface tree structure is meant the default tree
structure for a certain sentence, phrase, etc., i.e. the structure to which
no syntactic transformations have applied. For example: if there is a passive
transformation, the canonical structure is in the active form.
Figure(10) shows the lexicon representation of the CBE:$
   "geven de pijp aan Maarten"

$RL 22
                             CL


              subj   head        obj      prepobj


              VAR    VERB        NP         PP
              V&i&    'geven'

                             det   head  head   obj


                             ART   NOUN  PREP   NP
                             'de' 'pijp' 'aan'

                                               head


                                               NOUN
                                             'Maarten'

                              Figure(10)

$ The VAR nodes are not specified (i.e. not referencing to an actual VAR) in
the dictionary. The top node (in this case CL) contains, apart from the usual
attribute-value pairs, a set of attribute-value pairs that indicates which
transformations are possible.$
$C2 Some Typical Problems
$C3 Argument Variables Embedded in a Complex Basic Expression
$ In the sentence$
   "the father gave the law to his daughter"
   (Du. "de vader legde zijn wil op aan zijn dochter")
$ there are two arguments "the father" and "the daughter" and the idiomatic
CBE "give the law to". The subject ("the father") is treated in the same way
as in the previous examples. The argument substitution rule substitutes the
variable by the NP "the father", so that it renders the
following structure:$

$RL 16
                             CL


              subj   head        obj      prepobj


              NP     VERB        NP         PP
                    'give'

           det   head        det   head  head   obj


           ART   NOUN        ART   NOUN  PREP   VAR
          'the' 'father'    'the'  'law' 'to'   x&1&

                          Figure(11)

$ in which, eventually, the NP "his daughter" substitutes the argument variable
x&1&. Special M-Rules will have to be added to an M-Grammar to achieve this
substitution. 'Normal' argument substitution rules place the variables in
their canonical positions.$

$ In the case of CBE's several argument positions embedded
in constituents are possible. Another example is$
    "Mary broke John's heart"
$ in which John is the object (V&j&) of the CBE "V&i& break V&j&'s heart".$
$C3 Variables Bound by Arguments
$ The sentence$
    "the boy lost his temper"
$ contains a possessive pronoun "his", that refers to the subject "the boy".
In the lexicon the basic expression is represented as follows:$

$RL 16
                             CL
                           / | \
                          /  |  \
                     subj/ head  \obj
                        /    |    \
                       /     |     \
                     VAR    VERB    NP
                     V&i&    'lose'   /\
                                   /  \
                               det/    \head
                                 /      \
                                /        \
                            POSSPRO     NOUN 
                	      V&i&        'temper'

                           Figure(12)

$ The M-Rule that inserts the CBE makes all possible forms of the possessive
pronoun (his, her, their, etc.). Another rule contains a check that rules out
the clauses containing the incorrect forms.$

$ In the sentence$
    "the man put the woman at her ease"
$ the possessive pronoun "her" is bound to the object "the woman". The
treatment here is similar to the one above. The lexicon representation is as
follows:$

$RL 22
                             CL


                 subj   head   obj   prepobj


                 VAR    VERB   VAR     PP
                 V&i&     'put'  V&j&

                                   head   obj


                                   PREP   NP
                                   'at'

                                      det    head


                                   POSSPRO   NOUN 
                                     V&j&      'ease'

                           Figure(13)

$C3 Restrictions on Transformations
$ If syntactic operations are restricted on a certain (idiomatic) CBE this
is specified at the top node of the CBE. For instance, the sentence$
    "it was the bucket that Pete kicked"
$ has lost its idiomatic reading. In this case an attribute-value at the CL
node specifies that
clefting with the object as focus is not allowed. Note that clefting with the
subject as focus resulting in$
    "it was Pete that kicked the bucket"
$ is allowed because the idiomatic reading in this case has been retained.
Other transformations that can have
restrictions when applied to (idiomatic) CBE's are for example passive,
topicalisation and insertion.$
$C1 Conclusion
$ The method described in this paper for the treatment of Complex Basic
Expressions can deal with the problems traditionally related to this type
of expressions. Structural transfer is not necessary since CBE's are mapped
into Basic Meanings. The grammar (with marginal modifications) can operate
on CBE's, while restrictions on operations are specified. Resolution of
ambiguities between literal and idiomatic meanings can be done by a semantic
type system. A test implementation in the Rosetta machine translation sytem
has shown that this approach is promising.$
$C1 References
Fraser, B. (1970), Idioms within a transformational grammar, in:
      Foundations of Language 6, pp 22-43.

Landsbergen J. (1982), Machine translation based on logically isomorphic
      Montague grammars, in Horecky, J.(ed.), COLING 82 (North-Holland),
      pp 175-182.

Landsbergen, J. (1984), Isomorphic grammars and their use in the Rosetta
      translation system, Paper presented at the Tutorial on Machine
      Translation, Lugano,. Philips Research M.S. 12.950.

Makkai, A. (1972), Idiom Structure in English (Mouton, The Hague)

Montague, R. (1973), The Proper Treatment of Quantification in Modern
      English, in: Hintikka, J., J. Moravsik, and P. Suppes (eds.),
      Approaches to Natural Language (Reidel, Dordrecht). (Reprinted in
      Montague, 1974).

Montague, R. (1974), Formal Philosophy: Selected Papers of Richard
      Montague, ed. by Richmond Thomason (Yale University Press, New
      Haven).

Partee, B.H. (1973), Some transformational extensions of Montague
      grammar, Journal of Philosophical Logic 2, 509-534. Reprinted in
      Partee, B.H.(ed), Montague Grammar (Academic Press, New York,
      1976), pp 51-76.
$PH
