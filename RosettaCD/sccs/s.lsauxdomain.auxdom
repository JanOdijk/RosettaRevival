h52613
s 00017/00001/03453
d D 1.2 92/02/21 15:41:33 rous 2 1
c 
e
s 03454/00000/00000
d D 1.1 91/05/23 13:13:44 leermake 1 0
c date and time created 91/05/23 13:13:44 by leermake
e
u
U
f e 0
t
T
I 1


LANGUAGE: DUTCH

KEYS  
< (*moet weg, maar ik laat ze nog even als commentaar staan,
                                  RENE
 AanIoPREPkey      Emptysubst
adjadvBADVSUFFkey morph, HS 15-4-88 
allesBINDEFPROkey
alsTHANASkey
alsofCONJkey    
DaarRADVkey       SENTENCE surfacerules 
danTHANASkey
datCONJkey        SENTENCE surface rule 
datDEMPROkey
datRELPROkey      NP rules 
deARTkey          Local PossPro 
dezeDEMADJkey     NP surfrules 
dieDEMADJkey      NP surfrules 
dieDEMPROkey      NP surfrules 
dieRELPROkey      NP rules 
ditDEMPROkey      NP surfrules 
dimBNOUNSUFFkey   morph, HS 15-4-88 
DoorbyPREPkey     Emptysubst 
DubbelpuntPUNCkey
ECkey
eenARTkey         NP rules 
Elkaarkey         Zichspelling 
EMPTYkey          Emptysubst 
ergensRADVkey
ERECkey
ErRADVkey         Local PossAdj 
HetARTkey         Local PossPro 
HetBPERSPROkey    Startverbprules 
HierRADVkey       SENTENCE surfacerules 
HijBIGPROkey      NOC 
HijBPERSPROkey    Local IndefPro 
iemandBINDEFPROkey
ietsBINDEFPROkey
IKBIGPROkey       NOC 
jegenBPERSPROkey  local POSSADJ 
JeREFLPROkey      Zichspelling 
jezelfkey
jijBPERSPROkey    mooddetermination 
JijBIGPROkey      NOC 
jouzelfkey     
JullieBIGPROkey   NOC 
KommaPUNCkey      SentenceOK 
MeREFLPROkey      Zichspelling 
mezelfkey
MeerQkey          local Adv/AdjComp 
MeestQkey         local Adv/AdjSup 
MenBINDEFPROkey   Local IndefPro 
meePREPkey
metPREPkey
MijREFLPROkey     Zichspelling 
mijzelfkey
negkey
nergensRADVkey
niemandBINDEFPROkey
nietsBINDEFPROkey
OfCONJkey         SENTENCE surface rule 
OmCONJkey         SENTENCE surface rule 
OnsREFLPROkey     Zichspelling 
onszelfkey
overalRADVkey
poskey          
presrefemptykey 
pastrefemptykey 
retrorefemptykey 
hebbenbverbkey    retro, deixisretroadaptation, deixis1 en 2, 
                     superdeixis1 en 2 
hetPROSENTkey     substitution 
PuntkommaPUNCkey
PuntPUNCkey
teTEkey
toePREPkey
totPREPkey
UBIGPROkey        NOC 
UitroepPUNCkey
uBPERSPROkey      mooddetermination 
UREFLPROkey       Zichspelling 
uzelfkey
vanwelPROSENTkey
vannietPROSENTkey
VanPREPkey        Local PossPro/Adj 
VoorIoPREPkey     VP4 
VraagPUNCkey
waarRADVkey
watindefprokey    NP Surfrules 
watwhprokey       NP Surfrules 
WijBIGPROkey      NOC 
WordenBVERBkey    Clauseformation 
ZeGenBPERSPROkey  Emptysubst 
ZeGenBIGPROkey    NOC 
ZichREFLPROkey    Zichspelling 
zichzelfkey
ZijplBIGPROkey    NOC 
ZijsgBIGPROkey    NOC 
ZijnBVERBkey      Clauseformation; retro, deixisretroadaptation, 
                     deixis1 en 2, superdeixis1 en 2 
*)
 >

STANDARD RECORDS
<

 ADVONprsrfempty  : ADVrecord         (* tempemptydeletion *)

{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [TempAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = reference
deixis = presentdeixis
aspect = perfective
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs ]
prepkey = 0
temporal = true
possnietnp = false
thanas = omegacompl
}

 ADVONpstrfempty  : ADVrecord         (* tempemptydeletion *)

{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [TempAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = reference
deixis = pastdeixis
aspect = perfective
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = true
possnietnp = false
thanas = omegacompl
}


 ADVONrtrrfempty  : ADVrecord         (* tempemptydeletion *)

{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [TempAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = reference
deixis = omegadeixis
aspect = imperfective
retro = true
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = true
possnietnp = false
thanas = omegacompl
}


ADVONdan   : ADVrecord         (* propsubst *)

{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [otherAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = omegaTimeAdvclass
deixis = omegadeixis
aspect = omegaaspect
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs ]
prepkey = 0
temporal = false
possnietnp = false
thanas = omegacompl
}


ADVPONdan : ADVPrecord      (* tempemptydeletion *)
    
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
class = omegatimeAdvclass
deixis = omegadeixis
aspect = omegaaspect
retro = false
superdeixis = omegadeixis
actsubcefs = [otherAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = false
Radvb = false
possnietnp = false
thanas = omegacompl
thanascompl = false
coord = nocoord
}



ADVPONprsrfempty  : ADVPrecord      (* tempemptydeletion *)
    
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
class = reference
deixis = presentdeixis
aspect = perfective
retro = false
superdeixis = omegadeixis
actsubcefs = [TempAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = true
Radvb = false
possnietnp = false
thanas = omegacompl
thanascompl = false
coord = nocoord
}

ADVPONpstrfempty  : ADVPrecord      (* tempemptydeletion *)
    
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
class = reference
deixis = pastdeixis
aspect = perfective
retro = false
superdeixis = omegadeixis
actsubcefs = [TempAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = true
Radvb = false
possnietnp = false
thanas = omegacompl
thanascompl = false
coord = nocoord
}


ADVPONrtrrfempty  : ADVPrecord     (* tempiemptydeletion *)
    
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
class = reference
deixis = omegadeixis
aspect = imperfective
retro = true
superdeixis = omegadeixis
actsubcefs = [TempAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = true
Radvb = false
possnietnp = false
thanas = omegacompl
thanascompl = false
coord = nocoord
}

ADVPrecONdaar   : ADVPrecord             (* substitution *)  (*filled by JO*)
{
req           = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
class         = omegaTimeAdvClass
deixis        = omegadeixis
aspect        = omegaAspect
retro         = false
superdeixis   = omegadeixis
actsubcefs    = [locadv]
Qstatus       = false
mood          = declxpmood
thetaadv      = thetaadv100
advpatternefs = [synnovpargs]
temporal      = false
Radvb         = true
possnietnp    = false
thanas        = omegacompl
thanascompl   = false
coord = nocoord
}

ADVPrecONer       : ADVPrecord             (* substitution *)  (*filled by JO*)
{
req           = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
class         = omegaTimeAdvClass
deixis        = omegadeixis
aspect        = omegaAspect
retro         = false
superdeixis   = omegadeixis
actsubcefs    = [locadv]
Qstatus       = false
mood          = declxpmood
thetaadv      = thetaadv100
advpatternefs = [synnovpargs]
temporal      = false
Radvb         = true
possnietnp    = false
thanas        = omegacompl
thanascompl   = false
coord = nocoord
}



ADVPrecONhier     : ADVPrecord             (* substitution *) (*filled by JO*)
{
req           = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
class         = omegaTimeAdvClass
deixis        = omegadeixis
aspect        = omegaAspect
retro         = false
superdeixis   = omegadeixis
actsubcefs    = [locadv]
Qstatus       = false
mood          = declxpmood
thetaadv      = thetaadv100
advpatternefs = [synnovpargs]
temporal      = false
Radvb         = true
possnietnp    = false
thanas        = omegacompl
thanascompl   = false
coord = nocoord
}

ADVPrecONR       : ADVPrecord             (* substitution *)  (*filled by JO*)
{
req           = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
class         = omegaTimeAdvClass
deixis        = omegadeixis
aspect        = omegaAspect
retro         = false
superdeixis   = omegadeixis
actsubcefs    = [locadv]
Qstatus       = false
mood          = declxpmood
thetaadv      = thetaadv100
advpatternefs = [synnovpargs]
temporal      = false
Radvb         = true
possnietnp    = false
thanas        = omegacompl
thanascompl   = false
coord = nocoord
}



SUBADVondan        : SUBADVrecord
{
req =   [pospol, negpol, omegapol]      
env =   [pospol, negpol, omegapol]
comparatives =   [noComp]
superlatives =   [noSup]
subcs =  [otherAdv]
Qstatus =  false
class =   omegatimeadvclass
deixis =  omegadeixis
aspect =  omegaaspect
retro =   false
mood =    declxpmood  
thetaadv = thetaadv100
advpatterns =   [synnovpargs]
prepkey =     0
temporal =   false
possnietnp =   false
thanas =    omegacompl 
lastaffix = noaffix
Radvb =  false
}


SUBADVonooitBADV   : SUBADVrecord     
{
req =   [pospol, negpol, omegapol]      
env =   [pospol, negpol, omegapol]
comparatives =   [noComp]
superlatives =   [noSup]
subcs =  [TempAdv]
Qstatus =  false
class =   reference
deixis =  omegadeixis
aspect =  imperfective
retro =   false
mood =    declxpmood  
thetaadv = thetaadv100
advpatterns =   [synnovpargs]
prepkey =     0
temporal =   true
possnietnp =   true
thanas =    omegacompl 
lastaffix = noaffix
Radvb =  false
}

SUBADVonnooitBADV   : SUBADVrecord     
{
req =   [pospol, negpol, omegapol]      
env =   [negpol]
comparatives =   [noComp]
superlatives =   [noSup]
subcs =  [TempAdv]
Qstatus =  false
class =   reference
deixis =  omegadeixis
aspect =  imperfective
retro =   false
mood =    declxpmood  
thetaadv = thetaadv100
advpatterns =   [synnovpargs]
prepkey =     0
temporal =   true
possnietnp =   false
thanas =    omegacompl 
lastaffix = noaffix
Radvb =  false
}



 ADVONooitBADV   : ADVrecord         (* negadapt , JO*)

{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [TempAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = reference
deixis = omegadeixis
aspect = imperfective
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = true
possnietnp = true
thanas = omegacompl
Radvb = false
}

 ADVONnooitBADV   : ADVrecord         (* negadapt , JO*)

{
req = [pospol,negpol,omegapol]
env = [negpol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [TempAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = reference
deixis = omegadeixis
aspect = imperfective
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = true
possnietnp = false
thanas = omegacompl
Radvb = false
}


ADVPONooitBADV: ADVPrecord      (* JO *)
    
{
req   = [pospol,negpol,omegapol]
env   = [pospol,negpol,omegapol]
class = reference
deixis = omegadeixis
aspect = imperfective
retro = false
superdeixis = omegadeixis
actsubcefs = [TempAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = true
Radvb = false
possnietnp = true
thanas = omegacompl
thanascompl = false
coord = nocoord
}


ADVPONnooitBADV: ADVPrecord      (* JO *)
    
{
req   = [pospol,negpol,omegapol]
env   = [pospol,negpol,omegapol]
class = reference
deixis = omegadeixis
aspect = imperfective
retro = false
superdeixis = omegadeixis
actsubcefs = [TempAdv]
Qstatus = false
mood = declxpmood
thetaadv = thetaadv100
advpatternefs = [synnovpargs]
temporal = true
Radvb = false
possnietnp = false
thanas = omegacompl
thanascompl = false
coord = nocoord
}



SUBADVreconR        : SUBADVrecord
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [LocAdv]
Qstatus = false
class = omegaTimeAdvClass
deixis = omegadeixis
aspect = omegaAspect
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = false
possnietnp = false
thanas = omegacompl
lastaffix = noaffix
Radvb = true
}

ADVreconR    : ADVrecord
{
req = [pospol,negpol,omegapol]
env = [pospol,negpol,omegapol]
comparatives = [noComp]
superlatives = [noSup]
subcs = [LocAdv]
Qstatus = false
form = positive
eORenForm = NoForm
class = omegaTimeAdvClass
deixis = omegadeixis
aspect = omegaAspect
retro = false
mood = declxpmood
thetaadv = thetaadv100
advpatterns = [synnovpargs]
prepkey = 0
temporal = false
possnietnp = false
thanas = omegacompl
Radvb = true
}


DETongeenBDET :DETrecord
{ 
req= [pospol, negpol, omegapol] 
env= [negpol]
possnietnp= false
definite= indef
posspred = true
possnumbers = [singular, plural]
posscomas = [mass, count]
mood = declxpmood
eFormation = NoFormation
enFormation = false
eORenForm = NoForm
syntquant = omegaquant
}



DETPongeenBDET : DETPrecord
{ 
req =  [pospol, negpol, omegapol] 
env =  [pospol, negpol,omegapol]
possnietnp = false
definite = indef
posspred = true
possnumbers = [singular, plural]
posscomas =  [mass, count]
mood =    declxpmood 
eORenForm = noform
syntquant = Omegaquant          (* This seems to me to be wrong, JO *)
possgenders = [omegagender]
superdeixis = omegadeixis  
}



DETPoneenART : DETPrecord
{ 
req =  [pospol, negpol, omegapol] 
env =  [pospol, negpol,omegapol]
possnietnp = true
definite = indef
posspred = true
possnumbers = [singular]
posscomas =  [count]
mood =    declxpmood 
eORenForm = noform
syntquant = omegaquant  
possgenders = [omegagender]
superdeixis = omegadeixis  
}



PERSPROrecONhet: PERSPROrecord  (* substitution *) (* filled by JO *)
{
number=           singular      
gender=           neutgender   
person=           3            (* ! *)
animate=          OmegaAnimate          
possRform=        true          (* ! *)
NPhead=           hetNP
generalized=      false
reduced=          false
persprocases=     [nominative] (* ! *) 
}                    

PERSPROONZeGenB: PERSPROrecord  (*Emptysubst*)  (* filled by JO *)
{
number=           plural
gender=           omegagender   
person=           3            (* ! *)
animate=          yesanimate          
possRform=        false 
NPhead=           zegenNP
generalized=      true
reduced=          true
persprocases=     [nominative] (* ! *) 
}                    

INDEFPROonmen    : INDEFPROrecord      (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
definite    = def
number      = singular
possgeni    = false
possnietNP  = false
syntquant   = omegaquant
animate     = yesanimate
possRform   = false
geni        = false
NPhead      = menNP
}


INDEFPROrecONiets  : INDEFPROrecord      (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
definite    = indef
number      = singular
possgeni    = false
possnietNP  = true
syntquant   = omegaquant
animate     = noanimate
possRform   = true
geni        = false
NPhead      = ietsNP
}

INDEFPROrecONalles        : INDEFPROrecord      (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
definite    = def                           (* changed by FJ; 19-03-90 *)
number      = singular
possgeni    = false
possnietNP  = false
syntquant   = Aquant
animate     = noanimate
possRform   = true
geni        = false
NPhead      = allesNP
}

CNonCountEN            : CNrecord      (* JO *)

{  
req=               [omegapol , negpol, pospol]
env=               [omegapol , negpol, pospol]
superdeixis=       Omegadeixis
                    
class=             omegaTimeAdvClass
deixis=            omegadeixis
aspect=            omegaAspect
retro=             false

definite=          omegadef   
numbers=           [singular]
cases=             [Nominative]
genders=           [omegagender]
sexes=             []           
actsubcs=          [othernoun]
temporal=          false
possgeni=          false
animate=           Omegaanimate
human=             Omegahuman   
posscomas=         [count]
thetanp=           omegathetanp
nounpatternefs=    []
}



NPonNDFPR                 :NPrecord (* filled by JO *)
{
superdeixis=       omegadeixis
class=             omegaTimeAdvClass
deixis=            omegadeixis
aspect=            omegaAspect
retro=             false
person=            3
genders=           [omegagender]       (* ??? *)
sexes=             []                        
actsubcs=          [othernoun]
temporal=          false
human=             Omegahuman           (* ???*)
actcomas=          [count]
thetanp=           omegathetanp
nounpatternefs=    []
posspred=          true
mood=              declxpmood  
generic=           omegageneric
specQ=             yesspec            (* ??? *)
} 

PREPPonAANio          : PREPPrecord (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
mood        = declxpmood
actsubcefs  = [aan]
synppefs    = [synNP]
thetapp     = pp120
headkey     = KEY_aaniokey
class       = omegaTimeAdvClass
deixis      = omegadeixis
aspect      = omegaAspect
retro       = false
superdeixis = omegadeixis
radvkey     = 0
stranded    = false
specq       = yesspec
coord       = nocoord
}

PREPPonVOORio       : PREPPrecord (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
mood        = declxpmood
actsubcefs  = [voor]
synppefs    = [synNP]
thetapp     = pp120
headkey     = KEY_vooriokey
class       = omegaTimeAdvClass
deixis      = omegadeixis
aspect      = omegaAspect
retro       = false
superdeixis = omegadeixis
radvkey     = 0
stranded    = false
specq       = yesspec
coord       = nocoord
}

PREPPonDOORby      : PREPPrecord (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
mood        = declxpmood
actsubcefs  = [doorby]
synppefs    = [synNP]
thetapp     = pp120
headkey     = KEY_doorbykey
class       = omegaTimeAdvClass
deixis      = omegadeixis
aspect      = omegaAspect
retro       = false
superdeixis = omegadeixis
radvkey     = 0
stranded    = false
specq       = yesspec
coord       = nocoord
}


PREPPonMEE: PREPPrecord (* filled by JO *)
{
req         = [pospol,negpol,omegapol]
env         = [pospol,negpol,omegapol]
mood        = declxpmood
actsubcefs  = [instrum]
synppefs    = [synNP]
thetapp     = pp120
headkey     = KEY_meePREPkey
class       = omegaTimeAdvClass
deixis      = omegadeixis
aspect      = omegaAspect
retro       = false
superdeixis = omegadeixis
radvkey     = 0
stranded    = false
specq       = yesspec
coord       = nocoord
}


NPONEC        :NPrecord     (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = omegaanimate      (* ! *) 
human          = Omegahuman
actcomas       = []
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = nogeneric
possRform      = false
syntquant      = omegaquant
NPhead         = ECNP
specq          = omegaspec
coord       = nocoord
}

NPONerEC        :NPrecord     (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       (* ! *) 
person         = 3         
number         = singular (* ! *) 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = omegaanimate      (* ! *) 
human          = Omegahuman
actcomas       = []
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = nogeneric
possRform      = false
syntquant      = omegaquant
NPhead         = ECNP
specq          = omegaspec
coord       = nocoord
}

NPONdatDMPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def      
person         = 3         
number         = singular 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate 
human          = nohuman
actcomas       = []
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = datNP
specq          = yesspec
coord       = nocoord
}

NPONditDMPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       (* ! *) 
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate      
human          = nohuman
actcomas       = []
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = ditNP
specq          = yesspec
coord       = nocoord
}

NPONmenNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate      
human          = yeshuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = menNP
specq          = yesspec
coord       = nocoord
}


NPONallesBNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate      
human          = nohuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = Aquant
NPhead         = allesNP
specq          = yesspec
coord       = nocoord
}

NPONietsBNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate      
human          = nohuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = true
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = ietsNP
specq          = yesspec
coord       = nocoord
}

NPONnietsBNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate      
human          = nohuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = otherNP
specq          = yesspec
coord       = nocoord
}

NPONiemandBNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = true
animate        = yesanimate      
human          = yeshuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = true
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = otherNP
specq          = yesspec
coord       = nocoord
}

NPONniemandBNDFPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = true
animate        = yesanimate      
human          = yeshuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = otherNP
specq          = yesspec
coord       = nocoord
}


NPONwatWHPR  :NPrecord     (* *)  (*filled by JO *)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = indef
person         = 3         
number         = singular  
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = noanimate      
human          = nohuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = wh
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = watWHPRONP
specq          = yesspec
coord       = nocoord
}

NPONmijzelf        :NPrecord     (* Argrefl *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 1         
number         = singular 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}

NPONmezelf        :NPrecord     (* Argrefl *)   (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 1         
number         = singular 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}


NPONjezelf        :NPrecord     (* Argrefl *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 2         
number         = omeganumber
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}

NPONzichzelf        :NPrecord     (* Argrefl *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 3         
number         = omeganumber (* singular beter *) 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = omegaanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}

NPONonszelf        :NPrecord     (* Argrefl *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 1         
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}

NPONuzelf        :NPrecord     (* Argrefl *) (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       
person         = 4         
number         = singular 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate   
human          = omegaHuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = false
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zichzelfNP
specq          = yesspec
coord       = nocoord
}


NPONZeGenBprspr  :NPrecord     (* Emptysubst *) (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def       (* ! *) 
person         = 3         
number         = plural     (* ! *) 
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate      (* ! *) 
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zeGenNP
specq          = yesspec
coord       = nocoord
}

NPONHetBprspr :NPrecord     (* Startverbprules  *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = singular
cases          = [nominative]
genders        = [neutgender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = Omegaanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = true
syntquant      = omegaquant
NPhead         = hetNP
specq          = yesspec
coord       = nocoord
}

NPONIkBGPR :NPrecord     (* NOC *)                 (*filled by JO*)
{ 
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 1
number         = singular
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONJijBGPR :NPrecord     (*   NOC  *)    (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 2
number         = singular
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONHijBGPR   :NPrecord      (* NOC *)   (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = singular
cases          = [nominative]
genders        = [mascgender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONZijsgBGPR :NPrecord      (* NOC *)   (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = singular
cases          = [nominative]
genders        = [femgender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONWijBGPR   :NPrecord      (* NOC *)    (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 1
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONJullieBGPR   :NPrecord  (* NOC *)   (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 2
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood           = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONZijplBGPR   :NPrecord    (* NOC *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env            = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONUBGPR     :NPrecord    (* NOC *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 4
number         = singular
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = persproNP
specq          = yesspec
coord       = nocoord
}

NPONZegenBGPR   :NPrecord    (* NOC *) (*filled by JO*) 
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = yesanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = zegenNP
specq          = yesspec
coord       = nocoord
}

NPONElkaar :NPrecord   (* Zichspelling  *)  (*filled by JO*)
{
req            = [pospol, negpol, omegapol]
env           = [pospol, negpol, omegapol]
superdeixis    = omegadeixis
class          = omegaTimeAdvClass
deixis         = omegadeixis
aspect         = omegaAspect
retro          = false
definite       = def
person         = 3
number         = plural
cases          = [nominative]
genders        = [omegagender]
sexes          = []
actsubcs       = [othernoun]
temporal       = false
possgeni       = false
animate        = Omegaanimate
human          = Omegahuman
actcomas       = [count]
thetanp        = omegathetanp
nounpatternefs = []
posspred       = true
possnietnp     = false
mood          = declxpmood
generic        = omegageneric
possRform      = false
syntquant      = omegaquant
NPhead         = elkaarNP
specq          = yesspec
coord       = nocoord
}

>

SETS
<
SETTYPE synpatternSETtype
aanactivevps (* tc_sentenceok *)
                     = [ synaanactive, vpid9, vpid12
                       ]

SETTYPE synpatternSETtype
aanactinsubordidvps (* ridemptysubstitution1 *)
                     = [ vpid9, vpid12
                       ]

SETTYPE synpatternSETtype
aanobjvps            = [ synAANNP_DONP, synAANNP_OPENOMTESENT,         
                         synAANNP_OPENTESENT, synAANNP_QSENT,                
                         synAANNP_THATSENT, synAANNP_PROSENT,
                         synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
                         synAANNP_HETQSENT, synAANNP_PROSENT
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
aanobjadjps            = [ synAANNP_DONP, synAANNP_OPENOMTESENT,         
                         synAANNP_OPENTESENT, synAANNP_QSENT,                
                         synAANNP_THATSENT, synAANNP 
                       ] (*synAANNP as element presupposes that there are
                           adjectives that are not ergative *)
                         (*surface rules for ADJP*)

SETTYPE synpatternSETtype

accobjvps            = [
			synAANNP_DONP, 
			synCLOSEDADJPPROP, synCLOSEDNPPROP, synCLOSEDVERBPPROP,
			synDIRCLOSEDPREPPPROP, synDONP_DIROPENPREPPPROP,
                        synDONP_DIREMPTY,
			synDONP_LOCOPENPREPPPROP, synDONP_OPENADJPPROP,
			synDONP_OPENNPPROP, synDONP_OPENINFSENT,
                        synDONP_OPENTESENT, synDONP_OPENOMTESENT, 
                        synDONP_PREPOPENOMTESENT, synDONP_PREPOPENTESENT,
			synDONP_PREPNP, synDONP_PREPOPENNPPROP,
			synEMPTY_DONP, synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT, synIOEMPTY_HETQSENT,
                        synHETOPENOMTESENT,
			synHETOPENTESENT, synHETTHATSENT, synIONP_DONP,
			synIONP_HETOPENOMTESENT, synIONP_HETTHATSENT,
			synLOCCLOSEDPREPPPROP, synNP,
			synOTHERCLOSEDPREPPPROP, synPREPCLOSEDADJPPROP,
			synPREPCLOSEDNPPROP, synVOORNP_DONP ,
                           synDONP_PREPTHATSENT, synDONP_RESULTEMPTY,
                           synDONP_THATSENT, synIONP_PROSENT, synAANNP_PROSENT,
                           synEMPTY_PROSENT, synDONP_PREPPROSENT,
                           synDONP_TEMPOPENPREPPPROP, 
                         synDONP_OTHEROPENPREPPPROP , synDONP_PREPEMPTY , 
                         synDONP_PREPTHATSENT, synDONP_RESULTEMPTY, 
                         synDONP_THATSENT, synHETIFSENT, synHETQSENT,
                        vpid1, vpid2, vpid3, vpid7, vpid4, vpid10, vpid6,
                        vpid11, vpid14, vpid15, vpid16, vpid21, vpid22, vpid25,
                        vpid30, vpid31, vpid87
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
adjindobjvps          = [ synIONP_DONP, synEMPTY_DONP
                       ]

SETTYPE synpatternSETtype
adjprepobjvps          = [ 
			 synPAPREPOPENOMTESENT, synPAPREPOPENTESENT,
			 synPAPREPQSENT, synPAPREPTHATSENT, synPOSTADJPREPNP,
			 synPREPNP, synPREPOPENOMTESENT,
			 synPREPOPENTESENT, synPREPQSENT, synPREPTHATSENT 
                         ]

SETTYPE synpatternSETtype
adjppredvps          = [
			synCLOSEDADJPPROP,             
			synDONP_OPENADJPPROP,          
			synEMPTY_CLOSEDADJPPROP,       
			synIONP_CLOSEDADJPPROP,        
			synOPENADJPPROP,               
                        synzijn     (* 2/3/88, JO *)
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
adjp010vps           =
                       [
			 synHETTHATSENT, synNP, synOPENOMTESENTPROOBJ,
			 synQSENT, synTHATSENT 
                       ]

SETTYPE synpatternSETtype
adjp012vps           =
                       [
			 synAANNP_DONP, synAANNP_HETOPENOMTESENT ,
			 synAANNP_HETOPENTESENT , synAANNP_HETQSENT ,
			 synAANNP_HETTHATSENT, synAANNP_OPENOMTESENT,
			 synAANNP_OPENTESENT, synAANNP_QSENT,
			 synAANNP_THATSENT, synEMPTY_HETOPENTESENT,
			 synEMPTY_OPENTESENT, synIOEMPTY_DONP,
			 synIOEMPTY_HETOPENOMTESENT, synIOEMPTY_HETQSENT ,
			 synIOEMPTY_HETTHATSENT, synIOEMPTY_OPENOMTESENT,
			 synIOEMPTY_QSENT, synIOEMPTY_THATSENT , synIONP_DONP,
			 synIONP_HETOPENOMTESENT, synIONP_HETOPENTESENT ,
			 synIONP_HETQSENT , synIONP_HETTHATSENT,
			 synIONP_OPENOMTESENT, synIONP_OPENTESENT,
			 synIONP_QSENT, synIONP_THATSENT 
                       ]

SETTYPE synpatternSETtype
adjp120vps           =
                       [
			 synHETOPENOMTESENT, synHETOPENTESENT, synHETTHATSENT,
			 synLOCEMPTY, synLOCPREPP, synMEASUREPHRASE, synNP,
			 synOPENOMTESENT, synOPENOMTESENTPROOBJ, synOPENTESENT,
			 synPAPREPOPENOMTESENT, synPAPREPOPENTESENT,
			 synPAPREPQSENT, synPAPREPTHATSENT, synPATHPREPP,
			 synPOSTADJPREPNP, synPREPEMPTY, synPREPNP,
			 synPREPOPENOMTESENT, synPREPOPENTESENT, synPREPQSENT,
			 synPREPTHATSENT, synQSENT, synTHATSENT, synVOOREMPTY,
			 synVOORNP 
                       ]


SETTYPE synpatternSETtype
adjp123vps           =
                       [
			 synAANNP_DONP, synAANNP_HETOPENOMTESENT ,
			 synAANNP_HETOPENTESENT , synAANNP_HETQSENT ,
			 synAANNP_HETTHATSENT, synAANNP_OPENOMTESENT,
			 synAANNP_OPENTESENT, synAANNP_QSENT,
			 synAANNP_THATSENT, synEMPTY_HETOPENTESENT,
			 synEMPTY_OPENTESENT, synIOEMPTY_DONP,
			 synIOEMPTY_HETOPENOMTESENT, synIOEMPTY_HETQSENT ,
			 synIOEMPTY_HETTHATSENT, synIOEMPTY_OPENOMTESENT,
			 synIOEMPTY_QSENT, synIOEMPTY_THATSENT , synIONP_DONP,
			 synIONP_HETOPENOMTESENT, synIONP_HETOPENTESENT ,
			 synIONP_HETQSENT , synIONP_HETTHATSENT,
			 synIONP_MEASUREPHRASE, synIONP_OPENOMTESENT,
			 synIONP_OPENTESENT, synIONP_QSENT, synIONP_THATSENT 
                       ]

SETTYPE synpatternSETtype
advppredvps          = [
			synEMPTY_OTHERCLOSEDPREPPPROP, 
                	synIONP_OTHERCLOSEDPREPPPROP,   
			synOTHERCLOSEDPREPPPROP, synzijn
                       ] (*surface rules for VERBP*)


SETTYPE synpatternSETtype
alscomplvps          = [synHETIFSENT]

SETTYPE synpatternSETtype
alsofcomplvps        =
                      [
                        synASIFCLOSEDADJPPROP,  synHETASIFCLOSEDADJPPROP
                      ]


SETTYPE synpatternSETtype  (* used in Rsubstitution1, idvps that  require
                              substitution for argrel *)
argidvps            =
                     [ vpid8, vpid9, vpid12]

SETTYPE synpatternSETtype
arginNPidvps        =
                     [ vpid10, vpid11, vpid16
                     ]


BASETYPE synrel
cliticrels
                     = [ hetclrel, secondclrel, firstclrel, reflrel]
                  
SETTYPE synpatternSETtype
closedpredvps
                     =
                       [ synCLOSEDADJPPROP, synCLOSEDNPPROP (* etc *)
                       ]


SETTYPE synpatternSETtype
closedsentvps (* sentpruning *)
                     = [ synCLOSEDINFSENT, synCLOSEDTESENT , synDoorActive,
                         synAanactive, synEMPTY_CLOSEDTESENT, 
                         vpid8, vpid9, vpid12
                       ]

SETTYPE synpatternSETtype
closedxppvps         (*control rules*)
                    = [

			   synCLOSEDADJPPROP, synCLOSEDNPPROP,
                           synCLOSEDVERBPPROP,
			   synDIRCLOSEDPREPPPROP, 
			   synEMPTY_CLOSEDADJPPROP, synEMPTY_CLOSEDNPPROP,
			   synEMPTY_OTHERCLOSEDPREPPPROP, 
			   synIONP_CLOSEDADJPPROP, synIONP_CLOSEDNPPROP,
                           synIONP_OTHERCLOSEDPREPPPROP,
			   synIONP_PREPCLOSEDADJPPROP, 
                           synLOCCLOSEDPREPPPROP,
			   synOTHERCLOSEDPREPPPROP,  synPREPCLOSEDADJPPROP,
			   synPREPCLOSEDNPPROP, vpid14, vpid15, vpid31

                      ]

SETTYPE coordpatternSETtype
coordVfcps          =
                      [  Ssdc,Ssync,Sswhc,
                         Srelfinc, Somtec, Sotec, Sctec,Sprpc, Spapc
                      ]

SETTYPE coordpatternSETtype
coordV2cps          =
                      [  Smdc,Smync,Smwhc, 
                         Simpc, Scond, Slaten 
                      ]

SETTYPE synpatternSETtype
countnounvps         (*idiom rules for nouns that are count*)
                    = [
D 2
	                   vpid6, vpid15, vpid16
E 2
I 2
	                   vpid1, vpid6, vpid15, vpid16
E 2
                      ]


BASETYPE syntcat       
ctvarcats            =
                       [ VARPREPP
                       ]

SETTYPE synpatternSETtype
deepargidvps         =
                       [ vpid8, vpid9, vpid12
                       ]

SETTYPE synpatternSETtype
declcomplvps
                     = [
			synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
			synAANNP_THATSENT, synAANNP_HETOPENTESENT,
                        synASIFCLOSEDADJPPROP,
			synDONP_OPENTESENT, synDONP_OPENINFSENT,
                        synDONP_OPENOMTESENT, synDONP_PREPOPENTESENT,
                        synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT,
			synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
			synEMPTY_THATSENT, synHETOPENOMTESENT,
			synHETOPENTESENT, synHETTHATSENT,
			synIONP_HETOPENOMTESENT, synIONP_OPENOMTESENT,
			synIONP_HETTHATSENT, synIONP_OPENTESENT,
                        synIONP_OPENINFSENT,
			synIONP_THATSENT, synOPENOMTESENT,
			synOPENTESENT, synPREPOPENTESENT,
			synPREPTHATSENT, synTHATSENT ,
                        synHETASIFCLOSEDADJPPROP, synHETIFSENT,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synEMPTY_PREPEMPTY,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT,
			synPREPEMPTY_PREPOPENOMTESENT,
 			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPOPENOMTESENT,
                        synTHATSENT_LOCOPENPREPPPROP,
			synPREPNP_PREPTHATSENT, vpid8, vpid9, vpid12,
                        synDONP_PREPOPENOMTESENT
                        
                       ]


SETTYPE synpatternSETtype
detlessNPvps         = [
			vpid14, vpid20, vpid25
                       ] (*idiom rules to make NP without determiner*)

SETTYPE synpatternSETtype
detNPvps             = [
			vpid15, vpid19, vpid16, vpid1
                       ] (*idiom rules to make NP with determiner*)


SETTYPE synpatternSETtype
dirargvps            = [
			synDIRCLOSEDPREPPPROP,         
			synDIROPENPREPPPROP,           
			synDONP_DIROPENPREPPPROP, vpid11, vpid16, vpid30,
                        vpid87
                       ] (*surface rules for VERBP*)



SETTYPE synpatternSETTYPE
dirEMPTYvps          
                    =
                     [
                      synDONP_DIREMPTY , synDIREMPTY, vpid16
                     ]

SETTYPE synpatternSETtype
I 2
dirnodetidvps       = []


SETTYPE synpatternSETtype
donodetidvps         = []

SETTYPE synpatternSETtype
E 2
dooractivevps (* tc_sentenceok *)
                     = [ syndooractive
                       ]
SETTYPE synpatternSETtype
Emptyobjvps            
                     = [ synEMPTY    ,     synEMPTY_PREPEMPTY,
                           synEMPTY_PREPNP
                       ]



SETTYPE synpatternSETtype
Emptyindobjvps       
                     = [ 
		 	synEMPTY_CLOSEDADJPPROP, synEMPTY_CLOSEDNPPROP,
		 	synEMPTY_DONP, synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT, synEMPTY_MEASUREPHRASE,
			synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
			synEMPTY_OTHERCLOSEDPREPPPROP, synEMPTY_QSENT,
			synEMPTY_THATSENT, 
                           synEMPTY_PROSENT, synEMPTY_CLOSEDTESENT,
                        synIOEMPTY_HETQSENT

                       ]

SETTYPE synpatternSETtype
Extraposvps
                      =[
			synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
                        synAANNP_HETQSENT,  
                        synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
			synAANNP_QSENT, synAANNP_THATSENT,
			synASIFCLOSEDADJPPROP, synDONP_OPENTESENT,
                        synDONP_OPENOMTESENT,
			synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT,
			synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
			synEMPTY_QSENT, synEMPTY_THATSENT,
			synHETOPENOMTESENT, synHETOPENTESENT,
			synHETTHATSENT, synIONP_HETOPENOMTESENT,
                        synIOEMPTY_HETQSENT, synOPENOMTESENTPROOBJ,
			synIONP_HETTHATSENT, synIONP_OPENTESENT,
                        synIONP_OPENOMTESENT,
			synIONP_QSENT, synIONP_THATSENT,
			synOPENOMTESENT, synOPENTESENT,
			synPREPOPENTESENT, synPREPQSENT,
			synPREPTHATSENT, synQSENT, synTHATSENT ,
                        synHETASIFCLOSEDADJPPROP,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synHETIFSENT, 
                           synHETQSENT,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPOPENOMTESENT,
                        synTHATSENT_LOCOPENPREPPPROP,
			synPREPNP_QSENT, synDONP_PREPOPENOMTESENT,
                        synDONP_PREPOPENTESENT
                       ]

SETTYPE synpatternSETtype
findeclcomplvps
                      = [
			synAANNP_THATSENT, synASIFCLOSEDADJPPROP,
			synEMPTY_HETTHATSENT, synEMPTY_THATSENT,
			synHETTHATSENT, synIONP_HETTHATSENT,
			synIONP_THATSENT, synTHATSENT , synPREPTHATSENT,
                        synHETASIFCLOSEDADJPPROP,
                        synTHATSENT_LOCOPENPREPPPROP,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT,
                           synHETIFSENT,
                        synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
                        synDONP_PREPOPENTESENT, synDONP_PREPOPENOMTESENT,
                        synPREPEMPTY_PREPOPENOMTESENT, 
                        synPREPNP_PREPOPENOMTESENT
                        ]



BASETYPE synrel
genpreNEGrels (* substitution *)
                     = [ agvpadvrel, firstclrel, erposrel, erqrel, hetclrel, 
                         secondclrel, leftdislocrel, locadvrel, postsubjrel, 
                         preadvrel, reflrel, sentadvrel, shiftrel, subjrel, 
                         subjvpadvrel, tempadvrel
                       ]

SETTYPE synpatternSETtype
hetcomplvps             
                      = [
			  synEMPTY_HETOPENTESENT, synEMPTY_HETTHATSENT,
			  synHETOPENOMTESENT, synHETOPENTESENT, synHETTHATSENT,
			  synIONP_HETOPENOMTESENT, synAANNP_HETTHATSENT ,
                          synIOEMPTY_HETTHATSENT, synIONP_HETTHATSENT,
                          synIOEMPTY_HETQSENT, synIONP_HETQSENT,
                           synHETIFSENT, 
                           synHETQSENT, synIOEMPTY_HETOPENOMTESENT ,
                           synAANNP_HETOPENTESENT, synAANNP_HETOPENOMTESENT,
                           synAANNP_HETQSENT

                        ]

SETTYPE synpatternSETtype
idvps
                     = [vpid1, vpid2, vpid3, vpid4, vpid5,
                        vpid6, vpid7, vpid8, vpid9, vpid10,
                        vpid11, vpid12, vpid13, vpid14, vpid15,
                        vpid16, vpid17, vpid18, vpid19, vpid20,
                        vpid21, vpid22, vpid23, vpid24, vpid25,
                        vpid26, vpid27, vpid28, vpid29, vpid30,
                        vpid31, vpid32, vpid33, vpid34, vpid35,
                        vpid36, vpid37, vpid38, vpid39, vpid40,
                        vpid41, vpid42, vpid43, vpid44, vpid45,
                        vpid46, vpid47, vpid48, vpid49, vpid50,
                        vpid51, vpid52, vpid53, vpid54, vpid55,
                        vpid56, vpid57, vpid58, vpid59, vpid60,
                        vpid61, vpid62, vpid63, vpid64, vpid65,
                        vpid66, vpid67, vpid68, vpid69, vpid70,
                        vpid71, vpid72, vpid73, vpid74, vpid75,
                        vpid76, vpid77, vpid78, vpid79, vpid80,
                        vpid81, vpid82, vpid83, vpid84, vpid85,
                        vpid86, vpid87, vpid88, vpid89, vpid90,
                        vpid91, vpid92, vpid93, vpid94, vpid95,
                        vpid96, vpid97, vpid98, vpid99, vpid100,
                        vpid101, vpid102, vpid103, vpid104, vpid105,
                        vpid106, vpid107, vpid108, vpid109, vpid110,
                        vpid111, vpid112, vpid113, vpid114, vpid115,
                        vpid116, vpid117, vpid118, vpid119, vpid120,
                        vpid121, vpid122, vpid123, vpid124, vpid125,
                        vpid126, vpid127, vpid128, vpid129, vpid130,
                        vpid131, vpid132, vpid133, vpid134, vpid135,
                        vpid136, vpid137, vpid138, vpid139, vpid140,
                        vpid141, vpid142, vpid143, vpid144, vpid145,
                        vpid146, vpid147, vpid148, vpid149, vpid150,
                        vpid151, vpid152, vpid153, vpid154, vpid155,
                        vpid156, vpid157, vpid158, vpid159, vpid160,
                        vpid161, vpid162, vpid163, vpid164, vpid165,
                        vpid166, vpid167, vpid168, vpid169, vpid170,
                        vpid171, vpid172, vpid173, vpid174, vpid175,
                        vpid176, vpid177, vpid178, vpid179, vpid180,
                        vpid181, vpid182, vpid183, vpid184, vpid185,
                        vpid186, vpid187, vpid188, vpid189, vpid190,
                        vpid191, vpid192, vpid193, vpid194, vpid195,
                        vpid196, vpid197, vpid198, vpid199, vpid200
                       ]

SETTYPE synpatternSETtype
indobjvps 
                     = [ synIONP_CLOSEDADJPPROP, synIONP_CLOSEDNPPROP,
                         synIONP_DONP, synIONP_HETOPENOMTESENT, 
                         synIONP_HETTHATSENT, synIONP_MEASUREPHRASE,
                         synIONP_OPENTESENT, synIONP_OPENINFSENT,
                         synIONP_OTHERCLOSEDPREPPPROP,
                         synIONP_OPENOMTESENT,
                         synIONP_PREPCLOSEDADJPPROP, synIONP_QSENT,
                         synIONP_THATSENT, synIONP_MEASUREPHRASE,

                           synIONP_PREPNP, 
                           synIONP_PROSENT, synIONP_SOPROSENT,
                         vpid2, vpid3


                       ]
I 2

E 2
SETTYPE synpatternSETtype
I 2
ionodetidvps         = []

SETTYPE synpatternSETtype
E 2
indobjadjps 
                     = [ synIONP_DONP, synIONP_HETOPENOMTESENT, 
                         synIONP_HETTHATSENT, synIONP_MEASUREPHRASE,
                         synIONP_OPENTESENT, synIONP_OPENOMTESENT,
                         synIONP_QSENT, synIONP_THATSENT, synIONP
                       ] (*synIONP as element presupposes that there are
                           adjectives that are not ergative *)
                         (*surface rules for ADJP*)

SETTYPE synpatternSETtype
indobjidvps             
                     =
                       [ vpid3
                       ]


BASETYPE synrel
InsideVPAdvrels      = 
                       [ agvpadvrel, vpadvrel
                       ]
BASETYPE synrel
InsideVPArgandVrels  = 
                       [ aanobjrel, byobjrel, complrel, dirargrel, idrel,
                         indobjrel, locargrel, objrel, partrel, predrel,
                         prepobjrel, voorobjrel, 
                         auxrel, head, progauxrel
                       ]

BASETYPE SYNREL
InsideVPArgrels       = 
                       [ aanobjrel, byobjrel, complrel, dirargrel, idrel,
                         indobjrel, locargrel, objrel, partrel, predrel,
                         prepobjrel, voorobjrel
                       ]


BASETYPE synrel
insideVPrels  (* vppruning *)
                     = [ 
			   aanobjrel, agvpadvrel, argrel, auxrel, byobjrel,
			   complrel, dirargrel, 
                           gluerel, head , idrel, indobjrel,
			   instradvrel , locargrel, objrel, partrel,
			   postverbrel, postVporel, predrel,
			   prepobjrel, puncrel, strandedrel,
			   voorobjrel, vpadvrel 
                       ]


BASETYPE syntcat       (* surface rules; categories to which interjections
                          can be attached; from TOPCATS: ASP, DETP, QP, THANP,
                          CN, UTT and VERB have not been included *)
INTERJECTATTcats     =
                       [ ADJP, ADVP, NP, PREPP, SENTENCE, VERBP
                       ]


BASETYPE syntcat       (* surface rules; categories that can be interjections;
                          from TOPCATS: ASP, DETP, QP, THANP,
                          CN, UTT and VERB have not been included *)
INTERJECTIONcats     =
                       [ ADJP, ADVP, NP, PREPP, SENTENCE, VERBP
                       ]

SETTYPE synpatternSETtype
IOEMPTYadjps
                     = [ synIOEMPTY_DONP, synIOEMPTY_THATSENT, 
                         synIOEMPTY_HETTHATSENT, 
                         synIOEMPTY_HETQSENT, synIOEMPTY_QSENT,
                         synIOEMPTY_OPENOMTESENT, synIOEMPTY_HETOPENOMTESENT 
                       ] (* RADJEMPTYSUBST3 *)

SETTYPE synpatternSETtype
locadvidvps          = [ 
                       ]

SETTYPE synpatternSETtype
locargvps            = [
			synDONP_LOCOPENPREPPPROP,      
			synLOCCLOSEDPREPPPROP,         
                        synTHATSENT_LOCOPENPREPPPROP,
			synLOCOPENPREPPPROP           ,
                        vpid5, vpid7, vpid13, vpid14, vpid15, vpid21
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
massnounvps         (*idiom rules for nouns that are mass*)
                    = [
	                   vpid4, vpid14, vpid25
                      ]

SETTYPE synpatternSETtype
I 2
nodetNPidvps         = []

SETTYPE synpatternSETtype
E 2
nppredvps            = [
			synCLOSEDNPPROP, synDONP_OPENNPPROP,
			synEMPTY_CLOSEDNPPROP,
			synIONP_CLOSEDNPPROP, synOPENNPPROP,
			synzijn ,
                        synMEASUREPHRASE, synIONP_MEASUREPHRASE,
                        synEMPTY_MEASUREPHRASE
                       ] (*surface rules for VERBP*)


SETTYPE synpatternSETtype
objidvps             
                     =
                       [ vpid1, vpid2, vpid3, vpid4, vpid6, vpid10,
                         vpid21, vpid25, vpid30, vpid87
                       ]

SETTYPE synpatternSETtype
objvps                   (*It is presupposed that `het 'never occurs as an
                           object, for this purpose see objandhetvps*)

                     = [ synAANNP_DONP, synCLOSEDADJPPROP, 
                         synCLOSEDNPPROP, 
                         synCLOSEDVERBPPROP,
                         synDIRCLOSEDPREPPPROP, synDONP_DIROPENPREPPPROP,
                         synDONP_DIREMPTY,
                         synDONP_LOCOPENPREPPPROP, synDONP_OPENADJPPROP,
                         synDONP_OPENNPPROP, synDONP_OPENTESENT, 
                         synDONP_OPENOMTESENT, synDONP_OPENINFSENT,
                         synDONP_PREPNP, synDONP_PREPOPENNPPROP,
                         synDONP_PREPOPENOMTESENT,
                         synEMPTY_CLOSEDADJPPROP, 
                         synEMPTY_CLOSEDNPPROP, synEMPTY_DONP,
                         synEMPTY_OTHERCLOSEDPREPPPROP,
                         synIONP_CLOSEDADJPPROP, synIONP_CLOSEDNPPROP,
                         synIONP_DONP, 
                         synIONP_OTHERCLOSEDPREPPPROP,synIONP_PREPCLOSEDADJPPROP,
                         synLOCCLOSEDPREPPPROP,
                         synNP, 
                         synOTHERCLOSEDPREPPPROP, synPREPCLOSEDADJPPROP,
                         synPREPCLOSEDNPPROP, synVOORNP_DONP,

                           synDONP_PREPTHATSENT, synDONP_PREPOPENTESENT,
                           synDONP_PREPPROSENT,
                           
                           synDONP_RESULTEMPTY,
                           synDONP_THATSENT, 
                           synDONP_TEMPOPENPREPPPROP,
			synDONP_OTHEROPENPREPPPROP ,
			synDONP_PREPEMPTY ,
                        vpid1, vpid2, vpid3, vpid7, vpid4, vpid10, vpid6,
                        vpid11, vpid14, vpid15, vpid16, vpid21, vpid22, vpid25,
                        vpid30, vpid31, vpid87
                        ]

SETTYPE synpatternSETtype
objandhetvps           =
                         [
			  synEMPTY_HETOPENTESENT, synEMPTY_HETTHATSENT,
			  synHETOPENOMTESENT, synHETOPENTESENT, synHETTHATSENT,
			  synIONP_HETOPENOMTESENT, synIONP_HETTHATSENT,
                          synAANNP_DONP, synCLOSEDADJPPROP, 
                          synCLOSEDNPPROP, 
                          synCLOSEDVERBPPROP,
                          synDIRCLOSEDPREPPPROP, synDONP_DIROPENPREPPPROP,
                          synDONP_DIREMPTY,
                          synDONP_LOCOPENPREPPPROP, synDONP_OPENADJPPROP,
                          synDONP_OPENNPPROP, synDONP_OPENTESENT, 
                          synDONP_OPENOMTESENT, synDONP_PREPOPENOMTESENT,
                          synDONP_PREPNP, synDONP_PREPOPENNPPROP,
                          synEMPTY_CLOSEDADJPPROP, 
                          synEMPTY_CLOSEDNPPROP, synEMPTY_DONP,
                          synEMPTY_OTHERCLOSEDPREPPPROP,
                          synIONP_CLOSEDADJPPROP, synIONP_CLOSEDNPPROP,
                          synIONP_DONP, 
                          synIONP_OTHERCLOSEDPREPPPROP,synIONP_PREPCLOSEDADJPPROP,
                          synLOCCLOSEDPREPPPROP,
                          synNP, 
                          synOTHERCLOSEDPREPPPROP, synPREPCLOSEDADJPPROP,
                          synPREPCLOSEDNPPROP, synVOORNP_DONP, synPROSENT,
                           synDONP_PREPTHATSENT, 
                           synDONP_RESULTEMPTY,
                           synDONP_THATSENT, synDONP_OPENINFSENT,
                           synDONP_OTHEROPENPREPPPROP, synDONP_PREPOPENTESENT,
                           synDONP_PREPPROSENT, synAANNP_PROSENT,
                           synDONP_THATSENT, synIONP_PROSENT,
                           synHETIFSENT, 
                           synHETQSENT,
                           synDONP_TEMPOPENPREPPPROP,
                          synIOEMPTY_DONP, synAANNP_HETTHATSENT,
                          synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
                          synAANNP_HETQSENT, 
                          synIOEMPTY_HETTHATSENT, synAANNP_QSENT,
                          synIOEMPTY_HETQSENT, synIONP_HETQSENT,
                          synIOEMPTY_HETOPENOMTESENT, synDONP_PREPEMPTY,
                        vpid1, vpid2, vpid3, vpid7, vpid4, vpid10, vpid6,
                        vpid11, vpid14, vpid15, vpid16, vpid21, vpid22, vpid25,
                        vpid30, vpid31, vpid87
                         ]

SETTYPE synpatternSETtype
objadjps               = [synNP, synAANNP_DONP, synIONP_DONP,
                          synMEASUREPHRASE
                         ]
                         (* ADJP surface rule *)

SETTYPE synpatternSETtype
oblVRvps              (* VP surface rule *)
                       =
                        [
			 synCLOSEDINFSENT, synCLOSEDTESENT,
			 synOPENINFSENT ,synEMPTY_CLOSEDTESENT, synDoorActive,
                         synAanactive, synIONP_OPENINFSENT, 
                         synDONP_OPENINFSENT ,
                         vpid8, vpid9, 
                         vpid12
                        ]


SETTYPE synpatternSETtype
omteinfcompladjps (* adjsentencesubstitution*)
                     = [ synAANNP_HETOPENOMTESENT, synHETOPENOMTESENT,
                         synAANNP_OPENOMTESENT, synIONP_HETOPENOMTESENT, 
                         (* domein !! 
                         synIOEMPTY_OPENOMTESENT, synIOEMPTY_HETOPENOMTESENT,
                         *)
                         synIONP_OPENOMTESENT, synOPENOMTESENT, 
                         synPREPOPENOMTESENT, synPAPREPOPENOMTESENT
                       ]

SETTYPE synpatternSETtype
opensentvps (* sentpruning *)
                     = [ 
			synAANNP_HETOPENOMTESENT , synAANNP_HETOPENTESENT ,
			synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
			synDONP_OPENOMTESENT , synDONP_OPENTESENT,
			synDONP_PREPOPENOMTESENT , synEMPTY_HETOPENOMTESENT,
			synEMPTY_HETOPENTESENT, synEMPTY_OPENOMTESENT,
			synEMPTY_OPENTESENT, synHETOPENOMTESENT,
			synHETOPENTESENT, synIONP_HETOPENOMTESENT,
			synIONP_HETOPENTESENT , synIONP_OPENOMTESENT ,
			synIONP_OPENTESENT, synOPENINFSENT, 
                        synIONP_OPENINFSENT, synOPENOMTESENT,
			synOPENTESENT, synOPENVERBPPROP , synPREPOPENOMTESENT, 
			synPREPOPENTESENT ,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPOPENOMTESENT,
			synPREPOPENINFSENT, synDONP_PREPOPENTESENT,
                        synDONP_OPENINFSENT, synDONP_PREPOPENTESENT
                       ]

SETTYPE synpatternSETtype
openxppvps (* control rules *)
                    =  [
                           synDONP_OTHEROPENPREPPPROP ,
			   synDONP_OPENNPPROP,
			   synDONP_PREPOPENNPPROP, 
                           synDIROPENPREPPPROP, synDONP_OPENADJPPROP,
			   synDONP_DIROPENPREPPPROP, synDONP_LOCOPENPREPPPROP, 
                           synEMPTY_MEASUREPHRASE,
                           synIONP_MEASUREPHRASE,
			   synLOCOPENPREPPPROP, 
                           synMEASUREPHRASE, 
			   synOPENADJPPROP, synOPENNPPROP,
			   synOPENVERBPPROP,
			   synPREPOPENNPPROP, 
                           synTHATSENT_LOCOPENPREPPPROP,
                           synTEMPOPENPREPPPROP,
                           synDONP_TEMPOPENPREPPPROP, 
                           vpid5, vpid7, vpid11, vpid13, vpid16, vpid21,
                           vpid30, vpid87
 
                       ]

SETTYPE prepsubcsettype
otherprepsubcs       =
                       [ other
                       ]


SETTYPE advsubcSETTYPE
otheradvsubcs        =
                      [
                       otheradv
                      ]

BASETYPE synrel
outsidevpadvrels (* substitution *)
                     = [ agvpadvrel, causadvrel, locadvrel, negrel, posrel, 
                         sentadvrel, subjvpadvrel, tempadvrel ]


BASETYPE synrel
outsideVPrels (* vppruning *)
                     = [  
			   agvpadvrel, causadvrel, conjrel, firstclrel, erposrel,
			   erqrel, extraposrel, gluerel, hetclrel, secondclrel,
			   leftdislocrel, locadvrel, negrel, posrel,
			   postsubjrel, preadvrel, puncrel, reflrel, resultrel,
			   sentadvrel, shiftrel, subjrel, subjvpadvrel,
			   tempadvrel 
                       ]

SETTYPE synpatternSETtype
PAadjps (* PA meaning:postadj *)
                    = [ synPAPREPOPENOMTESENT, synPAPREPOPENTESENT, 
                        synPAPREPQSENT, synPAPREPTHATSENT, synPOSTADJPREPNP
                      ] (* TC:ADJPPExtrapos, ADJPsurfrules *)

SETTYPE synpatternSETtype
poidvps
                     =
                       [ vpid22, vpid31
                       ]

SETTYPE synpatternSETtype
popredvps
                     =
                       [
			   synDONP_PREPOPENNPPROP, synIONP_PREPCLOSEDADJPPROP, 
                           synPREPCLOSEDADJPPROP, synPREPCLOSEDNPPROP, 
                           synPREPEMPTY, synPREPOPENNPPROP, vpid31
                       ]


BASETYPE synrel
postverbrels     (* mooddetermination *) 
                     = [ postVporel, postverbrel]

BASETYPE synrel
postVPrels =
            [
	    ascomplrel, extraposrel, gluerel, puncrel, relsentrel,
	    resultrel, spostverbrel, thancomplrel 
            ]

SETTYPE synpatternSETtype
pp120pps    = 
              [ synNP, synLOCPREPP, synTHATSENT, synOPENTESENT,
                synOPENNPPROP, vpid17, vpid18, vpid19, vpid20
              ]

BASETYPE synrel
Preaanobjrels       (*TC:ADJSUBST *) (* negrel?? *)
                     = [locadvrel,tempadvrel, causadvrel, negrel, locargrel
                       ]

BASETYPE synrel
preERposrels     (* substitution *)
                     = [ leftdislocrel, shiftrel, subjrel, hetclrel, secondclrel,
                         firstclrel, reflrel, preadvrel, erqrel]

BASETYPE synrel
preerXposrels    (* subjectshift *)
                     = [ leftdislocrel, shiftrel, subjrel, hetclrel, secondclrel,
                         firstclrel, erqrel ]
 

BASETYPE synrel
Preindobjrels          
                     = [ agvpadvrel,subjvpadvrel,vpadvrel,
                         byobjrel
                       ]

BASETYPE synrel        (* tc_whshift *)
Prelocadvrels             
                     = 
                       [ subjrel, leftdislocrel, shiftrel, conjrel, erposrel,
                         erqrel, reflrel, firstclrel, secondclrel, preadvrel,
                         tempadvrel, sentadvrel
                       ]



BASETYPE synrel
Preobjrels             
                     = 
                       [ agvpadvrel, subjvpadvrel, vpadvrel,
                         aanobjrel, byobjrel, indobjrel, voorobjrel
                       ]


SETTYPE synpatternSETTYPE
prepEMPTYvps          
                    =
                     [
                      synPrepEMPTY,
                           synEMPTY_PREPEMPTY,
                           synPREPEMPTY_PREPEMPTY,
                           synPREPEMPTY_PREPTHATSENT,
			synDONP_PREPEMPTY ,
			synPREPEMPTY_PREPNP,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_PREPEMPTY
                     ]

BASETYPE synrel
Prepreadvrels      (* tc_whshift *)
                     =
                      [ shiftrel, leftdislocrel, subjrel, reflrel, firstclrel,
                        secondclrel, conjrel
                      ]


BASETYPE synrel
Prepostsubjrels      (* tc_whshift *)
                     =
                      [ conjrel, leftdislocrel, shiftrel, sentadvrel, 
                        erposrel,erqrel, tempadvrel
                      ]


BASETYPE synrel        (* tc_whshift *)
Pretempadvrels             
                     = 
                       [ subjrel, leftdislocrel, shiftrel, conjrel, erposrel,
                         erqrel, reflrel, firstclrel, secondclrel, 
                         sentadvrel
                       ]



SETTYPE synpatternSETtype
prepobjvps           = [
                           synDONP_PREPNP,
			   synDONP_PREPOPENNPPROP, 
                           synDONP_PREPOPENOMTESENT , synDONP_PREPOPENTESENT,
                           synDONP_PREPPROSENT,
			   synIONP_PREPCLOSEDADJPPROP, synPREPCLOSEDADJPPROP,
			   synPREPCLOSEDNPPROP, 
                           synPREPNP, synPREPEMPTY_PREPNP,
                           synPREPNP_PREPEMPTY, synPREPNP_PREPNP,
			   synPREPOPENNPPROP, synPREPOPENOMTESENT ,
                           synPREPOPENTESENT, synPREPQSENT,
			   synPREPTHATSENT, 
			synDONP_PREPTHATSENT,
			synEMPTY_PREPNP, synPREPEMPTY_PREPOPENOMTESENT,
                        synPREPEMPTY_PREPTHATSENT, 
			synIONP_PREPNP,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPOPENOMTESENT,
			synPREPNP_PREPTHATSENT,
			synPREPNP_QSENT,
			synPREPNP_THATSENT,
			synPREPOPENINFSENT, 
                        vpid22, vpid31
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
alsoemptyprepobjvps = [
                           synDONP_PREPNP,
			   synDONP_PREPOPENNPPROP, 
                           synDONP_PREPOPENOMTESENT , synDONP_PREPOPENTESENT,
                           synDONP_PREPPROSENT,
			   synIONP_PREPCLOSEDADJPPROP, synPREPCLOSEDADJPPROP,
			   synPREPCLOSEDNPPROP, synPREPEMPTY ,
                           synPREPNP, synPREPNP_PREPNP,
			   synPREPOPENNPPROP, synPREPOPENOMTESENT ,
                           synPREPOPENTESENT, synPREPQSENT,
			   synPREPTHATSENT, synDONP_PREPEMPTY ,
			synDONP_PREPTHATSENT,
			synEMPTY_PREPEMPTY,
			synEMPTY_PREPNP,
			synIONP_PREPNP,
			synPREPEMPTY_PREPEMPTY,
			synPREPEMPTY_PREPNP,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPEMPTY_PREPTHATSENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPEMPTY,
			synPREPNP_PREPOPENOMTESENT,
			synPREPNP_PREPTHATSENT,
			synPREPNP_QSENT,
			synPREPNP_THATSENT,
			synPREPOPENINFSENT,
                        vpid22, vpid31
                       ] 

SETTYPE synpatternSETtype
prepobjadjps         = [
			synPREPNP, synPREPNP_PREPNP, synPATHPREPP, 
			synPREPOPENOMTESENT, synPREPOPENTESENT, 
                        synPREPQSENT, synPREPTHATSENT 
                       ] (*surface rules for ADJP*)
BASETYPE synrel
prepprepobjrels        (* ?? TC:ADJSUBST *)
                     = [locadvrel,tempadvrel, causadvrel, negrel, locargrel,
                        degreemodrel, indobjrel, objrel, voorobjrel
                       ]

SETTYPE synpatternSETtype
preprepobjvps        = [synPREPNP_PREPNP, synPREPNP_PREPOPENOMTESENT,
                        synPREPNP_PREPTHATSENT
                       ] (*surface rules for VERBP*)
                          (* must be extended for idioms; *)


SETTYPE synpatternSETtype
prepppredvps         = [
			synEMPTY_OTHERCLOSEDPREPPPROP, 
                	synIONP_OTHERCLOSEDPREPPPROP,   
			synOTHERCLOSEDPREPPPROP, synzijn       ,
                        synDONP_OTHEROPENPREPPPROP 
                       ] (*surface rules for VERBP*)

SETTYPE synpatternSETtype
prepsentadjps   = [
			synPREPOPENOMTESENT, synPREPOPENTESENT, 
                        synPREPQSENT, synPREPTHATSENT,
                        synPAPREPOPENOMTESENT, synPAPREPOPENTESENT, 
                        synPAPREPQSENT, synPAPREPTHATSENT
                       ] (*surface rules for ADJP*)

BASETYPE synrel
Presentadvrels1      =
                       [ leftdislocrel, shiftrel, subjrel,
                         hetclrel, secondclrel, firstclrel, reflrel
                       ]

BASETYPE synrel
PreSentAdvrels2      =
                       [ leftdislocrel, shiftrel, subjrel, preadvrel, erqrel,
                         erposrel, tempadvrel, defRadvrel,
                         hetclrel, secondclrel, firstclrel, reflrel
                       ]

BASETYPE synrel
presubjrels  (* postsubjformation *)
                     = [ leftdislocrel, shiftrel, conjrel]


BASETYPE synrel
preVerbrels =
(* all relations that can precede the head/VERB inside VP 
   used in Verb-second
*)
              [
	       aanobjrel, agvpadvrel, argrel, byobjrel, complrel,
	       dirargrel, gluerel, idrel, indobjrel, instradvrel,
	       locargrel, meltnegrel, objrel, partrel, predrel,
	       prepobjrel, puncrel, subjvpadvrel, strandedrel,
	       voorobjrel, vpadvrel 
              ]
BASETYPE synrel
preVPrels =
           [
	    agvpadvrel, causadvrel, conjrel, defRadvrel, erposrel,
	    erqrel, firstclrel, gluerel, hetclrel, leftdislocrel,
	    locadvrel, meltnegrel, modrel, negrel, posrel,
	    postsubjrel, preadvrel, puncrel, reflrel, secondclrel,
	    sentadvrel, shiftrel, subjrel, subjvpadvrel,
	    tempadvrel 
           ]


SETTYPE synpatternSETtype  (* used in tidsuperdeixisadaptation1, idvps that take
                              a propositional argument*)
propidvps            =
                     [ vpid5, vpid7, vpid8, vpid9, vpid11, vpid12, vpid13,
                       vpid14, vpid15, vpid16, vpid21, vpid30, vpid31, vpid87
                     ]

BASETYPE syntcat
propvarcats = 
                       [ ADJPPROPVAR, ADVPPROPVAR, NPPROPVAR, PREPPPROPVAR,
                         SENTENCEVAR, VERBPPROPVAR, 
                         CLAUSEVAR
                       ]

SETTYPE synpatternSETtype
prosentvps =         
                      [
                       synAANNP_PROSENT, synEMPTY_PROSENT, 
                       synIONP_PROSENT, synPROSENT
                      ]


SETTYPE synpatternSETtype
soprosentvps =         
                      [ 
                       synIONP_SOPROSENT, synSOPROSENT
                      ]

SETTYPE synpatternSETtype
prepprosentvps  =
                      [
                       synDONP_PREPPROSENT
                      ]

SETTYPE synpatternSETtype
qcomplvps
                     =
                      [
			synAANNP_QSENT, synEMPTY_QSENT,
			synIONP_QSENT, synPREPQSENT, synQSENT ,
                           synHETQSENT, synAANNP_HETQSENT,
                        synIOEMPTY_HETQSENT

                      ]

SETTYPE synpatternSETtype
Raisingsentvps                 (* Rsubstitution2 *)
                     =
                      [
		       synEMPTY_CLOSEDTESENT, 
		       synCLOSEDINFSENT, synCLOSEDTESENT
                      ]



SETTYPE synpatternSETtype
Raisingvps                     (* Rsubstitution2 *)
                     =
                      [
		       synEMPTY_CLOSEDADJPPROP, synEMPTY_CLOSEDNPPROP,
		       synEMPTY_CLOSEDTESENT, synEMPTY_OTHERCLOSEDPREPPPROP,
		       synIONP_CLOSEDADJPPROP, synIONP_CLOSEDNPPROP,
		       synIONP_OTHERCLOSEDPREPPPROP,
		       synIONP_PREPCLOSEDADJPPROP, synCLOSEDADJPPROP,
		       synCLOSEDINFSENT, synCLOSEDNPPROP, synCLOSEDTESENT,
		       synCLOSEDVERBPPROP, synDIRCLOSEDPREPPPROP,
		       synLOCCLOSEDPREPPPROP, synOTHERCLOSEDPREPPPROP,
		       synPREPCLOSEDADJPPROP, synPREPCLOSEDNPPROP, vpid31
                      ]

SETTYPE synpatternSETtype
sentadjps           = [
			synPREPOPENOMTESENT, synPREPOPENTESENT, 
                        synPREPQSENT, synPREPTHATSENT,
                        synPAPREPOPENOMTESENT, synPAPREPOPENTESENT, 
                        synPAPREPQSENT, synPAPREPTHATSENT,
			synOPENOMTESENT, synOPENTESENT, 
                        synQSENT, synTHATSENT
                       ] (*surface rules for ADJP*)

BASETYPE synrel
sentencerels             
                     =
                      [
                       complrel, prepobjrel, leftdislocrel, subjrel, 
                       extraposrel, postsentadvrel, postadjrel, omtemodrel
                      ]

SETTYPE synpatternSETtype
sentvps (* sentpruning *)
                     = [ synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
                         synAANNP_HETOPENOMTESENT, 
                         synDONP_OPENTESENT, 
                         synDONP_OPENOMTESENT, synDONP_OPENINFSENT,
                         synEMPTY_CLOSEDTESENT, 
                         synEMPTY_HETOPENTESENT,
                         synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
                         synHETOPENOMTESENT, synHETOPENTESENT,
                         synIONP_HETOPENOMTESENT, synIONP_OPENTESENT,
                         synIONP_OPENINFSENT, synOPENINFSENT, synOPENOMTESENT,
                         synOPENTESENT, synPREPOPENTESENT, 
                         synCLOSEDINFSENT, synCLOSEDTESENT, synDoorActive,
                         synAanactive, synPREPNP_OPENOMTESENT, 
                         synDONP_PREPOPENTESENT, synDONP_PREPOPENOMTESENT, 
                         vpid8, vpid9, vpid12
                       ]

I 2
SETTYPE synpatternSETtype
subjnodetidvps       = []
E 2

SETTYPE synpatternSETtype
teinfcompladjps (* adjsentencesubstitution*)
                     = [synOPENOMTESENT]

SETTYPE synpatternSETtype
teinfcomplvps
                    = [
			synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
			synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
			synDONP_OPENTESENT, synDONP_OPENOMTESENT, 
                        synEMPTY_HETOPENTESENT,
			synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
			synHETOPENOMTESENT, synHETOPENTESENT,
			synIONP_HETOPENOMTESENT, synIONP_OPENOMTESENT,
			synIONP_OPENTESENT, synOPENOMTESENT,
			synOPENTESENT, synPREPOPENTESENT ,
                        synCLOSEDTESENT, synEMPTY_CLOSEDTESENT,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPOPENOMTESENT, synDONP_PREPOPENTESENT,
                        synDONP_PREPOPENOMTESENT
                      ]


SETTYPE synpatternSETtype
subjidvps             
                     =
                       [
                       ]



BASETYPE NPheadtype
specialnps
                     =
                       [ hetNP, ditNP, elkaarNP, zichzelfNP, datNP, jeGenNP,
                         zeGennp, ecNP
                       ]


SETTYPE synpatternSETTYPE
tempdepcomplvps
                     =
                      [
			synAANNP_OPENOMTESENT, synAANNP_OPENTESENT,
			synAANNP_QSENT, synAANNP_THATSENT,
			synASIFCLOSEDADJPPROP, synDONP_OPENTESENT,
                        synDONP_OPENOMTESENT,
                        synEMPTY_CLOSEDTESENT,
			synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT,
			synIOEMPTY_HETTHATSENT,
			synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
                        synIOEMPTY_OPENOMTESENT, 
                        synIOEMPTY_HETOPENOMTESENT,  
			synEMPTY_QSENT, synEMPTY_THATSENT,
			synIOEMPTY_QSENT, synIOEMPTY_THATSENT,
			synIOEMPTY_HETTHATSENT,
			synIOEMPTY_HETQSENT,
			synHETOPENOMTESENT, synHETOPENTESENT,
			synHETTHATSENT, synIONP_HETOPENOMTESENT,
			synIONP_HETTHATSENT, synIONP_OPENTESENT,
                        synIONP_OPENOMTESENT,
			synIONP_QSENT, synIONP_THATSENT,
			synOPENOMTESENT, synOPENTESENT,
			synPREPOPENTESENT, synPREPQSENT,
			synPREPTHATSENT, synQSENT, synTHATSENT ,
			synCLOSEDINFSENT, synCLOSEDTESENT,
			synOPENINFSENT, synIONP_OPENINFSENT,
                        synDONP_OPENINFSENT,
                        synHETASIFCLOSEDADJPPROP,
                        synTHATSENT_LOCOPENPREPPPROP, synDoorActive,
                        synAanactive, synCLOSEDVERBPPROP,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synHETIFSENT,
                           synHETQSENT,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT, synzijn, 
                           synDONP_PREPOPENOMTESENT, synDONP_PREPOPENTESENT,
                           synAANNP_HETOPENTESENT, synAANNP_HETQSENT,
                           synPREPEMPTY_PREPOPENOMTESENT, 
                           synPREPNP_PREPOPENOMTESENT, synIOEMPTY_HETQSENT,
                           synPREPNP_OPENOMTESENT, synPREPNP_QSENT,
                           vpid8, vpid9, vpid12
                      ]


SETTYPE synpatternSETTYPE
tempindepcomplvps
                     =
                      [
			synAANNP_OPENTESENT,
			synAANNP_QSENT, synAANNP_THATSENT,
			synASIFCLOSEDADJPPROP, synDONP_OPENTESENT,
                        synEMPTY_CLOSEDTESENT,
			synEMPTY_HETOPENTESENT,
			synEMPTY_HETTHATSENT,
			synIOEMPTY_HETTHATSENT,
			synIOEMPTY_HETQSENT,
			synEMPTY_OPENTESENT,
			synEMPTY_QSENT, synEMPTY_THATSENT,
			synIOEMPTY_QSENT, synIOEMPTY_THATSENT,
                        synIOEMPTY_OPENOMTESENT, 
                        synIOEMPTY_HETOPENOMTESENT,  
			synHETOPENTESENT,
			synHETTHATSENT, 
			synIONP_HETTHATSENT, synIONP_OPENTESENT,
			synIONP_QSENT, synIONP_THATSENT,
			synOPENTESENT,
			synPREPOPENTESENT, synPREPQSENT,
			synPREPTHATSENT, synQSENT, synTHATSENT ,
			synCLOSEDINFSENT, synCLOSEDTESENT,
			synOPENINFSENT, synHETASIFCLOSEDADJPPROP,
                        synTHATSENT_LOCOPENPREPPPROP, synDoorActive,
                        synAanactive, synDONP_PREPOPENTESENT,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synHETIFSENT,
                           synHETQSENT,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT, synzijn, 
                           synDONP_PREPOPENOMTESENT, 
                           synAANNP_HETOPENTESENT, synAANNP_HETQSENT,
                           synPREPEMPTY_PREPOPENOMTESENT, 
                           synPREPNP_PREPOPENOMTESENT, synIOEMPTY_HETQSENT,
                           synPREPNP_OPENOMTESENT, synPREPNP_QSENT,
                        vpid8, vpid9, vpid12
                      ]


SETTYPE synpatternSETtype
twoprepobjvps        = [synPREPNP_PREPNP,
			synPREPEMPTY_PREPNP,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPEMPTY_PREPTHATSENT,
			synPREPNP_PREPEMPTY,
			synPREPNP_PREPOPENOMTESENT,
			synPREPNP_PREPTHATSENT
                       ] 
                         (*surface rules for VERBP*)

BASETYPE synrel
Uniquerels          =
                      [
			aanobjrel, adjoinrel, auxrel, byobjrel, complrel,
			defRadvrel, dirargrel, erposrel, erqrel,
			errel, extraposrel, firstclrel, head, hetclrel, idrel,
			indobjrel, leftdislocrel, locargrel, negrel, objrel,
			partrel, posrel,  postsentadvrel, posttemprel,
			postsubjrel, predrel,  progauxrel, reflrel,
			relsentrel, resultrel, secondclrel, shiftrel, subjrel,
			terel, voorobjrel 
                      ]

BASETYPE syntcat
VARcatset            = 
                       [ ADJPPROPVAR, ADVPPROPVAR, NPPROPVAR, PREPPPROPVAR,
                         NPVAR, SENTENCEVAR, EMPTYVAR, VERBPPROPVAR, CNVAR,
                         PROSENTVAR, CLAUSEVAR, ADVPVAR, PREPPVAR, POSVAR,
                         NEGVAR
                       ] 

SETTYPE synpatternSETtype
voorobjvps           =
                       [ synVOORNP_DONP]

SETTYPE synpatternSETtype
voorobjadjps         =
                       [ synVOORNP_DONP, synVOORNP]
                       (* surface rules for ADJP, pending a discussion 
                          on ergtivity in ADJPs *)



SETTYPE synpatternSETtype
vpcomplvps           =
                      [
                       synCLOSEDVERBPPROP
                      ]

SETTYPE synpatternSETtype
vp000vps             =
                      [ synnoVPargs ]


SETTYPE synpatternSETtype
vp100vps             = [synnoVPargs]

SETTYPE synpatternSETtype
vp010vps             = 
                      [
			synASIFCLOSEDADJPPROP, synCLOSEDADJPPROP,
			synCLOSEDINFSENT, synCLOSEDNPPROP,
			synCLOSEDTESENT,synCLOSEDVERBPPROP,
			synDIRCLOSEDPREPPPROP,synHETASIFCLOSEDADJPPROP,
			synHETTHATSENT,synLOCCLOSEDPREPPPROP,
			synNP,synOTHERCLOSEDPREPPPROP,
			synPREPCLOSEDADJPPROP,synPREPCLOSEDNPPROP,
			synPREPNP,synPREPQSENT,
			synPREPTHATSENT,synPROSENT,
			synQSENT,synTHATSENT,
                           synHETIFSENT, 
                           synHETQSENT, synSOPROSENT, vpid14, vpid15
                      ]

SETTYPE synpatternSETtype
vp120vps             =
                       [
			synASIFCLOSEDADJPPROP,synCLOSEDADJPPROP,
			synCLOSEDINFSENT,synCLOSEDNPPROP,
			synCLOSEDTESENT,synCLOSEDVERBPPROP,
			synDIRCLOSEDPREPPPROP,synDIROPENPREPPPROP,
			synEMPTY,synHETASIFCLOSEDADJPPROP,
			synHETOPENOMTESENT,synHETOPENTESENT,
			synHETTHATSENT,synLOCCLOSEDPREPPPROP,
			synLOCOPENPREPPPROP,synMEASUREPHRASE,
			synNP,synOPENADJPPROP,
			synOPENINFSENT,synOPENNPPROP,
			synOPENOMTESENT,synOPENTESENT,
			synOPENVERBPPROP ,synOTHERCLOSEDPREPPPROP,
			synPREPCLOSEDADJPPROP,synPREPCLOSEDNPPROP,
			synPREPEMPTY ,synPREPNP,
			synPREPOPENNPPROP,synPREPOPENOMTESENT ,
			synPREPOPENTESENT,synPREPQSENT,
			synPREPTHATSENT,synPROSENT, synSOPROSENT,
			synQSENT,synTHATSENT,
			synaanactive,syndooractive,
                           synDIREMPTY, 
                           synHETIFSENT, 
                           synHETQSENT,
                           synTEMPOPENPREPPPROP,
                           synPREPOPENINFSENT,
                        vpid1, vpid4, vpid5, vpid6, vpid9, vpid8, vpid10,
                        vpid12, vpid13, vpid14, vpid15, vpid25, vpid31
                       ]

SETTYPE synpatternSETtype
vp123vps            =
                     [
			synAANNP_DONP,synAANNP_HETOPENOMTESENT ,
			synAANNP_HETOPENTESENT ,synAANNP_HETQSENT ,
			synAANNP_HETTHATSENT ,synAANNP_OPENOMTESENT,
			synAANNP_OPENTESENT,synAANNP_QSENT,
			synAANNP_THATSENT,synDONP_DIREMPTY ,
			synDONP_DIROPENPREPPPROP,synDONP_LOCOPENPREPPPROP,
			synDONP_OPENADJPPROP,synDONP_OPENNPPROP,
			synDONP_OPENOMTESENT ,synDONP_OPENTESENT,
			synDONP_PREPNP,synDONP_PREPOPENNPPROP,
			synDONP_PREPOPENOMTESENT ,synEMPTY_CLOSEDADJPPROP,
			synEMPTY_CLOSEDNPPROP,synEMPTY_CLOSEDTESENT,
			synEMPTY_DONP,synEMPTY_HETOPENOMTESENT,
			synEMPTY_HETOPENTESENT,synEMPTY_HETTHATSENT,
			synEMPTY_MEASUREPHRASE,synEMPTY_OPENOMTESENT,
			synEMPTY_OPENTESENT,synEMPTY_OTHERCLOSEDPREPPPROP,
			synEMPTY_QSENT,synEMPTY_THATSENT,
			synIOEMPTY_DONP ,synIOEMPTY_HETQSENT ,
			synIOEMPTY_HETTHATSENT ,synIOEMPTY_QSENT ,
			synIOEMPTY_THATSENT ,synIONP_CLOSEDADJPPROP,
                        synIOEMPTY_OPENOMTESENT,
                        synIOEMPTY_HETOPENOMTESENT,  
			synIONP_CLOSEDNPPROP,synIONP_DONP,
			synIONP_HETOPENOMTESENT,synIONP_HETOPENTESENT ,
			synIONP_HETQSENT ,synIONP_HETTHATSENT,
			synIONP_MEASUREPHRASE,synIONP_OPENINFSENT, 
                        synIONP_OPENOMTESENT ,
			synIONP_OPENTESENT,synIONP_OTHERCLOSEDPREPPPROP,
			synIONP_PREPCLOSEDADJPPROP,synIONP_QSENT,
			synIONP_SOPROSENT ,synIONP_THATSENT,
			synPREPNP_PREPNP,synTHATSENT_LOCOPENPREPPPROP,
			synVOORNP_DONP, synDONP_OPENINFSENT,
                           synDONP_PREPTHATSENT, 
                           synDONP_RESULTEMPTY,
                           synDONP_THATSENT, 
                           synEMPTY_PREPEMPTY,
                           synEMPTY_PREPNP, 
                           synIONP_PREPNP, 
                           synIONP_PROSENT, 
                           synAANNP_PROSENT,
                           synEMPTY_PROSENT, 
                           synPREPEMPTY_PREPEMPTY,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT, 
                           synDONP_TEMPOPENPREPPPROP,
			synDONP_OTHEROPENPREPPPROP ,
			synDONP_PREPEMPTY ,
			synIONP_OPENINFSENT, 
			synPREPEMPTY_PREPNP,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPEMPTY,
			synPREPNP_PREPOPENOMTESENT,
			synPREPNP_PREPTHATSENT,
			synPREPNP_QSENT, synDONP_PREPOPENTESENT,
                        vpid2, vpid3, vpid7, vpid11, vpid16, vpid21, vpid22
                     ]



SETTYPE synpatternSETtype
vp012vps              =
                       [
			synAANNP_DONP,synAANNP_HETOPENOMTESENT ,
			synAANNP_HETOPENTESENT ,synAANNP_HETQSENT ,
			synAANNP_HETTHATSENT ,synAANNP_OPENOMTESENT,
			synAANNP_OPENTESENT,synAANNP_QSENT,
			synAANNP_THATSENT,synDONP_DIREMPTY ,
			synDONP_DIROPENPREPPPROP,synDONP_LOCOPENPREPPPROP,
			synDONP_OPENADJPPROP,synDONP_OPENNPPROP,
			synDONP_OPENOMTESENT ,synDONP_OPENTESENT,
			synDONP_PREPNP,synDONP_PREPOPENNPPROP,
			synDONP_PREPOPENOMTESENT ,synEMPTY_CLOSEDADJPPROP,
			synEMPTY_CLOSEDNPPROP,synEMPTY_CLOSEDTESENT,
			synEMPTY_DONP,synEMPTY_HETOPENOMTESENT,
			synEMPTY_HETOPENTESENT,synEMPTY_HETTHATSENT,
			synEMPTY_OPENOMTESENT,synEMPTY_OPENTESENT,
			synEMPTY_OTHERCLOSEDPREPPPROP,synEMPTY_QSENT,
			synEMPTY_THATSENT,synIOEMPTY_DONP ,
			synIOEMPTY_HETQSENT ,synIOEMPTY_HETTHATSENT ,
			synIOEMPTY_QSENT ,synIOEMPTY_THATSENT ,
			synIONP_CLOSEDADJPPROP,synIONP_CLOSEDNPPROP,
			synIONP_DONP,synIONP_HETOPENOMTESENT,
			synIONP_HETOPENTESENT ,synIONP_HETQSENT ,
			synIONP_HETTHATSENT,synIONP_OPENINFSENT,
                        synIONP_OPENOMTESENT ,
			synIONP_OPENTESENT,synIONP_OTHERCLOSEDPREPPPROP,
			synIONP_PREPCLOSEDADJPPROP,synIONP_QSENT,
			synIONP_SOPROSENT ,synIONP_THATSENT,
			synPREPNP_PREPNP,synTHATSENT_LOCOPENPREPPPROP,
			synVOORNP_DONP,
                           synDONP_PREPTHATSENT, 
                           synDONP_RESULTEMPTY,
                           synDONP_THATSENT, 
                           synEMPTY_PREPEMPTY,
                           synEMPTY_PREPNP, 
                           synIONP_PREPNP, 
                           synIONP_PROSENT, 
                           synAANNP_PROSENT,
                           synEMPTY_PROSENT, 
                           synPREPEMPTY_PREPEMPTY,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT, 
                           synDONP_TEMPOPENPREPPPROP,
			synDONP_OTHEROPENPREPPPROP ,
			synDONP_PREPEMPTY ,
			synIONP_OPENINFSENT, 
			synPREPEMPTY_PREPNP,
			synPREPEMPTY_PREPOPENOMTESENT,
			synPREPNP_OPENOMTESENT,
			synPREPNP_PREPEMPTY,
			synPREPNP_PREPOPENOMTESENT,
			synPREPNP_PREPTHATSENT,
			synPREPNP_QSENT,  synDONP_PREPOPENTESENT, vpid30,
                        vpid87
                       ]

SETTYPE prepsubcSETtype
vpadvprepsubcs       =
                       [ comitative, instrum, voor
                       ]

SETTYPE synpatternSETtype
VRvps                = [
			synCLOSEDINFSENT, synCLOSEDTESENT,
			synDONP_OPENTESENT, synDONP_OPENOMTESENT,
                        synEMPTY_OPENOMTESENT,
                        synEMPTY_CLOSEDTESENT,
			synEMPTY_OPENTESENT, synIONP_OPENTESENT,
			synOPENINFSENT, synIONP_OPENINFSENT, 
                        synOPENOMTESENT, synOPENTESENT , synDONP_OPENINFSENT,
                        synDoorActive, synAanactive, vpid8, vpid9, vpid12
                       ] (*surface rules for VERBP*)


SETTYPE synpatternSETtype
wrongvps             =
                       [
			 synAANNP, synDIREMPTY, synDONP_RESULTEMPTY,
			 synDONP_TEMPOPENPREPPPROP, synEMPTY_RESULTEMPTY,
			 synIOEMPTY_DONP, synIOEMPTY_HETOPENOMTESENT,
			 synIOEMPTY_HETTHATSENT, synIOEMPTY_OPENOMTESENT,
			 synIOEMPTY_QSENT, synIOEMPTY_THATSENT, synIONP,
			 synIONP_PREPNP, synLOCEMPTY, synLOCPREPEMPTY,
			 synLOCPREPP, synOPENVERBPPROP, synPAPREPOPENOMTESENT,
			 synPAPREPOPENTESENT, synPAPREPQSENT,
			 synPAPREPTHATSENT, synPATHPREPP, synPOSTADJPREPNP,
			 synPREPNP_QSENT, synPREPNP_THATSENT,
			 synPREPOPENINFSENT, synSOPROSENT,
			 synTEMPOPENPREPPPROP, synTempADVP, synVOOREMPTY,
			 synVOORNP, synnoadjpargs 
                       ]


SETTYPE synpatternSETtype
sentcomplvps         =  (* adjp surfrules *)
                      [ synAANNP_HETOPENOMTESENT, synAANNP_HETOPENTESENT,
                        synAANNP_HETTHATSENT, synAANNP_HETQSENT, 
                        synAANNP_OPENOMTESENT,
			synAANNP_OPENTESENT, synAANNP_QSENT,
			synAANNP_THATSENT, synCLOSEDINFSENT, 
                        synCLOSEDTESENT, synDONP_OPENTESENT, 
                        synDONP_OPENOMTESENT, synDONP_PREPOPENOMTESENT,
                        synEMPTY_CLOSEDTESENT, synEMPTY_HETOPENTESENT,
                        synEMPTY_HETOPENOMTESENT, synEMPTY_HETTHATSENT,
                	synEMPTY_OPENOMTESENT, synEMPTY_OPENTESENT,
			synEMPTY_QSENT, synEMPTY_THATSENT, 
                        synHETOPENOMTESENT, synHETOPENTESENT, 
                        synHETTHATSENT, synIOEMPTY_HETTHATSENT, 
	                synIOEMPTY_OPENOMTESENT, 
                        synIOEMPTY_HETOPENOMTESENT,  
                        synIOEMPTY_HETQSENT, synIOEMPTY_THATSENT, 
                        synIOEMPTY_QSENT, synIONP_HETOPENOMTESENT,
                        synIONP_HETOPENTESENT, synIONP_HETTHATSENT, 
                        synIONP_HETQSENT, synIONP_OPENOMTESENT,
                        synIONP_OPENTESENT, synIONP_QSENT, synIONP_SOPROSENT,
    	                synIONP_THATSENT, synOPENINFSENT, 
		        synOPENOMTESENT, synOPENTESENT, 
			synPAPREPOPENOMTESENT, synPAPREPOPENTESENT, 
                        synPAPREPTHATSENT, synPAPREPQSENT, synPREPOPENOMTESENT,
                        synPREPOPENTESENT, synPREPQSENT, synPREPTHATSENT, 
                        synPROSENT, synQSENT, synTHATSENT, 
                        synTHATSENT_LOCOPENPREPPPROP,
                           synDONP_PREPTHATSENT, 
                           synDONP_THATSENT, 
                           synHETIFSENT, 
                           synHETQSENT,
                           synPREPNP_PREPTHATSENT, 
                           synPREPEMPTY_PREPTHATSENT,
                           synPREPNP_THATSENT

                      ]

SETTYPE kindsEFFSETtype
Xkinds              (* subjectshift*)
                     = [ Xk, XLk, XQk, XPk, XLQk, XPQk]
>

VARCATS : < NP              : NPVAR
            CN              : CNVAR
            EMPTY           : EMPTYVAR
            SENTENCE        : SENTENCEVAR
            CLAUSE          : CLAUSEVAR
            ADVP            : ADVPVAR
            OPENADJPPROP    : ADJPPROPVAR
            OPENNPPROP      : NPPROPVAR
            OPENPREPPPROP   : PREPPPROPVAR
            OPENADVPPROP    : ADVPPROPVAR
            OPENVERBPPROP   : VERBPPROPVAR
            CLOSEDADJPPROP  : ADJPPROPVAR
            CLOSEDNPPROP    : NPPROPVAR
            CLOSEDPREPPPROP : PREPPPROPVAR
            CLOSEDADVPPROP  : ADVPPROPVAR
            CLOSEDVERBPPROP : VERBPPROPVAR
            PREPP           : PREPPVAR
            VARPREPP        : PREPPVAR
            PROSENT         : PROSENTVAR            
          >


E 1
