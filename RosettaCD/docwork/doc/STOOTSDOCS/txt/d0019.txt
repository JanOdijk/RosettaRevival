157$FL 12
$PL 274,16
$LD 5
$OP SH=S,HY=1,la=E,ph=r,pn=c,AN=C
$NP 
$UC _
$SC &%
$AC @
$XC ~`

   

            Project ROSETTA : Machine Translation


            Topic     :  Rosetta2

    ---------------------------------------------------------







         Title        :  Utilities for Rosetta2

         Author       :  Carel Fellinger









         Doc.Nr       :  19

         Date         :  20/08/85

         Status       :  concept

         Supersedes   :  

         Distribution :  software-group

         Clearance    :  project

         Keywords     :  software
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 19                      date:20/08/85
$Np 1
_Content of this document_

$ Some utilities were made in order to ease the devellopment of Rosetta2. To
the user these utilities look like extra VAX/VMS commands.$
$ In 1 the effect of these extra commands and the way they should be invoked
is defined, and in 2 is explained how these effects are taken care of.$

_Definitions_
$ The content of the VAX/VMS primer is prerequired knowledge.
In the discription of the parameters valid for a certain command we use the
following EBNF like formalisme :$
$MA 5
$ Parts that are between [ and ] are optional, between ( and )* may be repeated
zero or more times, between < and > stands for a non terminal and between "'s
stands for a Terminal. Alternatives are seperated by |, and the rule is closed
with a ..$
<file>    = ' a VAX/VMS file discriptor '.
<antaal>  = <taal>.                            (* the source language *)
<gentaal> = <taal>.                            (* the target language *)
<inttaal> = <taal>.                            (* the interaction language *)
<taal>    = "dutch"     | "english"     |      (* the 'demo' versions *)
            "workdutch" | "workenglish".       (* the 'work' versions *)
<common>  = "common"    |                      (* the 'demo' version *)
            "workcommon".                      (* the 'work' version *)
$MA 0
$NP
$C1 The user manual
$ All the include files and modules in use by Rosetta2 have a 'demo' and a
'work' version. With the <taal> and <common> parameters you can specify what
version should be used.$
$C2 The extra commands
date,
time :
$MA 5
$ Shows the current day and time.$
$MA 0
prt <file> ("," <file>)* :
$MA 5
$ Creates a job to print the mentioned files, with a header on each page
containing the date and the file name.$
$ A bell signal is generated as soon as the files are printed.$
$MA 0
prtlow <file> ("," <file>)*:
$MA 5
$ Does the same as prt, only at a lower priority. That is this print job is
started as soon as all other print jobs with higher priority (the normal print
jobs) are finished.$
$MA 0
showp*rinter :
$MA 5
$ Shows which print jobs are waiting to be started.$
$MA 0
showq*ume :
$MA 5
$ Shows which qume job is running and which qume jobs are waiting to be
started.$
$MA 0
showd*evices :
$MA 5
$ Shows which print and qume jobs are waiting to get started, and which jobs
are running. TTB7 is the printer, and TTB6 is the qume.$
$MA 0
batch <file> ("," <file>)* :
$MA 5
$ Creates a job to execute the listed command files. The log files arn't
printed, but kept in the current directory.$
$ A bell signal is generated as soon as the files are printed.$
$MA 0
sdf <logical dir name> |
    "." <sub dir name> |
    "[" <dir name> "]" |
    :
$MA 5
$ A simpler way to change the default directory, also inhibits to go to a none
existing dictionary.$
$ Sdf without a parameter has the effect of going to your login directory,
sdf <logical dir name> has the effect of going to the directory corresponding
to the <logical dir name>, sdf "." <sub dir name> has the effect of going to
the subdirectory of the current directory with the name <sub dir name>, and
sdf "[" <dir name> "]" has the effect of going to the given directory. If the
directory doesn't exist a error message is given and your are back in the
directory you was in before you gave the sdf command. Finally a message is
given telling you in which directory you are now.$
$MA 0
cd "?" |
   |
   <name>":" |
   <name> |
   "[" <name> "]" |
   "[." <name> "]" |
   ".." |
$XC -`
   "~" :
$XC ~`
$MA 5
$ The simplest method of going through your directory structure.
Before changing the default directory, its existence is checked, if it doesn't
exist an error messages is generated and no other action is taken.$
     cd "?"            gives a explanation of the cd command.
     cd                shows the subdirectories and inquires where to go.
     cd <name>":"      go to the directory corresponding to the logical <name>.
     cd <name>         go to the subdirectory <name> of the current directory.
     cd <VMS dir name> go to the given directory.
     cd ".."           go one directory up.
$XC -`
     cd "~"            go to your login directory.
$XC ~`
$MA 0
login :
$MA 5
$ Executes your login file again.$
$MA 0
purgeall :
$MA 5
$ Purges the current directory and all its subdirectories. Only the latest
version of all the files in those directories are saved, the others are
deleted.$
$MA 0
dirs :
$MA 5
$ Shows your default directory.$
$MA 0
ls [<file>] |
   <VMS dir name> [<file>] :
$MA 5
$ ls [<file>] shows what files are in your current directory, the other format
shows what files are in the given directory. If <file> is specified then only
the files that correspond to <file> are listed.$
$MA 0
cat <file> :
$MA 5
$ Shows the content of the given file on your screen.$
$MA 0
P*ascal <file> :
$MA 5
$ Tells the Pascal compiler to compile the given file generating all possible
runtime checks.$
$MA 0
ed [qualifiers] <file> :
$MA 5
$ Calls the editor for the given file.$
$MA 0
edros [qualifiers] <taal> <naam> [<common>] :
$MA 5
$ Calls the editor for the given file of the given language. The <name>
specified should be a logical name for an include file, or a module in use by
Rosetta2.$
$MA 0
edt <file> :
$MA 5
$ Calls the editor for the given file. This editor has its keypad redefined!$
$MA 0
edtros [qualifiers] <taal> <naam> [<common>] :
$MA 5
$ Calls the editor, with its keypad redefined, for the given file of the
given language. The <name>
specified should be a logical name for an include file, or a module in use by
Rosetta2.$
$MA 0
inout "<" <file> [ ">" <file> ] |
      ">" <file> [ "<" <file> ] |
      :
$MA 5
$ Redifines the logicals infile and outfile. < gives the new file to which
infile should go, and > the same for outfile. inout without parameters
reassigns in/outfile to the terminal.$
$MA 0
geldrop "<" <file> [ ">" <file> ] |
        ">" <file> [ "<" <file> ] |
        :
$MA 5
$ Redifines the logicals infile and outfile and establishes contact with the
unix VAX in Geldrop. This doesn't work anymore because the leased line between
the two VAX's is removed.$
$MA 0
defdirs <antaal> <gentaal> <inttaal> [<common>] :
$MA 5
$ Creates the logical directory names for the given languages.$
$ These logicals are used by the edit, compile, link and execute utilities.$
$MA 0
deffiles <naam> :
$MA 5
$ Assignes values to the logicals sourcefile, listfile, objfile and exefile.
In doing some the value of the symbols sourcedir, listdir, objdir and exedir
are used together with the past <naam>. The <name>
specified should be a logical name for an include file, or a module in use by
Rosetta2$
$ These logicals are used by the edit, compile, link and execute utilities.$
$MA 0
defsyms :
$MA 5
$ Creates some special symbols used by the link utilities.$
$MA 0
com*piler <antaal> <gentaal> <module naam> [<common>] :
$MA 5
$ Compiles the given module for the given language-pair.$
$MA 0
comros*etta <taal> <module naam> [<common>] :
$MA 5
$ Compiles the given module for the given language.$
$MA 0
comup*date <taal> <module naam> [<common>] :
$MA 5
$MA 0
linker <antaal> <gentaal> <main module naam> [<common>] :
$MA 5
$ Links the given main module with all the necessary modules for the given
language-pair.$
$MA 0
linkros*etta <antaal> <gentaal> [<common>] :
$MA 5
$ Links Rosetta with all the necessary modules for the given language-pair.$
$MA 0
linkup*date <taal> :
$MA 5
$ Links the update program with all the necessary modules for the given
language-pair.$
$MA 0
remakeros*etta <antaal> <gentaal> [<common>] :
$MA 5
$ Remakes Rosetta2 for the given language-pair.$
$MA 0
remakeLI [<common>],
remakean <antaal> [<common>],
remakegen <gentaal> [<common>],
remakeIL <antaal> [<common>],
remakeMain <antaal> <gentaal> [<common>] :
$MA 5
$ Remakes the by the name suggested part of Rosetta2 for the given
language-pair.$
$MA 0
exec <antaal> <gentaal> <inttaal> <program> :
$MA 5
$ Executes the given program for the given language-pair.$
$MA 0
execros*etta <antaal> <gentaal> <inttaal> :
$MA 5
$ Executes Rosetta2 for the given language-pair.$
$MA 0
u*pdate <taal> :
$MA 5
$ Gives the possibility the change and inspect the BLEX, AIRBLEX and GIRBLEX
dictionaries of the given language. For a description of this utility see
the document "On dictionaries in Rosetta2" (R20).$
$MA 0
AMDICTtoTEXT <taal>,
TEXTtoAMDICT <taal>,
GMDICTtoTEXT <taal>,
TEXTtoGMDICT <taal>,
ATDICTtoTEXT <taal>,
TEXTtoATDICT <taal>,
GTDICTtoTEXT <taal>,
TEXTtoGTDICT <taal> :
$MA 5
$ These utilities take care of the by their name suggested action for the
dictionary of the given language. For a description of this utility see
the document "On dictionaries in Rosetta2" (R20).$
$MA 0

$C1 The implementation
$ For every extra command a symbol is defined. By executing the command file
"RosDisk:[Rosetta.SysLib]GroupLogi.com" correct values are assigned to these
symbols.$
$ Some symbols are just shorthands for VAX/VMS commands, the other symbols
take care of executing some special command files.$
$ In order to ease the implementation of these commands some group logicals
were defined. These group logicals are created at system start up, for then the
command file "RosDisk:[Rosetta]initroset.com" and the command file
"RosDisk:[Rosetta]logicals.com" are automatically executed. In these command
files the necessary commands are put to create the neded logicals. For instance
all the logical names referring to Rosetta2 modules and include files are
created. These logical names themself consist of a logical name for the
directory-part and the name of the file. The logical directory names used in
these logicals are not created at this moment, they are defined by the command
defdirs. The defdirs command is used by the edit, the compile, the link, the
exec and the remake utilities. This makes it very easy to change the actual
files upon which the other commands act, and thus to divergate between the
languages and between the work and demo versions.$ 
$ Most commands are implemented by means of these command files, all these
files reside in the directory "RosDisk:[Rosetta.SysLib]", also referred to with
the logical name SysLibDir.$
