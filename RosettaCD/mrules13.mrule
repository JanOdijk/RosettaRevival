DUTCH 13
&
\newpage
\begin{verbatim}
%
% TRANSFORMATION TModalswitch1
< m1:I1::SENTENCE{SENTENCErec1}
           [ mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      head/I2::VERB{VERBrec1}
                          [ head/I3::VERB{VERBrec2}[mu3],
                            adjoinrel/VERB{VERBrec3}[mu4] 
                          ],
                      mu5
                    ],
             mu6 
           ]
>

< m :I1::SENTENCE{SENTENCErec1}
           [ mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      head/I2::VERB{VERBrec1}
                          [ adjoinrel/VERB{VERBrec3}[mu4],
                            head/I3::VERB{VERBrec2}[mu3]
                          ],
                      mu5
                    ],
             mu6 
           ]
>

   MATCHCONDITIONS
      <
       I1: SENTENCErec1.finiteness = finite
       I2: VERBrec1.status = VV
       I3: VERBrec2.subc = modalverb
      >


(* NO COMP part *)
      DECOMP
         <
          C1: true
          A1: @
         >

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] TModalswitch1
\item[* relevant examples:]
..dat hij dit [kon doen] $\rightarrow$\\
..dat hij dit [doen kon]\\
..dat hij deze boeken [wou lezen] $\rightarrow$\\
..dat hij dze noeken [lezen wou]
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] XPPROPtoClause
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 12-MAY-1987 16:21:48  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To switch a finite modal verb and an infinitive inside a verbal
cluster.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] No COMP part
\item[\  \ suggested semantics:]dna
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}
\newpage
\begin{verbatim}
% TRANSFORMATION Tgaandeletion
< m1:CLAUSE{CLAUSErec1}
           [ mu1,
             predrel/VERBP{VERBPrec1}
                    [ I2:mu2,
                      head/VERB{VERBrec1}[mu5],
                      mu3 
                    ],
             mu4 
           ]
>

< m :CLAUSE{CLAUSErec2}
           [ mu1,
             predrel/VERBP{VERBPrec1}
                    [ I2:mu2,
                      head/VERB{VERBrec2}[mu6],
                      mu3 
                    ],
             mu4 
           ]
>

   MATCHCONDITIONS
      <
       I2: EXIST(mu2, [dirargrel/..])
      >


<
   SUBRULE
      <mu5: [ head/VERB{VERBrec2}[mu6], 
              adjoinrel/VERB{VERBrec3}
                 [head/SUBVERB{SUBVERBrec3}
                     [head/BVERB(KEY_gaanBVERBkey){BVERBrec3}] 
                 ]
            ] 
      >
      < >

      COMP
         <
          C1: CLAUSErec1.synvpefs * (VERBrec2.synvps * AUX_VRvps) <> [] AND
              SUBVERBrec3 = COPYT_bverbtosubverb(BVERBrec3) AND
              VERBrec3 = COPYT_subverbtoverb(SUBVERBrec3) AND
              VERBrec3 =
		  {
		  number    : omeganumber
		  persons   : []
		  eORenForm : NoForm
		  modus     : infinitive
		  tense     : omegatense
		  status    : bareV
		  }                                        AND
              VERBrec1 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec2.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec2.number
		  persons      : VERBrec2.persons
		  eORenForm    : VERBrec2.eORenForm
		  modus        : VERBrec2.modus
		  tense        : VERBrec2.tense
		  possvoices   : VERBrec2.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec2.synvps
		  thetavp      : VERBrec2.thetavp
                  adjuncts     : VERBrec2.adjuncts
		  CaseAssigner : VERBrec2.Caseassigner
		  subc         : VERBrec2.subc
		  perfauxs     : VERBrec2.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec2.controller
		  verbraiser   : VERBrec2.verbraiser
		  IPP          : VERBrec2.IPP
		  status       : VV
		  classes      : VERBrec2.classes
		  }                                            AND
              VERBrec2.subc = modalverb                             
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.synvpefs := [synDIROPENPREPPPROP];
         >
      DECOMP
         <
          C1: synDIROPENPREPPPROP IN CLAUSErec2.synvpefs AND
              VERBrec2.subc = modalverb
          A1: CLAUSErec1 := CLAUSErec2;
              CLAUSErec1.synvpefs := VERBrec2.synvps * AUX_VRvps;
              SUBVERBrec3 := COPYT_bverbtosubverb(BVERBrec3) ;
              VERBrec3 := COPYT_subverbtoverb(SUBVERBrec3) ;
              VERBrec3 :=
		  {
		  number    : omeganumber
		  persons   : []
		  eORenForm : NoForm
		  modus     : infinitive
		  tense     : omegatense
		  status    : bareV
		  }     ;
              VERBrec1 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec2.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec2.number
		  persons      : VERBrec2.persons
		  eORenForm    : VERBrec2.eORenForm
		  modus        : VERBrec2.modus
		  tense        : VERBrec2.tense
		  possvoices   : VERBrec2.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec2.synvps
		  thetavp      : VERBrec2.thetavp
                  adjuncts     : VERBrec2.adjuncts
		  CaseAssigner : VERBrec2.Caseassigner
		  subc         : VERBrec2.subc
		  perfauxs     : VERBrec2.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec2.controller
		  verbraiser   : VERBrec2.verbraiser
		  IPP          : VERBrec2.IPP
		  status       : VV
		  classes      : VERBrec2.classes
		  }                                           ;
         >


>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tgaandeletion
\item[* relevant examples:]
hij wil naar huis gaan -> hij wil naar huis.
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 20-MAR-1989 11:40:32  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% FILTER Fpregaandeletion

< m :CLAUSE{CLAUSErec2}
           [ mu1,
             predrel/VERBP{VERBPrec1}
                    [ I2:mu2,
                      head/VERB{VERBrec2}[mu6],
                      mu3 
                    ],
             mu4 
           ]
>

   MATCHCONDITIONS
      <
       I2: EXIST(mu2, [dirargrel/..])
      >


      DECOMP
         <
          C1: synDIROPENPREPPPROP IN CLAUSErec2.synvpefs AND
              VERBrec2.subc = modalverb
          A1: @
         >
  
&
\end{verbatim}
  \newpage
\begin{description}
\item[* name:] Fpregaandeletion
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 16-NOV-1989 11:39:06  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% TRANSFORMATION Tmodalexp1
< m1:VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        complrel/SENTENCE{SENTENCErec1}
                             [ mu3, 
                               predrel/VERBP{VERBPrec2}
                                   [ mu4,
                                     I1:rel1/VERB{VERBrec2}[I5:mu5],
                                     mu6 
                                   ],
                               mu7
                             ],
                         head/VERB{VERBrec1}[mu8],
                         mu9
                      ],
               mu10
             ]
>

< m :VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        complrel/SENTENCE{SENTENCErec2}
                             [ mu3, 
                               predrel/VERBP{VERBPrec2}
                                   [ mu4,
                                     I1:rel1/VERB{VERBrec2}[I5:mu5],
                                     mu6 
                                   ],
                               mu7
                             ],
                         head/VERB{VERBrec1}[mu8],
                         mu9
                      ],
               mu10
             ]
>


   MATCHCONDITIONS
      <
       I1: rel1 IN [head,auxrel, progauxrel]
       I5: NOT EXIST(mu5,[head/SUBVERB{SUBVERBrec2}
                           [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]]) AND
           NOT EXIST(mu5,[head/VERB{VERBrec3}
                              [ head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]
                              ]])

      >


      COMP
         <
          C1: VERBPPROPrec1.thetavp IN [vp120,vp123] AND
              SENTENCErec1.thetavp IN [vp010, vp012] AND
              SENTENCErec1.finiteness = infinite     AND
              SENTENCErec1.synvpefs - AUX_Closedsentvps <> []
          A1: SENTENCErec2 := SENTENCErec1;
              SENTENCErec2.synvpefs :=
                  SENTENCErec1.synvpefs - AUX_Closedsentvps ;
         >
      DECOMP
         <
          C1: VERBPPROPrec1.thetavp IN [vp120,vp123] AND
              SENTENCErec2.thetavp IN [vp010, vp012] AND
              SENTENCErec2.finiteness = infinite     AND
              SENTENCErec2.synvpefs -
                  AUX_Closedsentvps  <> [] 
          A1: SENTENCErec1 := SENTENCErec2;
              SENTENCErec1.synvpefs :=
                  SENTENCErec2.synvpefs -
                     AUX_Closedsentvps ;

         >

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tmodalexp1
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 5-DEC-1989 15:27:14  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

  
\newpage
\begin{verbatim}
% TRANSFORMATION Tmodalexp2
< m1:VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        complrel/SENTENCE{SENTENCErec1}
                             [ mu3, 
                               predrel/VERBP{VERBPrec2}
                                   [ mu4,
                                     I1:rel1/VERB{VERBrec2}[mu5],
                                     mu6 
                                   ],
                               mu7
                             ],
                         head/VERB{VERBrec1}[mu8],
                         mu9
                      ],
               mu10
             ]
>

< m :VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        complrel/SENTENCE{SENTENCErec1}
                             [ mu3, 
                               predrel/VERBP{VERBPrec2}
                                   [ mu4,
                                     I1:rel1/VERB{VERBrec2}[mu5],
                                     mu6 
                                   ],
                               mu7
                             ],
                         head/VERB{VERBrec1}[mu8],
                         mu9
                      ],
               mu10
             ]
>


   MATCHCONDITIONS
      <
       I1: rel1 IN [head,auxrel, progauxrel]
       m1: EXIST(mu5,[head/SUBVERB{SUBVERBrec2}
                           [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]]) OR
           EXIST(mu5,[head/VERB{VERBrec3}
                              [ head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]
                              ]])                                        OR
              [VERBPPROPrec1.thetavp] * [vp120,vp123] = []                OR
              [SENTENCErec1.thetavp] * [vp010, vp012] = []                OR
              SENTENCErec1.finiteness <> infinite                       OR
              SENTENCErec1.synvpefs * AUX_Closedsentvps  = []

       m : EXIST(mu5, [head/SUBVERB{SUBVERBrec2}
                           [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]]) OR
           EXIST(mu5, [head/VERB{VERBrec3}
                              [ head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_zullenBVERBkey){BVERBrec2}]
                              ]])                                        OR
              [VERBPPROPrec1.thetavp] * [vp120,vp123] = []                OR
              [SENTENCErec1.thetavp] * [vp010, vp012] = []                OR
              SENTENCErec1.finiteness <> infinite                       OR
              SENTENCErec1.synvpefs * AUX_Closedsentvps  = []

      >

      COMP
         <
          C1: true 
          A1: @
         >
      DECOMP
         <
          C1: true
          A1: @
         >

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tmodalexp2
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 5-DEC-1989 15:53:44  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% TRANSFORMATION Tmodalexp0
< m1:VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}[I2:mu2],
               mu10
             ]
>
<
 m :VERBPPROP{VERBPPROPrec1}
             [ mu1,
               predrel/VERBP{VERBPrec1}[I2:mu2],
               mu10
             ]
>

   MATCHCONDITIONS
      <
       I2: NOT EXIST(mu2, [complrel/SENTENCE{}[mu3]])
      >

      COMP
         <
          C1: true
          A1: @
         >
      DECOMP
         <
          C1: true
          A1: @
         >

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tmodalexp0
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 5-DEC-1989 15:57:10  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION Tmodalexp3
< m1:T1
>

< m :T1
>

      COMP
         <
          C1: T1.CAT <> VERBPPROP
          A1: @
         >
      DECOMP
         <
          C1: T1.CAT <> VERBPPROP
          A1: @
         >

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tmodalexp3
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 6-DEC-1989 13:04:56  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}

% TRANSFORMATION TzouInsertion
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    head/VERB{VERBrec3}
                        [head/VERB{VERBrec1}
                             [head/SUBVERB{SUBVERBrec1}
                                  [I1:head/BVERB(KEY1){BVERBrec1}]
                             ],
                         adjoinrel/VERB{VERBrec2}[mu8]
                        ],
                     mu3
                   ],
            mu4
           ] 
>

< m :CLAUSE{CLAUSErec2}
           [mu1,
            predrel/VERBP{VERBPrec1}
                  [mu2,
                   head/VERB{VERBrec5}
                       [head/VERB{VERBrec4}
                            [head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_zullenbverbkey){BVERBrec2}[ ]]
                            ],
                        adjoinrel/VERB{VERBrec7}
                                   [head/VERB{VERBrec6}
                                        [head/SUBVERB{SUBVERBrec3}
                                             [I2:head/BVERB(KEY2){BVERBrec3}]
                                        ],
                                    adjoinrel/VERB{VERBrec2}[mu8]
                                   ]
                        ],
                    mu3
                   ],
              mu4
           ] 

>
   MATCHCONDITIONS
      <
       I1: KEY1 = KEY_kanirr1BVERBkey OR
           KEY1 = KEY_kanirr2BVERBkey OR
           KEY1 = KEY_moetirr1BVERBkey OR
           KEY1 = KEY_moetirr2BVERBkey 
       I2: KEY2 = KEY_kan1BVERBkey OR
           KEY2 = KEY_kan2BVERBkey OR
           KEY2 = KEY_moet1BVERBkey OR
           KEY2 = KEY_moet2BVERBkey 
      >


      COMP
         <
          C1:((CLAUSErec1.deixis = pastdeixis) AND
              (CLAUSErec1.superdeixis = omegadeixis) AND
              (CLAUSErec1.aspect = perfective) AND
              (CLAUSErec1.retro = false) AND
              (CLAUSErec1.finiteness = finite) AND
              (CLAUSErec1.thetavp = VERBrec3.thetavp ) AND
              (CLAUSErec1.synvpefs * VERBrec3.synvps <> []) AND
              (VERBrec1.modus = omegamodus) AND
              (VERBrec1.tense = pasttense) AND
              (VERBrec1.status = bareV) AND
              (VERBrec3.tense = VERBrec1.tense) AND
              (VERBrec3.modus = VERBrec1.modus) AND
              (VERBrec3.persons = VERBrec1.persons) AND
              (VERbrec3.number = VERbrec1.number) AND
              (CLAUSErec1.aktionsarts = [stative])
             )
             C11:KEY1 = KEY_kanirr1BVERBkey
             A11: KEY2 := KEY_kan1BVERBkey
             C12: KEY1 = KEY_kanirr2BVERBkey
             A12: KEY2 := KEY_kan2BVERBkey
             C13: KEY1 = KEY_moetirr1BVERBkey
             A13: KEY2 := KEY_moet1BVERBkey
             C14: KEY1 = KEY_moetirr2BVERBkey
             A14: KEY2 := KEY_moet2BVERBkey
             
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp010;
              CLAUSErec2.synvpefs := [synCLOSEDinfSENT];
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.persons := VERBrec1.persons;
              VERBrec4.number := VERBrec1.number;
              VERBrec4.status := VERBrec1.status;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              SUBVERBrec3 := COPYT_bverbtosubverb(BVERBrec3);
              VERBrec6 := COPYT_subverbtoverb(SUBVERBrec3);
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              (* other values retain their default values *)
              VERBrec7 := VERBrec3;
              VERBrec7.synvpefs2 := VERBrec2.synvps;
              VERBrec7.tense := VERbrec6.tense;             
              VERBrec7.modus := VERbrec6.modus;             
              VERBrec7.persons := VERbrec6.persons;             
              VERBrec7.number := VERbrec6.number;
              (* note that the records of the normal and irrealis modals 
                 are the same! *)             
         >
      DECOMP
         <
          C1:((CLAUSErec2.deixis = pastdeixis) AND
              (CLAUSErec2.superdeixis = omegadeixis) AND
              (CLAUSErec2.aspect = perfective) AND
              (CLAUSErec2.retro = false) AND
              (CLAUSErec2.finiteness = finite) AND
              (CLAUSErec2.thetavp = vp010) AND
              (CLAUSErec2.synvpefs = [synCLOSEDinfSENT]) AND
              (VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      tense : pasttense
                      status : bareV
                     }
               ) AND
              VERBrec4.persons <> [] AND
              VERBrec4.number <> omeganumber AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 = COPYT_subverbtoverb(SUBVERBrec3)) AND
               (SUBVERBrec3 = COPYT_bverbtosubverb(BVERBrec3)) AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              
              (* other values: default values *)
                 AND
              (CLAUSErec2.aktionsarts = [stative])
             )
             C11: KEY2 = KEY_kan1BVERBkey
             A11: KEY1 := KEY_kanirr1BVERBkey
             C12: KEY2 = KEY_kan2BVERBkey
             A12: KEY1 := KEY_kanirr2BVERBkey
             C13: KEY2 = KEY_moet1BVERBkey
             A13: KEY1 := KEY_moetirr1BVERBkey
             C14: KEY2 = KEY_moet2BVERBkey
             A14: KEY1 := KEY_moetirr2BVERBkey
 

          A1: SUBVERBrec1 := COPYT_bverbtosubverb(BVERBrec1);
              VERBrec1 := COPYT_subverbtoverb(SUBVERBrec1);
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec3 := VERBrec7;
              VERBrec3.synvpefs2 := [];
              VERBrec3.tense := VERBrec1.tense;
              VERBrec3.modus := VERBrec1.modus;
              VERBrec3.persons := VERBrec1.persons;
              VERBrec3.number := VERBrec1.number;
              (* note that the records of the normal and irrealis modals
                 are the same! *)
              CLAUSErec1 := CLAUSErec2;
              CLAUSErec1.thetavp := VERBrec3.thetavp;
              CLAUSErec1.synvpefs := VERBrec3.synvps;
              CLAUSErec1.voice := active; (* passief moet nog *)
              
         >


&
\end{verbatim}

\newpage
\begin{description}
\item[* name:] Tzouinsertion
\item[* relevant examples:] hij "kon" komen $rightarrow$ hij zou kunnen komen \\
hij "moest" komen $rightarrow$ hij zou moeten komen
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] TC_zouinsertion
\item[* date of creation:] 08-JAN-1990 
\item[* author:] Lisette Appelo
\item[* copied from:]Rfinirrmodaldeixis
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Irrealis construction of modals {\em kunnen} and {\em moeten}.
               This rule is for a finite independent clause. This
               is a special rule,because irrealis is expressed by the auxiliary 
               verb {\em zou}. 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: \\
\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language: \\

\item in other languages: \\

\end{enumerate}
\item[* relevant literature/documents:] doc 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: \\
\end{enumerate}
\end{description}

% FILTER FzouInsertion
< m:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    head/VERB{VERBrec3}
                        [head/VERB{VERBrec1}
                             [head/SUBVERB{SUBVERBrec1}
                                  [I1:head/BVERB(KEY1){BVERBrec1}]
                             ],
                         adjoinrel/VERB{VERBrec2}[mu8]
                        ],
                     mu3
                   ],
            mu4
           ] 
>


   MATCHCONDITIONS
      <
       I1: KEY1 = KEY_kanirr1BVERBkey OR
           KEY1 = KEY_kanirr2BVERBkey OR
           KEY1 = KEY_moetirr1BVERBkey OR
           KEY1 = KEY_moetirr2BVERBkey 
      >


         <
          C1:((CLAUSErec1.deixis = pastdeixis) AND
              (CLAUSErec1.superdeixis = omegadeixis) AND
              (CLAUSErec1.aspect = perfective) AND
              (CLAUSErec1.retro = false) AND
              (CLAUSErec1.finiteness = finite) AND
              (CLAUSErec1.thetavp = VERBrec3.thetavp) AND
              (CLAUSErec1.synvpefs * VERBrec3.synvps <> []) AND
              (CLAUSErec1.aktionsarts = [stative]) AND
              (VERBrec1.modus = omegamodus) AND
              (VERBrec1.tense = pasttense) AND
              (VERBrec1.status = bareV) AND
              (VERBrec3.tense = VERBrec1.tense) AND
              (VERBrec3.modus = VERBrec1.modus) AND
              (VERBrec3.persons = VERBrec1.persons) AND
              (VERbrec3.number = VERbrec1.number)
             )
             C11: KEY1 = KEY_kanirr1BVERBkey
             A11: @
             C12: KEY1 = KEY_kanirr2BVERBkey
             A12: @
             C13: KEY1 = KEY_moetirr1BVERBkey
             A13: @
             C14: KEY1 = KEY_moetirr2BVERBkey
             A14: @
             
          A1: @
         >

&
\end{verbatim}

\newpage
\begin{description}
\item[* name:] Fzouinsertion
\item[* relevant examples:] hij "kon" komen $rightarrow$ hij zou kunnen komen \\
hij "moest" komen $rightarrow$ hij zou moeten komen
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] TC_zouinsertion
\item[* date of creation:] 09-JAN-1990 
\item[* author:] Lisette Appelo
\item[* copied from:]Rfinirrmodaldeixis
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Filter for the rule that accounts for:
               Irrealis construction of modals {\em kunnen} and {\em moeten}.
               This rule is for a finite independent clause. This
               is a special rule,because irrealis is expressed by the auxiliary 
               verb {\em zou}. 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: \\
\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language: \\

\item in other languages: \\

\end{enumerate}
\item[* relevant literature/documents:] doc 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: \\
\end{enumerate}
\end{description}


\newpage
\begin{verbatim}

% RULE Rwilinsertion
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            subjvpadvrel/ADVP{ADVPrec1}
                        [mu11,
                         head/ADV{ADVrec1}
                             [head/SUBADV{SUBADVrec1}
                                  [I1: head/BADV(KEY1){BADVrec1}]
                             ],
                         mu12
                        ],
            mu10,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    head/T1,
                    mu3
                   ],
            mu4
           ] 
>
< m :CLAUSE{CLAUSErec2}
           [mu1,
            subjvpadvrel/ADVP{ADVPrec1}
                        [mu11,
                         head/ADV{ADVrec1}
                             [head/SUBADV{SUBADVrec1}
                                  [I1: head/BADV(KEY1){BADVrec1}]
                             ],
                         mu12
                        ],
            mu10,
            predrel/VERBP{VERBPrec1}
                  [mu15,
                   head/VERB{VERBrec5}
                       [head/VERB{VERBrec4}
                            [head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_wil2bverbkey){BVERBrec2}[ ]]
                            ],
                        adjoinrel/T2
                        ],
                    mu3
                   ],
              mu4
           ] 
>

   MATCHCONDITIONS
      <
       I1: KEY1 = KEY_graagBADVkey OR
           KEY1 = KEY_lieverBADVkey 
      >
<
   SUBRULE
     <mu2 :[mu16]>
     <mu15:[mu16]>

<
SUBRULE
     <T1: VERB{VERBrec3}
              [head/VERB{VERBrec1}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >
     <T2: VERB{VERBrec7}
              [head/VERB{VERBrec6}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >


    COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              (VERBrec3.tense = VERBrec1.tense) AND
              (VERBrec3.modus = VERBrec1.modus) AND
              (VERBrec3.persons = VERBrec1.persons) AND
              (VERbrec3.number = VERbrec1.number) AND
              CLAUSErec1.thetavp = VERBrec3.thetavp AND
              CLAUSErec1.synvpefs * VERBrec3.synvps <> [] AND
              CLAUSErec1.voice = active
             )
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [momentaryclass] <> []
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, movementclass] <> []
              A14: @
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERBrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERBrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec7 := VERBrec3;
              VERBrec7.synvpefs2 := VERBrec2.synvps;
              VERBrec7.tense := VERbrec6.tense;             
              VERBrec7.modus := VERbrec6.modus;             
              VERBrec7.persons := VERbrec6.persons;             
              VERBrec7.number := VERbrec6.number;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec4.persons <> [] AND
              VERBrec4.number <> omeganumber AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              (* other values: default values *)
                AND
                VERBrec7.synvpefs2 = VERBrec2.synvps AND
                VERBrec7.tense = VERbrec6.tense AND      
                VERBrec7.modus = VERbrec6.modus AND          
                VERBrec7.persons = VERbrec6.persons AND             
                VERBrec7.number = VERbrec6.number AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec7.classes * [durativeclass, movementclass] <> []
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C12: VERBrec7.classes * [iterativeclass] <> []
              A12: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C13: VERBrec7.classes * [stativeclass] <> []
              A13: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C14: VERBrec7.classes * [momentaryclass] <> []
              A14: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];

          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERbrec4.modus;
              VERBrec3 := VERBrec7;
              VERBrec3.synvpefs2 := [];
              VERBrec3.tense := VERBrec1.tense;
              VERBrec3.modus := VERBrec1.modus;
              VERBrec3.persons := VERBrec1.persons;
              VERBrec3.number := VERBrec1.number;
              CLAUSErec1.thetavp := VERBrec3.thetavp;
              CLAUSErec1.synvpefs := VERBrec3.synvps;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

SUBRULE
     <T1: VERB{VERBrec1}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>
     <T2: VERB{VERBrec6}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>


   COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              CLAUSErec1.thetavp = VERBrec1.thetavp AND
              CLAUSErec1.synvpefs * VERBrec1.synvps <> [] AND
              CLAUSErec1.voice = active
             )
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [momentaryclass] <> []
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, movementclass] <> []
              A14: @
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERbrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERbrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec1.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec1.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec1.prepkey1
		  prepkey2     : VERBrec1.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec6.status := bareV;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec6.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec6.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec6.prepkey1
		  prepkey2     : VERBrec6.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              
              (* other values: default values *)
                AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec6.classes * [durativeclass, movementclass] <> []
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C12: VERBrec6.classes * [iterativeclass] <> []
              A12: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C13: VERBrec6.classes * [stativeclass] <> []
              A13: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C14: VERBrec6.classes * [momentaryclass] <> []
              A14: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];

          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERBrec4.modus;
              CLAUSErec1.thetavp := VERBrec1.thetavp;
              CLAUSErec1.synvpefs := VERBrec1.synvps;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

>

   SUBRULE
      <mu2 :[ mu13, rel1/T3,   mu14]  >
      <mu15:[ mu13, argrel/T3, mu14 ]>

   MATCHCONDITIONS
      <
       mu2: (rel1 = objrel AND (NOT EXIST(mu13,[indobjrel/..] ))) OR
            (rel1 = indobjrel AND (NOT EXIST(mu14, [objrel/..])))
      >

<
SUBRULE
     <T1: VERB{VERBrec3}
              [head/VERB{VERBrec1}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >
     <T2: VERB{VERBrec7}
              [head/VERB{VERBrec6}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >


    COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              (VERBrec3.tense = VERBrec1.tense) AND
              (VERBrec3.modus = VERBrec1.modus) AND
              (VERBrec3.persons = VERBrec1.persons) AND
              (VERbrec3.number = VERbrec1.number) AND
              CLAUSErec1.thetavp = VERBrec3.thetavp AND
              CLAUSErec1.synvpefs * VERBrec3.synvps <> [] AND
              CLAUSErec1.voice = active
             )
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
                   C111: rel1 = objrel AND
                         VERBrec3.synvps * AUX_objvps <> []
                   A111: @
                   C112: rel1 = indobjrel AND
                         VERBrec3.synvps * AUX_indobjvps <> []
                   A112: @
                   C113: rel1 = indobjrel AND
                         VERBrec3.adjuncts * [benfactNP] <> []
                   A113: @
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
                   C121: rel1 = objrel AND
                         VERBrec3.synvps * AUX_objvps <> []
                   A121: @
                   C122: rel1 = indobjrel AND
                         VERBrec3.synvps * AUX_indobjvps <> []
                   A122: @
                   C123: rel1 = indobjrel AND
                         VERBrec3.adjuncts * [benfactNP] <> []
                   A123: @
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [momentaryclass] <> []
                   C131: rel1 = objrel AND
                         VERBrec3.synvps * AUX_objvps <> []
                   A131: @
                   C132: rel1 = indobjrel AND
                         VERBrec3.synvps * AUX_indobjvps <> []
                   A132: @
                   C133: rel1 = indobjrel AND
                         VERBrec3.adjuncts * [benfactNP] <> []
                   A133: @
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, movementclass] <> []
                   C141: rel1 = objrel AND
                         VERBrec3.synvps * AUX_objvps <> []
                   A141: @
                   C142: rel1 = indobjrel AND
                         VERBrec3.synvps * AUX_indobjvps <> []
                   A142: @
                   C143: rel1 = indobjrel AND
                         VERBrec3.adjuncts * [benfactNP] <> []
                   A143: @
              A14: @
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERbrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERbrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec7 := VERBrec3;
              VERBrec7.synvpefs2 := VERBrec2.synvps;
              VERBrec7.tense := VERbrec6.tense;             
              VERBrec7.modus := VERbrec6.modus;             
              VERBrec7.persons := VERbrec6.persons;             
              VERBrec7.number := VERbrec6.number;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec4.persons <> [] AND
              VERBrec4.number <> omeganumber AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              (* other values: default values *)
                AND
                VERBrec7.synvpefs2 = VERBrec2.synvps AND
                VERBrec7.tense = VERbrec6.tense AND      
                VERBrec7.modus = VERbrec6.modus AND          
                VERBrec7.persons = VERbrec6.persons AND             
                VERBrec7.number = VERbrec6.number AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec7.classes * [durativeclass, movementclass] <> []
                   C111: VERBrec7.synvps * AUX_objvps <> [] 
                   A111: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_objvps;
                   C111: VERBrec7.synvps * AUX_indobjvps <> [] 
                   A111: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_indobjvps;
                   C113: VERBrec7.adjuncts * [benfactNP] <> []
                   A113: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps;
              A11: CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C12: VERBrec7.classes * [iterativeclass] <> []
                   C121: VERBrec7.synvps * AUX_objvps <> [] 
                   A121: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_objvps;
                   C121: VERBrec7.synvps * AUX_indobjvps <> [] 
                   A121: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_indobjvps;
                   C123: VERBrec7.adjuncts * [benfactNP] <> []
                   A123: rel1 := indobjrel;
                         CLAUSErec1.synvpefs := VERBrec7.synvps;
              A12: CLAUSErec1.aktionsarts := [activity, stative];

              C13: VERBrec7.classes * [stativeclass] <> []
                   C131: VERBrec7.synvps * AUX_objvps <> [] 
                   A131: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_objvps;
                   C131: VERBrec7.synvps * AUX_indobjvps <> [] 
                   A131: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_indobjvps;
                   C133: VERBrec7.adjuncts * [benfactNP] <> []
                   A133: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps;
              A13: CLAUSErec1.aktionsarts := [stative];

              C14: VERBrec7.classes * [momentaryclass] <> []
                   C111: VERBrec7.synvps * AUX_objvps <> [] 
                   A111: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_objvps;
                   C111: VERBrec7.synvps * AUX_indobjvps <> [] 
                   A111: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps * AUX_indobjvps;
                   C143: VERBrec7.adjuncts * [benfactNP] <> []
                   A143: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec7.synvps;
              A14: CLAUSErec1.aktionsarts := [achievement, stative];

          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERbrec4.modus;
              VERBrec3 := VERBrec7;
              VERBrec3.synvpefs2 := [];
              VERBrec3.tense := VERBrec1.tense;
              VERBrec3.modus := VERBrec1.modus;
              VERBrec3.persons := VERBrec1.persons;
              VERBrec3.number := VERBrec1.number;
              CLAUSErec1.thetavp := VERBrec3.thetavp;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

SUBRULE
     <T1: VERB{VERBrec1}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>
     <T2: VERB{VERBrec6}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>


   COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              CLAUSErec1.thetavp = VERBrec1.thetavp AND
              CLAUSErec1.synvpefs * VERBrec1.synvps <> [] AND
              CLAUSErec1.voice = active
             )
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
                   C111: rel1 = objrel AND
                         VERBrec1.synvps * AUX_objvps <> []
                   A111: @
                   C112: rel1 = indobjrel AND
                         VERBrec1.synvps * AUX_indobjvps <> []
                   A112: @
                   C113: rel1 = indobjrel AND
                         VERBrec1.adjuncts * [benfactNP] <> []
                   A113: @
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
                   C121: rel1 = objrel AND
                         VERBrec1.synvps * AUX_objvps <> []
                   A121: @
                   C122: rel1 = indobjrel AND
                         VERBrec1.synvps * AUX_indobjvps <> []
                   A122: @
                   C123: rel1 = indobjrel AND
                         VERBrec1.adjuncts * [benfactNP] <> []
                   A123: @
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [momentaryclass] <> []
                   C131: rel1 = objrel AND
                         VERBrec1.synvps * AUX_objvps <> []
                   A131: @
                   C132: rel1 = indobjrel AND
                         VERBrec1.synvps * AUX_indobjvps <> []
                   A132: @
                   C133: rel1 = indobjrel AND
                         VERBrec1.adjuncts * [benfactNP] <> []
                   A133: @
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, movementclass] <> []
                   C141: rel1 = objrel AND
                         VERBrec1.synvps * AUX_objvps <> []
                   A141: @
                   C142: rel1 = indobjrel AND
                         VERBrec1.synvps * AUX_indobjvps <> []
                   A142: @
                   C143: rel1 = indobjrel AND
                         VERBrec1.adjuncts * [benfactNP] <> []
                   A143: @
              A14: @
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERbrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERbrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec1.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec1.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec1.prepkey1
		  prepkey2     : VERBrec1.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec6.status := bareV;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec6.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec6.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec6.prepkey1
		  prepkey2     : VERBrec6.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              
              (* other values: default values *)
                AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec6.classes * [durativeclass, movementclass] <> []
                   C111: VERBrec6.synvps * AUX_objvps <> [] 
                   A111: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_objvps;
                   C112: VERBrec6.synvps * AUX_indobjvps <> [] 
                   A112: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_indobjvps;
                   C113: VERBrec6.adjuncts * [benfactNP] <> []
                   A113: rel1 := indobjrel;
                         CLAUSErec1.synvpefs := VERBrec6.synvps;
              A11: CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C12: VERBrec6.classes * [iterativeclass] <> []
                   C121: VERBrec6.synvps * AUX_objvps <> [] 
                   A121: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_objvps;
                   C122: VERBrec6.synvps * AUX_indobjvps <> [] 
                   A122: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_indobjvps;
                   C113: VERBrec6.adjuncts * [benfactNP] <> []
                   A113: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps;
              A12: CLAUSErec1.aktionsarts := [activity, stative];

              C13: VERBrec6.classes * [stativeclass] <> []
                   C131: VERBrec6.synvps * AUX_objvps <> [] 
                   A131: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_objvps;
                   C132: VERBrec6.synvps * AUX_indobjvps <> [] 
                   A132: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_indobjvps;
                   C113: VERBrec6.adjuncts * [benfactNP] <> []
                   A113: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps;
              A13: CLAUSErec1.aktionsarts := [stative];

              C14: VERBrec6.classes * [momentaryclass] <> []
                   C141: VERBrec6.synvps * AUX_objvps <> [] 
                   A141: rel1 := objrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_objvps;
                   C142: VERBrec6.synvps * AUX_indobjvps <> [] 
                   A142: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_indobjvps;
                   C113: VERBrec6.adjuncts * [benfactNP] <> []
                   A113: rel1 := indobjrel;
                         CLAUSErec1 := CLAUSErec2;
                         CLAUSErec1.synvpefs := VERBrec6.synvps;
              A14: CLAUSErec1.aktionsarts := [achievement, stative];

          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERBrec4.modus;
              CLAUSErec1.thetavp := VERBrec1.thetavp;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

>

   SUBRULE
      <mu2 :[ mu13, indobjrel/T3, objrel/T4,  mu14]  >
      <mu15:[ mu13, argrel/T3, argrel/T4, mu14 ]>


<
SUBRULE
     <T1: VERB{VERBrec3}
              [head/VERB{VERBrec1}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >
     <T2: VERB{VERBrec7}
              [head/VERB{VERBrec6}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >


    COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              (VERBrec3.tense = VERBrec1.tense) AND
              (VERBrec3.modus = VERBrec1.modus) AND
              (VERBrec3.persons = VERBrec1.persons) AND
              (VERbrec3.number = VERbrec1.number) AND
              CLAUSErec1.thetavp = VERBrec3.thetavp AND
              CLAUSErec1.synvpefs * VERBrec3.synvps <> [] AND
              CLAUSErec1.voice = active             AND
              (VERBrec3.synvps * (AUX_indobjvps * AUX_objvps) <> [] OR
               ((VERBrec3.synvps * AUX_objvps <> []) AND
                (VERBrec3.adjuncts * [benfactNP] <> [])
               )
              )
             )                                     
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [momentaryclass] <> []
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec3.classes * [durativeclass, movementclass] <> []
              A14: @
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERbrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERbrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec3.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec3.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec3.prepkey1
		  prepkey2     : VERBrec3.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec7 := VERBrec3;
              VERBrec7.synvpefs2 := VERBrec2.synvps;
              VERBrec7.tense := VERbrec6.tense;             
              VERBrec7.modus := VERbrec6.modus;             
              VERBrec7.persons := VERbrec6.persons;             
              VERBrec7.number := VERbrec6.number;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec4.persons <> [] AND
              VERBrec4.number <> omeganumber AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              (* other values: default values *)
                AND
                VERBrec7.synvpefs2 = VERBrec2.synvps AND
                VERBrec7.tense = VERbrec6.tense AND      
                VERBrec7.modus = VERbrec6.modus AND          
                VERBrec7.persons = VERbrec6.persons AND             
                VERBrec7.number = VERbrec6.number AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]     
             ) 
         C11: VERBrec7.synvps * (AUX_indobjvps * AUX_objvps) <> []

              C111: VERBrec7.classes * [durativeclass, movementclass] <> []
              A111: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C112: VERBrec7.classes * [iterativeclass] <> []
              A112: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C113: VERBrec7.classes * [stativeclass] <> []
              A113: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C114: VERBrec7.classes * [momentaryclass] <> []
              A114: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];
            A11: CLAUSErec1.synvpefs := VERBrec7.synvps * 
                                (AUX_indobjvps * AUX_objvps);

         C21: VERBrec7.synvps * AUX_objvps <> [] AND
              VERBrec7.adjuncts * [benfactNP] <> []
              C111: VERBrec7.classes * [durativeclass, movementclass] <> []
              A111: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C112: VERBrec7.classes * [iterativeclass] <> []
              A112: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C113: VERBrec7.classes * [stativeclass] <> []
              A113: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C114: VERBrec7.classes * [momentaryclass] <> []
              A114: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];
         A21: CLAUSErec1.synvpefs := VERBrec7.synvps *  AUX_objvps;
          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERbrec4.modus;
              VERBrec3 := VERBrec7;
              VERBrec3.synvpefs2 := [];
              VERBrec3.tense := VERBrec1.tense;
              VERBrec3.modus := VERBrec1.modus;
              VERBrec3.persons := VERBrec1.persons;
              VERBrec3.number := VERBrec1.number;
              CLAUSErec1.thetavp := VERBrec3.thetavp;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

SUBRULE  
     <T1: VERB{VERBrec1}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>
     <T2: VERB{VERBrec6}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>


   COMP
         <
          C1:((VERBrec1.modus = omegamodus) AND
              (VERBrec1.status = bareV) AND
              CLAUSErec1.thetavp = VERBrec1.thetavp AND
              CLAUSErec1.synvpefs * VERBrec1.synvps <> [] AND
              CLAUSErec1.voice = active             AND
              ((VERBrec1.synvps * (AUX_indobjvps * AUX_objvps) <> []) OR
               ((VERBrec1.synvps * AUX_objvps <> []) AND
                (VERBrec1.adjuncts * [benfactNP] <> [])
               )
              )
             )
              C11: activity IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, iterativeclass
                                                    , movementclass] <> []
              A11: @
              C12: stative IN CLAUSErec1.aktionsarts
              A12: @
              C13: achievement IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [momentaryclass] <> []
              A13: @
              C14: accomplishment IN CLAUSErec1.aktionsarts AND
                   VERBrec1.classes * [durativeclass, movementclass] <> []
              A14: @
              
          A1: CLAUSErec2 := CLAUSErec1;
              CLAUSErec2.thetavp := vp120;
              CLAUSErec2.synvpefs := [synOPENinfSENT];
              CLAUSErec2.aktionsarts := [stative];
              CLAUSErec2.voice := active; (* passief nog toevoegen! *)
              SUBVERBrec2 := COPYT_bverbtosubverb(BVERBrec2);
              VERBrec4 := COPYT_subverbtoverb(SUBVERBrec2);
              VERBrec4.tense := VERBrec1.tense;
              VERBrec4.modus := VERBrec1.modus;
              VERBrec4.status := VERBrec1.status;
              VERbrec4.persons := VERbrec1.persons;
              VERBrec4.number := VERbrec1.number;
              VERBrec5 :=
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec1.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec1.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec1.prepkey1
		  prepkey2     : VERBrec1.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                           ;
              VERBrec6 := VERBrec1;
              VERBrec6.tense := omegatense;
              VERBrec6.modus := infinitive;
              VERBrec6.persons := [];
              VERbrec6.number := omeganumber;
              VERBrec6.status := bareV;
         >
      DECOMP
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec6.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec6.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec6.prepkey1
		  prepkey2     : VERBrec6.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              
              (* other values: default values *)
                AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]     
             ) 
           C11: VERBrec6.synvps * (AUX_indobjvps * AUX_objvps) <> []
              C111: VERBrec6.classes * [durativeclass, movementclass] <> []
              A111: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C112: VERBrec6.classes * [iterativeclass] <> []
              A112: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C113: VERBrec6.classes * [stativeclass] <> []
              A113: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C114: VERBrec6.classes * [momentaryclass] <> []
              A114: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];
            A11: CLAUSErec1.synvpefs := VERBrec6.synvps * 
                                     (AUX_indobjvps *AUX_objvps);
           C12: VERBrec6.synvps * AUX_objvps <> []  AND
                VERBrec6.adjuncts * [benfactNP] <> []
              C111: VERBrec6.classes * [durativeclass, movementclass] <> []
              A111: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, accomplishment,
                                                        stative];
              C112: VERBrec6.classes * [iterativeclass] <> []
              A112: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [activity, stative];

              C113: VERBrec6.classes * [stativeclass] <> []
              A113: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [stative];

              C114: VERBrec6.classes * [momentaryclass] <> []
              A114: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.aktionsarts := [achievement, stative];
            A12: CLAUSErec1.synvpefs := VERBrec6.synvps * AUX_objvps;

          A1: VERBrec1:= VERBrec6;
              VERBrec1.number := VERbrec4.number;
              VERBrec1.persons := VERBrec4.persons;
              VERBrec1.tense := VERBrec4.tense;
              VERBrec1.status := VERBrec4.status;
              VERBrec1.modus := VERBrec4.modus;
              CLAUSErec1.thetavp := VERBrec1.thetavp;
              CLAUSErec1.voice := active; (* passief moet nog *)
         >

>

>
&
\end{verbatim}

\newpage
\begin{description}
\item[* name:] Rwilinsertion
\item[* relevant examples:] hij komt graag $rightarrow$ hij wil graag komen\\
hij komt liever $rightarrow$ hij wil liever komen
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] RC_politeness
\item[* date of creation:] 24-JAN-1990 
\item[* author:] Lisette Appelo
\item[* copied from:]Tzouinsertion
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To insert {\em willen} in the context of
{\em graag} or {\em liever} to be able to translate such sentences into 
English {\em I would like/prefer to come}. (Note that English needs a
{\em would}-insertion rule for these cases.)
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] Verb cluster or not. 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: \\
\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language: \\

\item in other languages: \\

\end{enumerate}
\item[* relevant literature/documents:] 
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: \\
\end{enumerate}
\end{description}

% FILTER PFprewilinsertion
< m :CLAUSE{CLAUSErec2}
           [mu1,
            subjvpadvrel/ADVP{ADVPrec1}
                        [mu11,
                         head/ADV{ADVrec1}
                             [head/SUBADV{SUBADVrec1}
                                  [I1: head/BADV(KEY1){BADVrec1}]
                             ],
                         mu12
                        ],
            mu10,
            predrel/VERBP{VERBPrec1}
                  [mu2,
                   head/VERB{VERBrec5}
                       [head/VERB{VERBrec4}
                            [head/SUBVERB{SUBVERBrec2}
                                 [head/BVERB(KEY_wil2bverbkey){BVERBrec2}[ ]]
                            ],
                        adjoinrel/T2
                        ],
                    mu3
                   ],
              mu4
           ] 
>

   MATCHCONDITIONS
      <
       I1: KEY1 = KEY_graagBADVkey OR
           KEY1 = KEY_lieverBADVkey 
      >

<
SUBRULE
     <T2: VERB{VERBrec7}
              [head/VERB{VERBrec6}[mu9],
               adjoinrel/VERB{VERBrec2}[mu8]
              ]
     >
         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec4.persons <> [] AND
              VERBrec4.number <> omeganumber AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              (* other values: default values *)
                AND
                VERBrec7.synvpefs2 = VERBrec2.synvps AND
                VERBrec7.tense = VERbrec6.tense AND      
                VERBrec7.modus = VERbrec6.modus AND          
                VERBrec7.persons = VERbrec6.persons AND             
                VERBrec7.number = VERbrec6.number AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec7.classes * [durativeclass, movementclass] <> []
              A11: @
              C12: VERBrec7.classes * [iterativeclass] <> []
              A12: @
              C13: VERBrec7.classes * [stativeclass] <> []
              A13: @
              C14: VERBrec7.classes * [momentaryclass] <> []
              A14: @
          A1:@
        >

SUBRULE
     <T2: VERB{VERBrec6}[head/SUBVERB{SUBVERBrec1}[head/BVERB{BVERBrec1}]]>

         <
          C1:((VERBrec4 = COPYT_subverbtoverb(SUBVERBrec2)) AND
              (SUBVERBrec2 = COPYT_bverbtosubverb(BVERBrec2)) AND
              (VERBrec4 =
                     {
                      eORenform : NoForm
                      modus : omegamodus
                      status : bareV
                     }
               ) AND
              VERBrec5 =
		  {
		  req          : [pospol,negpol,omegapol]
		  env          : [pospol,negpol,omegapol]
		  conjclasses  : VERBrec4.conjclasses
		  particle     : VERBrec7.particle
		  number       : VERBrec4.number
		  persons      : VERBrec4.persons
		  eORenForm    : VERBrec4.eORenForm
		  modus        : VERBrec4.modus
		  tense        : VERBrec4.tense
		  possvoices   : VERBrec4.possvoices
		  reflexivity  : VERBrec7.reflexivity
		  synvps       : VERBrec4.synvps
                  adjuncts     : VERBrec4.adjuncts
		  thetavp      : VERBrec4.thetavp
		  CaseAssigner : VERBrec4.Caseassigner
		  subc         : VERBrec4.subc
		  perfauxs     : VERBrec4.perfauxs
		  prepkey1     : VERBrec7.prepkey1
		  prepkey2     : VERBrec7.prepkey2
		  controller   : VERBrec4.controller
		  verbraiser   : VERBrec4.verbraiser
		  IPP          : VERBrec4.IPP
		  status       : VV
		  classes      : VERBrec4.classes
		  }                                            AND
               (VERBrec6 =
                     {
                      number : omeganumber
                      persons : []
                      eORenForm : NoForm
                      modus : infinitive
                      tense : omegatense
                      status : bareV
                     }
                ) 
              
              (* other values: default values *)
                AND
                CLAUSErec2.thetavp = vp120 AND
                CLAUSErec2.synvpefs = [synOPENinfsent] AND
                CLAUSErec2.voice = active AND
                CLAUSErec2.aktionsarts = [stative]
             ) 
              C11: VERBrec6.classes * [durativeclass, movementclass] <> []
              A11: @
              C12: VERBrec6.classes * [iterativeclass] <> []
              A12: @
              C13: VERBrec6.classes * [stativeclass] <> []
              A13: @
              C14: VERBrec6.classes * [momentaryclass] <> []
              A14: @
         A1:@ 
         >

>
&
\end{verbatim}

\newpage
\begin{description}
\item[* name:] PFprewilinsertion
\item[* relevant examples:] hij komt graag $rightarrow$ hij komt graag \\
hij komt liever $rightarrow$ hij komt liever
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] RC_politeness
\item[* date of creation:] 31-JAN-1990 
\item[* author:] Lisette Appelo
\item[* copied from:]Rwilinsertion
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Analytic FILTER for Rwilinsertion. 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: \\
\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language: \\

\item in other languages: \\

\end{enumerate}
\item[* relevant literature/documents:] 
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: \\
\end{enumerate}
\end{description}




%%
