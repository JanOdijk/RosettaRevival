$FL 12
$PL 274,16
$LD 5
$OP SH=S,HY=1,la=E,ph=r,pn=c,AN=C
$NP 
$UC _
$SC &%
$AC @
$XC ~`

   

            Project ROSETTA : Machine Translation


            Topic     :  Rosetta3.Linguistics.iso

    ---------------------------------------------------------







         Title        :  Subgrammars of Rosetta3. Preliminary Version 2

         Author       :  Jan Odijk









         Doc.Nr       :  0107

         Date         :  12/06/86

         Status       :  informal

         Supersedes   :  0093

         Distribution :  iso's

         Clearance    :  Project

         Keywords     :  Subgrammars, Isomorphic Scheme, Dutch
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Copyright (c) Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 0107                    date:12/06/86
$LD 5
$Np 1

$RL 10 
$UC _
$BC |
$AC ^
$ Introduction$

$ This document is to be considered as a document in progress. It is 
distributed mainly to have some version of a partitioning into
subgrammars among all members of the iso-group. As such it serves three
functions:$

$ 1) certain proposals made in this document can be discussed.$
$ 2) omissions and errors in this document can be corrected$
$ 3) There is a reasonably recent version of the partitioning of the grammar
into subgrammars, and their control expressions, available to all members of
the iso-group. This will help in guaranteeing that the same assumptions w.r.t
the overall organization of the grammar are assumed in proposals for more
specific facts.$ 

$ The document has not been adapted yet to the results of the discussion
concerning VERBP and VERBPPROP, i.e. the subgrammars VERBP and VERBPPROP
are still two different subgrammars. Furthermore, there are still variables
where adverbs are going to be substituted into.$

$ The document can be seen as a second version of document 0093$
$ I will produce a new, fully updated version as soon as possible$

$ Important points of discussion for the iso-group have been indicated in
this document by triangles drawn in the left margin$
$NP
Notational Conventions:

names of rule classes           are prefixed by _RC:_
names of rules                  are prefixed by _R:_
names of transformation classes are prefixed by _TC:_
names of transformationss       are prefixed by _T:_

$ Names of parts of control expressions are not prefixed, although 
we allow for the possibility that certain rule and transformation 
classes are in fact packages of rule and transformation classes$


Subgrammars, an overview:

XP subgrammars : NOUNP,VERBP, ADJP, ADVP, PREPP 

XPPROP-subgrammars NOUNPPROP,VERBPPROP, ADJPPROP, ADVPPROP, 
                       PREPPROP ;
                   EXISTENTIALPROPformation; 
                   IDENTIFICATIONALPROPformation

XPPROPtoXPPROP subgrammars: NOUNPPROPtoNOUNPPROP,
  ADJPPROPtoADJPPROP, PREPPPROPtoPREPPPROP. Notice that
  VERBPPROPtoVERBPPROP and ADVPPROPtoADVPPROP do not exist.

XPPROPtoCLAUSE-subgrammars: These turn XPPROP's into clauses. These
subgrammars are isomorphic to the XPPROPtoXPPROP subgrammars,
at least for the same XPPROP's
       NOUNPPROPtoCLAUSE;
       ADJPPROPtoCLAUSE
       PREPPPROPtoCLAUSE
       VERBPPROPtoCLAUSE
       ADVPPROPtoCLAUSE 

CLAUSEtoSENTENCE subgrammar

XPPROPnottoSENTENCE subgrammars, isomorphic to the 
             CLAUSEtoSENTENCE subgrammar:
       NOUNPPROPnottoSENTENCE;
       ADJPPROPnottoSENTENCE
       PREPPPROPnottoSENTENCE
       ADVPPROPnottoSENTENCE


KLOKTIJDEN subgrammar
DATUMAANDUIDING subgrammar
LEEFTIJDAANDUIDING  subgrammar
$NP
subgrammar: VERBP

import: _BVERB_, VAR
export: VERBP

controlexpression:
  RC:Startverbprules.{RC:Emptysubstitution}.TC:Verbpatternrules.
  {RC:Advvarrules}.RC:Determinationrules

$ Informal description of the rule classes and/or transformation classes:$

$ RC:Startverbprules:$
$ These combine a BVERB and VAR-s into a VERBP. The VAR-s are place holders
for (so-called internal) arguments of BVERB$

$ RC:Emptysubstitution:$
$ This rule replaces a variable by EMPTY, cf. Rosetta2. For passive the rule is
too early here. It can be repeated later. A decision must be made as
to how to treat cases like _I'm eating_, versus _I'm eating a sandwich_,
by substitution of an EMPTY, or otherwise. Several subcases will probably
have to be distinguished here. cf. _I'm eating_ vs. _I know_ vs. _
I said so_ vs. _I can_, _Ik loop_ vs. _Ik loop een marathon_$
$ Proposed measure (cf. Measure Condition): the number of EMPTY-s in the tree$

$ TC:Verbpatternrules:$
$ cf. Rosetta2, and the study by Agnes(in progress). A difference with Rosetta2
is that the subject is not present yet.$ 

$ RC:Advvarrules:$

$ These rules introduce VAR-s bearing relation _advrel_ as a placeholder for
adverbial expressions that are going to be inserted later (time, duration,
place, verbal modification, etc.$ 
$ Proposed measure: the number of advrel/VAR's in the tree$

$ RC:Determinationrules:$
$ **to be added**$
$NP
subgrammar ADVP

import: _BADV_, VAR
export: ADVP

controlexpression:
  RC:StartADVPrules.{RC:Emptysubstitution}.TC:Advpatternrules.
  {RC:Advvarrules}.RC:Determinationrules

Informal description of the RC-s and the TC-s:

see VERBP;

  special examples: graag, toevallig, misschien,
$NP
subgrammar ADJP

import: _BADJ_, VAR
export: ADJP

controlexpression:
  RC:StartADJPrules.{RC:Emptysubstitution}.TC:ADJpatternrules.
  {RC:Advvarrules}.RC:Determinationrules

Informal description of the RC-s and the TC-s:

see VERBP;

$NP
subgrammar PREPP

import: _PREP_, VAR
export: PREPP

controlexpression:
  RC:StartPREPPrules.{RC:Emptysubstitution}.TC:PREPpatternrules.
  {RC:Advvarrules}.RC:Determinationrules

Informal description of the RC-s and the TC-s:

see VERBP;
 
Advvarrules will perhaps never be used.
$NP
subgrammar NOUNP

import: _BNOUN_, VAR
export: NOUNP

controlexpression:
  RC:StartNOUNprules.{RC:Emptysubstitution}.TC:NOUNpatternrules.
  {RC:Adjvarrules}.RC:Determinationrules

Informal description of the RC-s and/or TC-s:

$ TC:Nounpatternrules$
$ All nouns are at least of nounpattern00. Some, however, (If they are
related to a verb) have other nounpatterns.$

$ RC:Adjvarrules:$
$ These rules introduce VAR-s that are to be filled by adjectival phrases later
in the derivation$ 

$ for further comments, see VERBP;$
$NP
subgrammar VERBPPROPformation

import: _VERBP_, VAR
export: VERBPPROP

controlexpression: RC:VERBPPROPformationrules.[RC:Emptysubstitution].[
                   RC: Subject-Demotionrules].TC:zich-spelling

$ RC:VerbPpropformationrules$
$ These rules form a VERBPPROP from a VERBP and, depending on the verbpattern
of the verb, zero or one VAR. This VAR, if present, bears the syntactic 
relation _subjrel_. The VERBP will bear the relation _predrel_, or perhaps 
_headrel_. In general, XPPROP-s are the minimal propositional constituents.
It must be decided whether XPPROP subgrammars and XP subgrammars are separate
subgrammars or are collapsed into one subgrammar.$
$ If the relevant verbphrase does not take an argument as a subject, then
the VERBPPROP consists of a predrel/VERBP only$

$ RC: Emptysubstitution$
$ This rule class contains a rule that substitutes an EMPTY for the VAR 
bearing the relation subjrel. This is intended for passives without a
by-phrase$ 

$ RC:Subject-demotionrules$
$ This rule class contains rules that turn the subjrel/VAR  into the
objrel/VAR of a byobjrel/PREPP. Furthermore it contains  rules that
deletes a subjrel/EMPTY. The voice-attribute of the verbpprop can be assigned
the value _passive_, if one of these rules has been applied, in which case
normal passives are derived. However, the voice attribute can remain active
as well. In this case we create structures for clauses like 
[ de boeken(door Piet) verkopen ], which can appear as complements of the
verb _laten_ (e.g. _Hij liet de boeken (door Piet) verkopen_)$
$ If none of these rules has been applied, the voice attribute of the 
verbpprop remains active. It might also be necessary to have a special rule
that acts as a default rule for the active. This is necessary if AdjPPROP-s
must be translated into passive sentences.$
$ In English a rule ONE-formation belongs here, to form _one is dancing_ from
_er wordt gedanst_.$ 
$ The rule class RC:Subject-Demotionrules must be applied before 
T:OCP-interpretation from the subgrammar VERBPPROPtoCLAUSE. It must be
applied before the TC:Zich-spelling as well.$  

$ TC:Zichspelling$
$ This transformation class contains a rule that spells out the reflexive
pronoun (me, je, zich etc.) if the verbpprop contains a reflexive verb. By 
ordering this rule here, i.e. after RC:Subject-Demotionrules and before
TC:ObjOKrules, it follows that reflexive verbs cannot be passivized: There is
no antecedent for the reflexive pronoun at this point in the derivation.$
$ The transformation class should contain a rule for reciprocal spelling
as well, to handle such cases as _Zij kwamen elkaar tegen_ vs. _They met_$
$ This is probably also the best place to relate so-called bound variables
in idioms to their antecedents. If this is done, then it follows for these
as well, that passivization is not possible, cf.$  
$nl 1
$ Hij verloor z'n geduld  - Hij waste z'n handen in onschuld$
$ *Z'n geduld werd verloren-*Z'n handen werden in onschuld gewassen$
$ John lost his temper - *His temper was lost by John$
$nl 1
$ cf. also idioms containing _zich_$
$ Hij verplichtte iemand aan zich vs. *iemand werd aan zich verplicht$
$ en  Hij maakte zich uit de voeten vs.* Er werd zich uit de voeten gemaakt$
$NP
subgrammar NOUNPPROPformation

import: _NOUNP_, VAR
export: NOUNPPROP

controlexpression: RC:NOUNPPROPformationrules

$ This rule class contains rules that form a NOUNPPROP out of a NOUNP and
a VAR:$

$ NOUNPPROP{} [ subjrel/VAR , predrel/NOUNP{} ].$

$ Some examples: ik vind _dit een moeilijk probleem_, Ik vind _hem 
een goede schaker_ ; 
$ Examples of impersonal cases: het is winter; ik vind _het de koudste winter
van de laatste jaren_; het is tijd om te vertrekken.$ 
$ If the NOUNP is not combined with a VAR, then a NOUNP headed by the 
dummy pronoun _het_ is inserted as a subject:$

NOUNPPROP{}[ subj/NOUNP{}[ head/HET], pred/NOUNP{} ]
$NP
subgrammar ADJPPROPformation

import: _ADJP_, VAR
export: ADJPPROP

control expression: RC:ADJPPROPformationrules.TC:Subj-Adj-agreement

RC: AdjPPROPformationrules
$ This rule class contains a rule that forms an ADJPPROP out of an ADJP and
a VAR:$

$ ADJPPROP{} [ subjrel/VAR , predrel/ADJP{} ]$

$ Depending on the adjpattern of the ADJ appearing in ADJP, an ADJPPROP can be
formed without a VAR. In that case the dummy pronoun _het_ appears as a
subject:$ 

ADJPPROP{}[ subj/NOUNP{}[ head/HET], pred/ADJP{} ]

$ TC: Subject-Adjective Agreement$
$ This transformation class contains a transformation that make the adjective
agree with its subject, if any, or supplies it some default value if no subject
is present. The transformation is probably not necessary for Dutch and English,
but it certainly is for Spanish. Notice that this transformation cannot be
hidden in the rule of subject-verb agreement, since in certain cases this 
transformation must be applied when there is no verb at all.$
 
$ Examples of Adjpprop's: ik vind _hem gek_; in copulative sentences with
_zijn_ and _worden_ e.g.: hij (is) gek; zij (wordt) aardiger;$
$ Impersonal cases: ik vind _het koud_; het (is) koud$
$NP
subgrammar ADVPPROPformation

import: _ADVP_, VAR
export: ADVPPROP

controlexpression: RC:ADVPPROPformationrules

$ RC: AdvPPropformationrules$
$ This rule class contains a rule that forms an ADVPPROP out of an ADVP and
a VAR:$

$ ADVPPROP{} [ subjrel/VAR , predrel/ADVP{} ].$
 
example :  ADVP{} [ headrel/ADV{*graag*}, complrel/VAR ] + VAR -->
           ADVPPROP{}[ subjrel/VAR, 
                       predrel/ADVP{} [ headrel/ADV{*graag*}, complrel/VAR ]
                  ]

$NP
subgrammar PREPPPROPformation

import: PREPP, VAR
export: PREPPPROP

controlexpression: RC:PREPPPROPformationrules

$ RC:PREPPPROPformationrules$
$ This rule class contains a rule that forms an PREPPPROP out of an PREPP and
a VAR:$

$ PREPPPROP{} [ subjrel/VAR , predrel/PREPP{} ]$

$ Depending on the PREPP, an ADJPPROP can be formed without a VAR. In that case
the dummy pronoun _het_ appears as a subject (do they exist??, perhaps
idiomatically):$ 

PREPPPROP{}[ subj/NOUNP{}[ head/HET], pred/PREPP{} ]

$ Some examples: hij is in de tuin; het regent _in Spanje_ (cf. Rosetta2)$
$NP
subgrammar EXISTENTIALPROPformation

import: _VERB_, VAR
export: VERBPPROP

Control expression: RC:EXISTENTIALPROPformation

RC:EXISTENTIALPROPformation
This rule forms a VERBPPROP out of ( a VERBP containing) the VERB
_zijn_ and a VAR, provided the VAR is indefinite:

VERBPPROP{} [ predrel/ VERBP{} [  objrel/VAR{}, headrel/VERB{} ] ]

$ Later in the derivation _er_ will be inserted as a subject; The transformation
that preposes objects in the case of e.g. passives and  ergatives must be 
blocked for the case where the verb is the verb _zijn_, so that always
a sentence of the form _er is NP_ will result.$
$NP
Subgrammar IdentificationalPROPformation

import: _VERB_, VAR
export: VERBPPROP

Control Expression: RC:IdentificationalPropformation

$ RC:IdentificationalPropformation$
$ This rule forms an identificational sentence out of the VERB _zijn_,
and two VAR-s:$

VERBPPROP{} [ subjrel/VAR1{}, idrel/VAR2{}, headrel/VERB{} ]

$ Notice that there is no VERBP. This type of structure is intended
for identificational sentences, such as _Hij is de direkteur_,
_Dat is de beste oplossing_ etc. In many cases, it is not easy to 
distinguish them from predicational sentences that are formed out of
NOUNPPROP's (cf. e.g. _Hij is direkteur_ vs. _Hij is de direkteur_).
These kinds of structure should be looked at somewhat more$
$NP
subgrammar NOUNPPROPtoNOUNPPROP  (isomorphic to nounproptoclause)

import: NOUNPPROP
export: NOUNPPROP

control expression: RC:NOClause-formation.{RC:propositionsubstitution}.
          TC:OCP-interpretation



$ RC:Noclause-formation$ 
$ This rule class corresponds to RC:Clauseformation in the NOUNPPROPtoCLAUSE
subgrammar. In essence the rule account for supertense only. It introduces a
not being marked w.r.t. time and aspect. It can be translated into a
Clauseformation rule that introduces a present tense form of the auxiliary verb
_zijn_ in the NOUNPPROPtoCLAUSE subgrammar.$ 

$ RC: Propositionsubstitution$
**to be added**

$ TC: OCP-interpretation$
$ It is not clear whether TC:OCP-interpretation will be applicable somewhere$
$NP
subgrammar ADJPPROPtoADJPPROP  (isomorphic to adjpproptoclause)

import: adjpprop
export: adjpprop

control expression:  RC:NOClause-formation.{RC:propositionsubstitution}.
          TC:OCP-interpretation

$ RC:Noclause-formation$ 
$ This rule class corresponds to RC:Clauseformation in the ADJPPROPtoCLAUSE
subgrammar. In essence the rule account for supertense only. It introduces a
not being marked w.r.t. time and aspect. It can be translated into a
Clauseformation rule that introduces a present tense form of the auxiliary verb
_zijn_ in the ADJPPROPtoCLAUSE subgrammar.$ 

$ RC: Propositionsubstitution$
**to be added**
 
$ TC: OCP-interpretation$
$ It is not clear whether TC:OCP-interpretation will be applicable somewhere$
$NP
subgrammar PREPPPROPtoPREPPPROP

import: PREPPPROP
export: PREPPPROP 

control expression: RC:NOClause-formation.{RC:propositionsubstitution}.
          TC:OCP-interpretation

$ RC:Noclause-formation$ 
$ This rule class corresponds to RC:Clauseformation in the PREPPPROPtoCLAUSE
subgrammar. In essence the rule account for supertense only. It introduces a
not being marked w.r.t. time and aspect. It can be translated into a
Clauseformation rule that introduces a present tense form of the auxiliary verb
_zijn_ in the PREPPPROPtoCLAUSE subgrammar.$ 

$ RC: Propositionsubstitution$
**to be added**
 
$ TC: OCP-interpretation$
$ It is not clear whether TC:OCP-interpretation will be applicable somewhere$
$NP
subgrammar  VERBPPROPtoClause

Import: _VERBPPROP_, SENT, other XPPROP's, _ADVPPROP_ (voor graaglike)
Export: CLAUSE

control expression:
{RC:propositionsubstitution}.RC:Clause-formation.
TC:PROPOKrules.TC:OCP-interpretation.
T?:Postsubjformation.TC:ObjectOKrules.TC:subject-verbagreement.
TC: Case Check.[TC:ModalandPerfectswitch].[TC:PPoverV].[TC:NPoverAdv]

$ Cruciale Orderings:$
$ RC:Propositionsubstitution < all other rules$
$ This is in particular necessary for graag-like, cf. doc 92$
$ RC:Clause-formation < TC:PROPOKrules$
$ It is presupposed in the transformations that auxiliaries (introduced
by the RC:Clauseformation) are present already.$
$ TC:PROPOKrules < TC:OCP-interpretation$
$ The interpretation of PRO as being a case of obligatory control or of 
nonobligatory control depends on the way the embedded sentence has been
inserted into the higher clause, in particular, whether extraposition
has been applied or Verb Raising$
$ Cf. e.g.:$
$ |Hij heeft proberen te dansen vs. Hij heeft geprobeerd te dansen$
$ *Er werd proberen te dansen   vs. Er werd geprobeerd te dansen$
$ and, e.g.:$
$ |Hij heeft geholpen dit probleem samen op te lossen vs.$
$ *Hij heeft dit probleem samen helpen oplossen$
$ TC:OCP-interpretation < Postsubj-formation$
$ Otherwise the antecedent does not bear the correct syntactic relation 
anymore$
$ TC:Postsubj-formation < TC:ObjectOKrules$
$ Otherwise T:ER-insertion can not be applied for cases of postsubj-formation$
$ TC: ObjectOkrules < Subject-Verbagreement
$ Otherwise the correct subject (if any) is not present yet$
$ TC: Infverbrules < TC:Modalandperfectswitch$
$ Otherwise the input model for TC:ModalandPerfectswitch will never be 
satisfied$
$ TC: Case check < TC:NPoverAdv$
$ TC: Case check < TC:Shiftrules$
$ TC: ObjectOKrules < TC: Casecheck

$ Informal description of RC-s and TC-s$

$ RC:Propositionsubstitution:$
$ It substitutes propositional constituents for variables. In particular,
it substitutes for arguments of VERB in VERBP, and it substitutes for (or
inserts) certain adverbial phrases that contain a PRO-subject variable$
$ So-called Free (adjectival) adjuncts, e.g. _raw_ in _He ate the meat raw_
must be inserted here, if they are treated at all$ 
Proposed Measure: the number of Propositional constituents

$ RC:Clause-formation$
$ These rules turn the VERBPPROP into a CLAUSE, introduce time and aspect
and spell these out by means of changing attribute values and introducing 
auxiliary verbs$

$ TC:PROPOKrules$ 
$ These transformations position XPPROP-s, SENTENCE-s and their constituents
into the higher clause in the way required$

e.g.   ik vind compl/ADJPPROP[ subjrel/hem predrel/gek ] -->
       ik vind propsubjrel/hem proppredrel/gek           *decide what the 
                                                        structure will be* 

$ An important subclass is the set of Infverbrules:$

$ Infverbrules. This set of transformations contains the following members:$
    T:Verb-raising: turns
            hij SENT[ PROVAR de boeken te lezen ]probeerde        into
            hij SENT[ PROVAR de boeken ] VERB[ probeerde te lezen]
    T:Verbnoparticle-raising turns
            hij SENT [ PROVAR haar op te bellen ] probeerde       into
            hij SENT [ PROVAR haar op ] VERB [ probeerde te bellen ]
    T:Extraposition turns
        dat hij compl/SENT[ PROVAR haar op te bellen] probeerde   into
        dat hij probeerde extraposrel/SENT[ PROVAR haar op te bellen]
$ In fact these are probably subsets (not single members) of the infverbrules$
$ It may contain some more members$

$ TC:OCP-interpretation (Obligatory Control PRO interpretation)$
$ This transformation checks whether the PRO subject variable of an
embedded proposition if it is subject to Obligatory Control, has an
antecedent bearing the required syntactic relation, and whether it bears 
the same attribute values w.r.t person, number, gender and index. If these
conditions are satisfied, the PROVAR is deleted. Depending on the convention
on pruning to be assumed, the SENT node dominating the subj is pruned, at least
in the case of verb-raising$
$ This transformation class is crucially ordered before ObjOKrules, 
Postsubjformation and after PROPOK-rules$

$ T?:Postsubj-formation$
$ It turns a subj/VAR{indef, -generic} VERBP into$
$ postsubj/VAR{indef} VERBP. It is meant for cases such as
$ _iemand koopt een boek_-->$
$ er koopt iemand een boek. Cf. ergatieven doc 0047?$
$ It is a transformation if we can see by looking at the subj-VAR whether
a generic NP will be substituted for it, otherwise it must be a rule$

$ TC:Objectokrules$
$ This TC contains a.o.$
$ T:Object-promotion: turns an obj/ into a subj/ in the case of passives
and ergatives, but not in the case of actives such as [ de boeken verkopen
door Piet ] as in _Hij liet de boeken (door Piet) verkopen_ , cf. Subject
Demotion Rules$
$ T:Er-insertion: it puts ER into the structure bearing the relation subjrel, 
in case there is no subjrel, and if the obj and/or postsubj are indefinite,
but of course not, in cases like _de boeken door Piet verkopen_ for causative
_laten_ (see T:Object-Promotion and RC: Subject Demotion Rules)$
$ T:NP-raising: it turns a subjrel/ from the deeper (by one level of embedding)
proposition into the subjrel/ of the higher VERBPPROP,e.g. in the case of 
raising verbs, passives, copular verbs (lijken, blijken etc.):$
      e.g. [ compl/ADJPPROP[hij groot] lijk] --> 
           [ subj/hij compl/ADJP(PROP?)[groot] lijk ]
           [ [ hij te komen] schijn ]--> [ hij [ te komen ] schijn ]
$ T:Dative-Movement$
$ In English it turns  indirect objects into a subject, (e.g. _he has been given
a book_). In Dutch it maybe does so as well, though the Dative Case should be
retained, e.g. Hem werd een boek gegeven. cf. Ergatives$

$ Maybe a transformation must be applied here to check whether the clause
contains a subject at this point of the derivation. If not, then either
it is of the form [ [ complements (byphrase) activeinfin.Verb ]] (for cases
like _(Ik liet) de boeken door Piet verkopen_, or it is filtered out.

$ TC:Subject-verb agreement$
$ It accounts for the agreement between finite verb and subject, if present,
or, if necessary, between verb and postsubj$ 

$ TC:Case assignment$
$ This  transformation class assigns the case of NPvar-s.$ 
$ Upon substititution of a NOUNP for an NPvar the Case of the variable is
assigned to this NOUNP. If necessary it percolates then further down into
this NOUNP to case-mark the head, and e.g. determiners and adjectives$

$ The transformation class assigns accusative Case to objects of active verbs 
to subjects of small clauses (ADJJPPROP-s etc) and
of E(xceptionally)C(ase)M(arked) structures (ACI-CONSTRUCTIONS) accusative
Case if the governing verb is active; it assigns dative Case to indirect
objects ; Nominative Case to  subjects, postsubjects in finite clauses and
objects of ergative and passive verbs .Furthermore it assigns (in 
Dutch) genitive Case to NOUNP-s bearing the relation detrel .In
English the rule introduces the marker GEN after a NOUNP functioning as a
detrel$
$ In Spanish this rules adds the preposition _a_ to animate 
NOUNP-s that are governed by an active verb$

$ This transformation class must apply after TC:OBjectOKrules (cf.
_Hij_ werd gedood vs. *_Hem_ werd gedood), and before the TC: pronounokrules,
NPoverAdvrules and the Shift rules (cf. _Hun_ heb ik niets gegeven vs. *_Zij_
heb ik niets gegeven vs *_Hen_ heb ik niets gegeven). In English the form of
the interrogative pronoun _who_ as a complement of a preposition depends on two
factors: whether it is immediately preceded by a PREP (then both _who_ and
_whom_ are well-formed) or whether it is stranded (then only _who_ is
well-formed) [ I'm not sure whether these facts are correct ]. If the facts
w.r.t. _who_ are indeed as described, then I suggest to add a condition to the
rule that strands prepositions (shift rule), i.e. that the who-form must be
_who_, not _whom_. In this way this phenomenon does not affect the Case
assignment transformation class described here$ 

$ The transformation class described here must assign Case to
parts of idioms. These cannot have their Case from some variable (since they
are not arguments) and they do not have it as an inherent property either if
the case can change$ 

$ In the languages under discussion (DES), it seems that the relevant rules
are relevant mainly for pronouns$

$ TC:ModalandPerfectswitch$. 
$ In Verb-raising structuren in the case of _hebben_ and _zijn_
and in the case of modals two orders are possible if the auxiliary verbs
are finite, cf. e.g. $
        dat hij de boeken heeft gelezen/ kon lezen
        dat hij de boeken gelezen heeft / lezen kon

$ TC:PPoverV$
$ These rules optionally put certain ppvar-s on the righthand side of the 
verb:e.g.$
                Hij heeft _naar de televisie_ gekeken -->
                Hij heeft gekeken _naar de televisie_
$ Some ppvar's cannot undergo this rule, e.g. directional argument PP's:$
                Hij is naar Amsterdam gewandeld
               *Hij is gewandeld naar Amsterdam  
$ cf. also Koster 75, LI$
$ Apparently only one PP can be subject to this rule at a time cf.$

$ Hij heeft op het perron op z'n vader gewacht$
$ Hij heeft op het perron gewacht op z'n vader$
$ Hij heeft op z'n vader gewacht op het perron$
$ *Hij heeft gewacht op z'n vader op het perron / op het perron op z'n vader$
 
$ The simple cases of this rule can be formulated quite easily. In the case of
Verb-Raising, however, PPvar-s can be lifted from indefinitely deep sentences,
which forms a problem given the M-rule mechanism. cf. e.g.:$

$ dat hij [VP [S VAR VP[ S[ VAR VP [ naar zijn vader te kijken ] ] proberen]
wilde] 
$UM
$RL 17

                                      S

                              VAR          VP

                                     S                V

                                 VAR    VP

                                       S      V

                                   VAR     VP

                                        PPVAR  V

   (hij var var naar zijn vader te kijken proberen wilde) -->
$RL 17

                                S

                          VAR        VP

                                 S       V

                                VP      V    V

                                S          V   V

                                VP

                                PP

$ where PP must be lifted onto a position under the uppermost VP, after V.
to get _dat hij  wilde proberen te kijken naar zijn vader_$
$ This problem must be solved in connection with other properties of V-raising,
in particular in connection with the issue whether there is some form of pruning
of S and/or VP nodes$
$ TC:NPoverAdv$
$ NP's (objrel, indobjrel) are to the right or to the left of sentence adverbs,
e.g.$ 
         Hij heeft waarschijnlijk twee boeken gelezen) of links
         Hij heeft deze boeken waarschijnlijk gelezen
$ The transformation NPoverAdv puts an Npvar to the left of a sentence adverb
or a negation element. If this element is not there yet, then the 
relevant effect can be achieved by positioning the relevant NP outside the
VERBP$ 
$ The same problem as arises with PPoverV can arise here, in the case pf Verb
Raising$
e.g. hij waarschijnlijk VP[ S[ VAR VP[ deze man  te bedanken ] probeerde ]]-->
     hij waarschijnlijk [[[ deze man ]] probeerde te bedanken -->
     hij deze man waarschijnlijk probeerde te bedanken
$ Again, this problem must be solved in connection with a theory of pruning
in the case of Verb Raising$
$ **Consider the possibility of triggering shift rule in english if this rule
has applied fails$
$NP 
subgrammar NOUNPPROPtoCLAUSE

import: NOUNPPROP; propositional constituents
export: CLAUSE

control expression:  {RC:propositionsubstitution}.RC:Clause-formation. 
          TC:Extraposition.TC:OCP-interpretation.
          T?:Postsubjformation.T:Er-insertion.TC:subject-verbagreement.
          [TC:PPoverV]

$ RC:Propositionsubstitution$
$ It substitutes propositions for variables, e.g.$
    CLAUSE [ subj/{*het*}, predrel/NOUNP{}[head/NOUNP{*tijd*},
                                           compl/VAR
                                         ],
             auxrel/VERB{*zijn*}
           ]
$ plus the  SENT _om weg te gaan_ yields: het tijd om weg te gaan$
$ However, it not necessary to do this in this way. The sentence might be
present already in NOUNPPROP by simple insertion (i.e. no variable is present)$
$ So maybe this rule class need not apply here$

$ RC:Clause-formation$
$ This rule spells time and aspect by introducing auxiliary verbs and setting
certain values for certain attributes. It changes the topcategory from
NOUNPPROP into CLAUSE. In the case of nouns for present en past tense in 
Dutch the auxiliary verb _zijn_ is introduced; Some other rule introduces e.g.
_worden_ .Of course the rule that introduces _zijn_ cannot be translated into
the rule that introduces _worden_$ 
$ Copular verbs like _lijken_, _blijken_ etc. are not introduced here, but are
basic expressions themselves. This might be done for _worden_ as well.$ 

$ TC:Extraposition$
$ It extraposes certain propositional constituents, in particuar sentences:$
$ --> het tijd zijn _om weg te gaan_$

$ TC:OCP-interpretation$
$ This transformation checks whether the PRO subject variable of an
embedded proposition if it is subject to Obligatory Control, has an
antecedent bearing the required syntactic relation, and whether it bears 
the same attribute values w.r.t person, number, gender and index$
$ It is not really clear whether it will ever be applicable here$

$ TC:Postsubj-formation$
$ It turns a subj into a postsubj, cf. e.g.$
$ omdat er iemand koning was$

$ T:Er-insertion$
$ It inserts ER as a subject if no subject is present and the postsubj
is indefinite.$

$ TC:Subject-verb agreement$
$ It account for the agreement between finite verb and subject, or if necessary
between verb and postsubj$

$ TC:PPoverV$
$ optionally ,it put's PPvar-s on the righthand side of the verb:$
$ Complements of the predicative noun should probably not be subject to this 
rule, but to the more general rule of extraposition out of NP. **investigate**$

$NP
subgrammar ADJPPROPtoClause

import: ADJPPROP
export: CLAUSE

control expression:  {RC:propositionsubstitution}.RC:Clause-formation. 
          TC:Extraposition.TC:OCP-interpretation.
          T?:Postsubjformation.TC:Er-insertion.TC:subject-verbagreement.
          [TC:PPoverV].[TC:NPoverAdv]

$ RC:Propositionsubstitution$
$ It substitutes propositions for variables, e.g.$
    CLAUSE [ subj/{*hij*}, predrel/ADJP{}[head/AdjP{*bang*},
                                          compl/VAR
                                         ],
             auxrel/VERB{*zijn*}
           ]
$ plus the  SENT _dat hij zou vallen_ yields: hij bang dat hij zou vallen zijn$

$ RC:Clause-formation$
$ This rule spells time and aspect by introducing auxiliary verbs and setting
certain values for certain attributes. It changes the topcategory from
ADJPPROP into CLAUSE. In the case of adjectives for present en past tense in 
Dutch the auxiliary verb _zijn_ is introduced; 
Some other rule introduces e.g. _worden_ or other copular verbs with this 
meaning, if possible or required , e.g. _raken_ (_hij raakte dronken_). Of
course the rule that introduces _zijn_ cannot be translated into the rules that
introduces _worden_ or _raken_$ 
$ Copular verbs like _lijken_, _blijken_ etc. are not introduced here, but are
basic expressions themselves. This might be done for _worden_ as well.$ 


$ TC:Extraposition$
$ It extraposes certain propositional constituents, in particuar sentences:$
$ --> hij bang zijn dat hij zou vallen$

$ TC:OCP-interpretation$
$ This transformation checks whether the PRO subject variable of an
embedded proposition if it is subject to Obligatory Control, has an
antecedent bearing the required syntactic relation, and whether it bears 
the same attribute values w.r.t person, number, gender and index$
$ It is not really clear whether it will ever be applicable here$

$ TC:Postsubj-formation$
$ It turns a subj into a postsubj, e.g.$
$ omdat er iemand bang was dat..)$

$ T:Er-insertion$
$ It inserts ER as a subject if no subject is present and obj, postsubj
or perhaps even complsubj are indefinite.$

$ TC:Subject-verb agreement$
$ It account for the agreement between finite verb and subject, or if necessary
between verb and postsubj$

$ TC:PPoverV$
$ optionally ,it put's PPvar-s on the righthand side of the verb:$
$ e.g.|... omdat hij blij _met de overwinning_ is$
$ |||||... omdat hij blij is _met de overwinning_$

$ TC:NPoverAdv$
$ optionally, it puts NPvar-s to the left of sentence adverbs or negation 
elements$
$ hij is waarschijnlijk _dat gedoe_ beu$
$ hij is _dat gedoe_ waarschijnlijk beu$
$NP
subgrammar PREPPPROPtoCLAUSE

import: PREPPPROP
export: CLAUSE

control expression:  {RC:propositionsubstitution}.RC:Clause-formation. 
          TC:Extraposition.TC:OCP-interpretation.
          T?:Postsubjformation.TC:Er-insertion.TC:subject-verbagreement.
          [TC:PPoverV]

$ RC:Propositionsubstitution$
$ It substitutes propositions for variables, but it is unclear whether this
rule is necessary here$

$ RC:Clause-formation$
$ This rule spells time and aspect by introducing auxiliary verbs and setting
certain values for certain attributes. It changes the topcategory from
PREPPPROP into CLAUSE. In the case of adjectives for present en past tense in 
Dutch the auxiliary verb _zijn_ is introduced; 
Some other rule introduces e.g. _worden_ (although this one seems to be 
excluded here) or other copular verbs with this meaning, if possible or
required (e.g. _ hij raakte aan de drank_, _hij raakte buiten het huis_). Of
course the rule that introduces _zijn_ cannot be translated into the rules that
introduces _worden_ or _raken_$ 
$ Copular verbs like _lijken_, _blijken_ etc. are not introduced here, but are
basic expressions themselves. This might be done for _worden_ as well.$ 

$ TC:Extraposition$
$ It extraposes certain propositional constituents, in particular
sentences, if they occur here at all:$

$ TC:OCP-interpretation$
$ This transformation checks whether the PRO subject variable of an
embedded proposition if it is subject to Obligatory Control, has an
antecedent bearing the required syntactic relation, and whether it bears 
the same attribute values w.r.t person, number, gender and index$
$ It is not really clear whether it will ever be applicable here$

$ TC:Postsubj-formation$
$ It turns a subj into a postsubj, e.g.$
$ omdat er iemand in de tuin was$

$ T:Er-insertion$
$ It inserts ER as a subject if no subject is present and postsubj
or perhaps even complsubj are indefinite.$

$ TC:Subject-verb agreement$
$ It account for the agreement between finite verb and subject, or if necessary
between verb and postsubj$

$ TC:PPoverV$
$ optionally ,it puts PPvar-s on the righthand side of the verb, but not
the PP functioning as the predicate (*omdat hij was in de tuin):$
$NP
subgrammar ADVPPROPtoClause

import: ADVPPROP
export: CLAUSE

control expression:  {RC:propositionsubstitution}.RC:Clause-formation. 
          TC:Extraposition.TC:OCP-interpretation.
          T?:Postsubjformation.TC:Er-insertion.TC:subject-verbagreement.
          [TC:PPoverV].[TC:NPoverAdv]

$ This subgrammar is intended for cases like _hij is hier_, _hij is
overal_ etc. It is not required to have this subgrammar if we consider 
these words to be cases of intransitive prepositions, or perhaps as 
adverbs that head a Prepositional Phrase. In that case these sentences
can be handled by the PREPPPROPtoCLAUSE subgrammar.$


$ RC:Propositionsubstitution$
$ It substitutes propositions for variables, e.g. ??$

$ RC:Clause-formation$
$ This rule spells time and aspect by introducing auxiliary verbs and setting
certain values for certain attributes. It changes the topcategory from
ADVPPROP into CLAUSE. In the case of locative adverbs for present en past tense
in Dutch the auxiliary verb _zijn_ is introduced;$

$ TC:Extraposition$
$ It extraposes certain propositional constituents, in particular sentences:$
$ e.g. ???$

$ TC:OCP-interpretation$
$ This transformation checks whether the PRO subject variable of an
embedded proposition if it is subject to Obligatory Control, has an
antecedent bearing the required syntactic relation, and whether it bears 
the same attribute values w.r.t person, number, gender and index$
$ It is not really clear whether it will ever be applicable here$

$ TC:Postsubj-formation$
$ It turns a subj into a postsubj, e.g.$
$ omdat er iemand hier was $

$ T:Er-insertion$
$ It inserts ER as a subject if no subject is present and obj, postsubj
or perhaps even complsubj are indefinite.$

$ TC:Subject-verb agreement$
$ It account for the agreement between finite verb and subject, or if necessary
between verb and postsubj$

$ TC:PPoverV$
$ optionally ,it put's PPvar-s on the righthand side of the verb:$
$ ???$

$ TC:NPoverAdv$
$ optionally, it puts NPvar-s to the left of sentence adverbs or negation 
elements, e.g. ???$
$NP
subgrammar: CLAUSEtoSENTENCE

import: CLAUSE;	 any category 
export: SENTENCE

RC:Reciprocalspelling1 .TC:ARGReflspelling1 .{RC:NOwhshiftsubstitution
.RC: Reciprocalspelling2 .TC:ArgReflspelling2} .RC:Negation-introductionrules
.TC:NegationOKrules .{RC:Nowhshiftsubstitution} .TC:PronounOKrules. TC:Errules
.TC:Shiftrules .{RC:Whshiftrelsubstitution} .TC:Er-Deletionrules
.Endclauserules 

TC: ArgReflspelling1, TC:Argreflspelling2
$ If two or more variables bear the same index, then we will call one of them
the _antecedent_ variable, the others the _anaphoric_ variables. The status of
a variable as an antecedent variable or as an anaphoric  variable is determined
by its position in the S-tree relative to other coindexed variables and by the
grammatical relation it bears (relative to the grammatical relation other
coindexed variables bear). If certain requirements are met (e.g. the second one
must not be the subject of an infinitival complement of a verb like
_beloven_),then the anaphoric variables are to be spelled out as reflexive
pronouns. This spelling out of such variables cannot take place at the moment
of substitution of the antecedent variable, for the following reasons:$

$ First, argument substitution can apply after the application of shift rules,
so that the antecedent can be at any distance from the variable to be replaced
by the reflexive pronoun:$

(2) _Wie_ dacht jij dat Piet zei dat _zichzelf_ gisteren had opgehangen? 

$ Second, the VAR to be replaced by the reflexive pronoun can have been shifted
itself as well, so that it is not clear whether it is to be replaced by a
reflexive anymore:$ 

(3) _Zichzelf_ heeft _hij_ nooit proberen te doden

$ Third, in certain cases the reflexive must be spelled out without
its antecedent being substituted for. This is necessary in the case
of infinitives without an overt subject. In Rosetta2, the variable functioning
as the subject of an infinitival complement disappears upon insertion 
of the complement clause. There is no substitution for this subject variable
at all. A reflexive must have been spelled out before this subject variable 
disappears.$

$ For these reasons, it seems necessary to spell out the reflexive element
at a point in the derivation before shift rules have applied, and it seems
necessary not to link it directly to the insertion of the antecedent$

$ We assume that there is transformation class spelling out argument
reflexives (TC:ARgreflspelling1) . It must contain transformations that spell
out a variable with index i as a reflexive pronoun (or some other appropriate
form, as indicated below) with the appropriate attribute-value pairs if there
is a VARIABLE with the same index that can serve as an antecedent: e.g. a
rel1/VAR can serve as an antecedent for a rel2/VAR if rel1 _higher than_ rel2,
where rel1 higher than rel2 can be defined as:$ 

rel1/.. asymmetrically c_commands rel2/.. 
or, there is mutual c_command and rel1 is higher than rel2 on the following
scale: 
subjrel > preadvrel > indobjrel > objrel 

$ The transformation class must contain rules for spelling reflexives
as obj-s, indobj-s, obj of prepobj-s, preadv-s, with differing antecedents:$

Hij zag zichzelf            (obj- ant: subj)
Ik raadde hem zichzelf aan  (obj-ant: indobj)
Hij gaf zichzelf een boek   (indobj- ant: subj)
Hij keek naar zichzelf      (obj of prepobj- ant: subj)
Zij stelden mij aan mezelf voor (aan-obj ant- subj)
Ik stelde hen aan elkaar voor   (aan-obj ant- obj)
Ik stelde hen elkaar voor       (obj ant: indobj) 
Ik raadde Jan waarschijnlijk zichzelf aan (obj, ant: preadv)

Example of possible formulation for one such transformation:

T:Reflexivisation1 { obj, indobj -VARs with element outside VP as antecedent}
m1: CLAUSE{} [ mu4, rel2/VAR{VARREC1}, mu1, pred/VERBP{VERBREC1}
                                           [ mu2,
                                             rel1/VAR{VARREC2},
                                             mu3
                                           ]
             ]
m: CLAUSE{} [ subj/VAR{VARREC1}, mu1, pred/VERBP{VERBREC1}
                                           [ mu2,
                                             rel1/NOUNP{NOUNPREC1}
                                                 [ head/REFLPRO{REFLPROREC1}],
                                             mu3
                                           ]
            ]

GEN     COND    VARREC2.index = VARREC1.index
                VARREC2.cases * [Nominative] = []
                rel2 in [subjrel, preadvrel]
        ACTION  REFLPROREC1 := {person: VARREC1.person,
                                number: VARREC1.number,
                                gender: VARREC1.gender
                                case  : VARREC2.case,
                                zelf  : true
                               }
                  ..               

$ The precise form of the word serving as a reflexive pronoun depends on
the direct environment the VAR is in:

VAR --> D:    zich   if a complement of certain prepositions (naast, bij 
                         etc.)
        E:    pronoun if a complement of certain prepositions (next to, near)

VAR --> D:    posspro  in the environment NOUNP{}[ __ head/NOUN ]
        E:    posspro  in the environment NOUNP{}[ __ GEN mu1 ]

VAR --> D:    zich    in the case of long distance anaphors in certain
                      constructions (hij hoorde haar op zich mopperen)
        E:    pronoun in this case 

VAR --> D:    zich(zelf) elsewhere
        E:    himself    elsewhere

$ Notice that possadj-s (e.g. _z'n_ in _z'n boek_ can now be derived in
certain cases in two ways, and thus has two meanings in these cases. This is
required, since the two cases are formally distinguished in Spanish in
certain constructions, e.g. _Se lave las manos_ (Hij wast z'n (eigen) handen)
vs. _Le lave las manos_ ( Hij wast zijn(iemand anders') handen).$

$ Similar facts (concerning the syntax) hold for reciprocals, but it is not
clear whether they should be dealt with in the same way as reflexives are. If
so, however, then we must have some way of distinguishing reflexive spelling
from reciprocal spelling. We can do so by assuming a _rule_ class of reciprocal
spelling (as opposed to the _transformation_ class for reflexive spelling).
(Although we can make the reflexive spelling also a _rule_, as far as I can
see)$ 
$ It seems that this can be done. Syntactically, reciprocals behave as 
reflexives do (it must have an antecedent, it must entertain a certain
structural and/or functional relation with its antecedent etc.). Semantically
the reciprocal seems to take some subset from the set denoted by its antecedent
(a variable X ranging over this subset replaces the antecedent) and to have its
own function replaced by X', a variable ranging over the complement of this
subset w.r.t. the set denotated by the antecedent. Thus the meaning of _de
mensen zagen elkaar_ can be represented as zagen (X, X') where X in XS, X' in
XS', XS U XS'= {x|mens'(x)}, XS INTERSECT XS' = {}$ 
$ Hence we add the RC:reciprocalspelling1$
$ There are,however, some problems with the approach sketched, which make
it necessary to extend it somewhat:$

$ Since reflexive elements can be inside NP-s, some reflexivization 
rules must apply at least after some substitution rules. This is
problematic for those cases where some NP has scope over the antecedent of a
reflexive contained in this NP:$ 

(4) Welk verhaal over zichzelf vond hij het leukst?

$ In (4) it is not clear how we can relate _hij_ and the reflexive pronoun
_zichzelf_. cf. also:$

(5) Welk verhaal over _zichzelf_ zei ik dat hij had verteld?

$ In the cases where scope and antecedent relationships run parallel, the
link can be made, if rules are written for these cases:$

e.g. 

VAR1 vertelde VAR2       --> substitution for VAR2:
VAR1 vertelde [ verhalen over VAR1 ] --> reflexivisation
VAR1 vertelde [ verhalen over zichzelf ] --> subst for VAR1
hij vertelde [ verhalen over zichzelf ]

$ For this purpose the TC:ArgREflSpelling2, and RC: Reciprocalspelling2 are
intended$ 

$ RC:Nowhshiftsubstitution$
$ It substitutes phrases for variables (arguments and adverbials ) that are not
going to bear a shiftrel later in the derivation. It does so by substituting
all arguments and adverbials from right to left .(i.e. if we adopt the
left-to-right scope hypothesis; Maybe certain phrases are substituted as the
last one to substitute, depending on the exact hypothesis on the realization of
scope differences that we adopt$ 

$ RC:Negation-introductionrules$
$ These rules introduce _niet_ as a sentence negator. Furthermore this Rule 
Class contains a rule that makes a sentence positive. We may have it contain 
an emphatic positive formation rule as well. Such a rule would introduce the
adverb _we^'l_ in Dutch, and it would introduce some element (e.g. in the
position where NOT would be otherwise) in English structures to block
do-deletion, e.g. [He do EMPH go ] --> [He does go ]$ 

$ TC:NegationOKrules$
$ These transformations take care of a number of changes that are 
required by the introduction of the negative element e.g.$
$ niet [ boeken ] --> [geen boeken] in the sentence$
$ Hij heeft niet boeken gelezen$
$ (which is a grammatical sentence, but only under a contrastive reading$ 

$ TC:PronounOKrules$
$ These transformations put the (personal, reflexive )pronouns in their
definitive positions. It should be considered whether this should be done
before, where a variable is put in the right position$ 
 
$ TC:Errules$
$ These account for the word _er_ and for other +R words . Maybe these rules
must,  at least partially, be applied earlier$

$ TC:SorPPoutofNP$
$ These transformations put a PP or an S outside an NP, or a NP in a PP,
under certain conditions. See the files [.iso.analyse]ppoutnp.dat and 
soutnp.dat for further restrictions$

$ TC:Shiftrules$
$ These transformations position a variable or a constituent containing a
variable (e.g. prepobjrel/PP-s) to the beginning of the sentence and assign
them the relation shiftrel. Furthermore a constituent bearing the relation
shiftrel is positioned from a deeper clause to the higher clause (successive
cyclic movement), cf. Rosetta2. In most cases the variables that are to undergo
these transformations are marked with a special attribute value, e.g. +wh,
or +d. Only in the case of topicalisation in Dutch almost any constituent 
can be put in front. It might make sense to distinguish topicalization 
and focussing. Both place elements to the beginning of the sentence;
topicalization however does so only in the matrix clause, whereas focussing
can do so successive cyclically. The constituent moved by focussing
is heavily stressed, the constituent preposed by topicalization is not$
**investigate**
$ To avoid unnecessary ambiguities, we exclude shifting of var-s that
bear the relation preadvrel, and of PPvar-s bearing the relation postverbrel$
$ However, in that case the following sentence forms a problem:$
$ Wie heeft hij aan elkaar voorgesteld?$
$ (_wie_ must have been a preadv to bind _elkaar_ in _aan elkaar_, cf.
argreflspelling$ **Reconsider**

$ RC:Whshiftrelsubstitution$

$ These rules introduce phrases into variables that bear the relation shiftrel
or that are contained in phrases that bear this relation$
$ Furthermore they substitute wh-phrases, even if they did not undergo shift
as e.g. in _Wie zag wat_?, at least to a certain extent, cf. Spanish(?) 
_Que ha visto quien_$
$ Furthermore, these rules introduce Left-Dislocated elements, in particular
sentences, optionally together with the pronoun they bind, e.g.:$

$ shiftrel/var ik toch niet had gedacht -->$

$ leftdislocrel/SENT[ dat hij dat zou doen], shiftrel/dat subjrel/ik toch niet
 gedacht had$
$ (--> dat hij dat zou doen, dat had ik toch niet gedacht)$
 
$ or:$  
$ leftdislocrel/SENT[ dat hij dat zou doen] subjrel/ik toch niet gedacht had$
$ (--> dat hij dat zou doen had ik toch niet gedacht)$

$ TC:ERdeletionrules$
$ This Transformation Class deletes ER-as a subject if this is possible, e.g.
for sentences such as : _In de tuin werd gedanst_; _Hij zei dat beweerd werd
dat ../ gebleken was dat.._ etc. The exact environment wher ER-deletion 
is possible must be determined more precisely$

Endclauserules=RC:Mooddetermination.TC:Conjunction-spelling.
                     TC:Verb-second.TC:Conjunctiondeletion 

$ RC:mooddetermination$
$ This rule class determines the 'mood' of the clause. It turns the topcategory
into the category SENTENCE, and sets certain atttibutes, e.g. declarive,
yes-no interrogative etc. and main clause vs. subordinate clause$
$ In certain cases the form of the verb plays a crucial role in the 
determination of mood, e.g. if the verb form, is imperative, then the sentence
must be an imperative as well. For this reason, we might consider having
mood determined much earlier, so that it can influence the choce of the
verbal forms. Otherwise, we might make Mood Determination rules that operate
in approximately the following way:$

  If there is a shiftrel/.. with mood: wh, then mood:= wh-interrogative
                            with mood: -wh, then mood:= declarative
          (if verbform is not imperative)
  else if verbform = imperative then mood:= imperative
       else introduce _laten_   (laten mood) OR
            mood:=declarative  OR
            mood:=yes-no interrogative
If mood = imperative or laten, then main clause:= true
                               else main clause := true OR false

$ TC:conjunction-uitspelling$
$ This transformation class spells out the required conjunction, if any, 
depending on the mood and other properties of the sentence, e.g. finite,
infinite, etc.$
 
$ TC:Verb-second$
$ This transformation class puts the finite verb on the second position if no
conjunction is present; alternatively: on the first position, or on the first
or second position depending on the mood$
$ The finite verb is either head/VERB in VERBP; aux/VERB (in VERBP?, under
head/VERB?) or head/VERB under head/VERB (V-raising structures). We exclude
V/2 for inverted modal and perfect verbs (cf.TC: PerfectandModalswitch)
to avoid superfluous ambiguities.$

$ TC:Conjunctiondeletion$
$ Certain conjunctions can now be removed, e.g. the conjunction _om_ in
certain cases, and the conjunction _of_ (or _of_ and _dat_), e.g.:$
$ ik weet niet _wie_/ _wie of(dat)_ er komt$ 
$NP
subgrammar NOUNPPROPnottoSENTENCE

import: NOUNPPROP
export: NOUNPPROP

control expression: {RNowhshiftsubstitution}.RC:Nonegationintroduction.
                    {RC:Nowhshiftsubstitution}.RC:ENDNOUNPPROPrules

$ R: Nonegationintroduction$
$ it in essence can be translated into the default rule (the positive rule)
from the RC: Negationintroductionrules from the subgrammar CLAUSEtoSENTENCE$
**to be added**
$NP
subgrammar ADJPPROPnottoSENTENCE

import: ADJPPROP; any category
export: ADJPPROP

control expression: {RNowhshiftsubstitution}.RC:Nonegationintroduction.
                    {RC:Nowhshiftsubstitution}.RC:ENDADJPPROPrules

$ R: Nonegationintroduction$
$ it in essence can be translated into the default rule (the positive rule)
from the RC: Negationintroductionrules from the subgrammar CLAUSEtoSENTENCE$
**to be added**
$NP
subgrammar ADVPPROPnottoSENTENCE

import: ADVPPROP
export: ADVPPROP

control expression: {RNowhshiftsubstitution}.RC:Nonegationintroduction.
                    {RC:Nowhshiftsubstitution}.RC:ENDADVPPROPrules

$ R: Nonegationintroduction$
$ it in essence can be translated into the default rule (the positive rule)
from the RC: Negationintroductionrules from the subgrammar CLAUSEtoSENTENCE$
**to be added**
$NP
subgrammar PREPPPROPnottoSENTENCE

import: PREPPPROP
export: PREPPPROP

control expression: {RNowhshiftsubstitution}.RC:Nonegationintroduction.
                    {RC:Nowhshiftsubstitution}.RC:ENDPREPPPROPrules

$ R: Nonegationintroduction$
$ it in essence can be translated into the default rule (the positive rule)
from the RC: Negationintroductionrules from the subgrammar CLAUSEtoSENTENCE$
**to be added**
$NP

subgrammar KLOKTIJDEN

import: PREP, NOUN, NUM
export: PREPP, NOUNP

control expression: **to be added** **maybe split up into NOUNP, PREPP 
$NP
subgrammar DATUMAANDUIDINGEN

import: **to be added**
export: **to be added**

Control Expression: **to be added**
$NP
Subgrammar LEEFTIJDAANDUIDINGEN
import: **to be added**
export: **to be added**

Control Expression: **to be added**
$NP

$ Some open questions:$

$ 1) How are middle verbs to be treated?? Are they to be related to the
active verbs (e.g. The books sell well vs. He sells the books, and
if so how: by M-rules? Can they make a variable disappear?? or perhaps
in the lexicon (but how???)$ 
