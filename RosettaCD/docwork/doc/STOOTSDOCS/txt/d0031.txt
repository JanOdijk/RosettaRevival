$FL 12
$PL 274,16
$LD 5
$OP SH=S,HY=1,la=E,ph=r,pn=c,AN=C
$NP 
$UC _
$SC &%
$AC @
$XC ~`

   

            Project ROSETTA : Machine Translation


            Topic     :  General

    ---------------------------------------------------------







         Title        :  Regels gegroepeerd

         Author       :  Lisette Appelo en Carel Fellinger









         Doc.Nr       :  31

         Date         :  85/07/15

         Status       :  informal

         Supersedes   :  

         Distribution :  project

         Clearance    :  project

         Keywords     :  regelklasse, hyperregel, subgrammatica
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 31                      date:85/07/15
$Np 1
      
REGELS GEGROEPEERD

0. Inleiding

Deze note is het resultaat van een aantal discussies die wij hadden in de
periode augustus 1984 - juli 1985 naar aanleiding van het bestuderen van de
M-grammatica voor Rosetta2. Hierbij stuitten wij voornamelijk op het bezwaar,
dat de regels zelf en hun interactie niet erg overzichtelijk zijn. Dit komt
doordat:
a. de M-regels vaak zeer complex geworden zijn, vermoedelijk omdat er allerlei
syntactische kwesties in regels beregeld worden waar ze semantisch gezien niet
thuishoren of omdat ze gewoon ergens geparkeerd moesten worden (bijv. in de
tijdregels).
b. er regels zijn die eigenlijk de lege betekenis hebben, maar die je toch niet
kunt missen en die niet gemakkelijk ergens onder te brengen waren  (bijv. end-
clauseregel). Dit is niet in strijd met de theorie, maar we vonden dat niet
mooi.
c. de regels in een bepaalde volgorde toepasbaar zijn en gestuurd worden met
topcategorieen, d.w.z. dat ze eigenlijk in groepen verdeeld zijn die van een
S-tree met een bepaalde topcategorie een S-tree met een andere topcategorie
maken. Hiermee wordt de grammatica gestuurd.
Verder zijn we ons gaan afvragen wat een regel nu precies is.

Oorzaak a en b kunnen worden weggenomen door het voorstel RN8405 (Lands-
bergen: "Een speciale behandeling voor syntactische transformaties?") aan te
nemen. Dit houdt in, dat er pure syntactische transformaties worden ingevoerd
naast de al bestaande regels waarvan per taal beslist kan worden waar ze uit-
gevoerd worden en die niet hoeven te voldoen aan de isomorfie-eis. De M-regels
kunnen hierdoor vereenvoudigd worden en betekenisloze regels zijn niet meer
nodig. 
In RN8407 (Landsbergen: Bestuurde M-grammatica's) wordt een voorstel gedaan om
oorzaak c te ondervangen: nl. introductie van bestuurde M-grammatica's, waarbij
de sturing van de grammatica explicieter gemaakt wordt door een verzameling
voorgangers van een regel te definieren.

Deze note sluit hierbij aan, maar verschilt vooral met RN8407 wat betreft de
status van een "groep regels".
Wij proberen nu op _informele_ wijze uit te leggen waarom een notie als "groep
regels" naar ons idee toch nuttig is en welke voordelen dit kan bieden.

In 1 komt het begrip "groep regels" in de M-grammatica aan de orde, in 2
proberen we informeel het concept "regelklasse" te definieren en en in 3
behandelen we de door ons gesignaleerde mogelijkheden en consequenties, in 4
introduceren we het begrip "subgrammatica" , 5 bevat een aantal problemen en 6
de voorlopige conclusies.

1. Een groep regels in de M-grammatica

In RN8407 wordt het idee van de bestuurde M-grammatica's beschreven. Dit voor-
stel geeft een expliciete volgorde aan waarin de (groepen) regels werken,
waarbij deze sturing opgenomen wordt in de formele definities door het begrip
"voorgangers" van een regel te introduceren.
De grammatica blijft equivalent aan de huidige. Het begrip "groep regels"
krijgt echter geen formele status.
Toch speelt dit begrip al een belangrijke rol in de huidige grammatica:
- een groep regels dekt als geheel een bepaald linguistisch verschijnsel in
taal; bijvoorbeeld: de tijdregels beschrijven alle soorten tijden in een taal,
de vpregels beschrijven het scala aan verbpatterns in een taal. Elke groep
heeft dus een bepaalde linguistische taak.
- een regel heeft als verzameling voorgangers altijd alleen regels uit (een)
bepaalde groep(en) regels, d.w.z. dat er eigenlijk een ordening op de groepen
regels vastgelegd is.
- regels uit de ene groep regels van een taal corresponderen niet met regels 
uit een niet-corresponderende groep in een andere taal. (Dit lijkt in strijd
te zijn met Landsbergen (1984) waarin een oplossing voor het graag-like-pro-
bleem in het Rosettakader uiteengezet wordt, maar geldt wel voor de huidige
Rosetta2-grammatica; zie ook 5.1)
- bij het werken met en uitleggen van de M-grammatica wordt vaak op het nivo
van de groepen regels gepraat.
- In de implementatie bestaat het begrip hyperknoop, dat ongeveer overeenkomt
met een deelverzameling van een groep regels.
Hoewel het voorstel in RN8407 al zeer tegemoet komt aan de wens een meer expli-
ciete sturing te hebben, zodat het begrijpelijker wordt wat er precies gebeurt,
stellen wij voor de notie "groep regels" een meer formele status te geven,
wanneer dat nuttig is.

2. Een informele beschrijving van regelklassen

Het begrip "groep regels" geven we om te beginnen een naam: regelklasse.
(Ter verduidelijking: wij hebben een regelklasse in de wandelgangen ook wel
hyperregel genoemd. Deze naamgeving was misschien enigszins historisch en
ontleende zijn bestaansrecht aan een zekere overeenkomst met de hyperknoop die
in de implementatie van de generatieve component van het systeem bestaat. Maar
wij vonden die naam verwarrend en wilden hem reserveren voor iets anders; zie
3.2.b en 3.3) 

De informele definitie is als volgt:
Een regelklasse is een verzameling regels die aan de volgende voorwaarden moet
voldoen:
1. De regels uit een regelklasse moeten semantisch verwant zijn in die zin, dat
ze samen een bepaald linguistisch fenomeen beschrijven dat bovendien "vertaal-
relevant" is. "Vertaalrelevant" wil zeggen dat er in alle talen eenzelfde
fenomeen bestaat, dat (vanuit vertaaloogpunt bekeken) informatie beschrijft die
bij het vertalen niet verloren mag gaan. Dit hoeft echter niet in hetzelfde
aantal regels per taal beschreven te worden. 
2. Een regel beschrijft een gedeelte van zo'n fenomeen en wel zodanig, dat
de regels van de regelklasse een "partitie" over dit fenomeen vormen.
3. Er bestaat voor iedere regelklasse in de grammatica van de ene taal een 
corresponderende regelklasse in de grammatica van de andere taal. En dat houdt
in, dat er voor iedere regel in de grammatica in elke andere grammatica min-
stens een regel bestaat waarmee hij correspondeert (isomorfie).
4. Een regelklasse kan niet met de "lege betekenis" corresponderen, waarbij
"lege betekenis" zoiets als "buiten de vertaalinhoud vallend" of "niet-ver-
taalrelevant" betekent.
5. Een regel mag wel met de "kanonieke of ongemarkeerde betekenis" correspon-
deren die wel als vertaalrelevante informatie beschouwd kan worden (zie hier-
voor 3.4.), maar niet met de lege betekenis.
6. Voor elk argument van een regel wordt de voorgangersverzameling gevormd door
een deelverzameling van e@'e@'n bepaalde regelklasse. 
7. Het toepassen van een regelklasse betekent, dat alle regels van een regel-
klasse 1 keer op de input toegepast worden (parallelle toepassing). 
8. Als een regel toepasbaar is, komt er een enkelvoudig resultaat uit.

Allerlei taalspecifieke regels moeten worden ondergebracht in de regels (waar-
bij het er in principe niet toe doet waar) of behandeld worden als transfor-
maties (zoals bijvoorbeeld in RN8405).
De regels binnen een regelklasse hoeven niet noodzakelijk hetzelfde aantal
argumenten te hebben.
Alle regels van een regelklasse worden e@'e@'n keer op de input toegepast, wat
inhoudt, dat er meer toepasbaar mogen zijn, en de vraag is nu of een
regelklasse in de hele controlestructuur e@'e@'n of meer keren toepasbaar mag
zijn. Bij een aantal zal het duidelijk zijn dat het maar e@'e@'n keer hoeft, nl
bij die van de "eindige patronen", maar niet bij de zgn. "recursieve regel-
klassen" waar geen eindig aantal toepassingen kan worden opgegeven (bijv. de
ADVP- en ADJPsubstitutieregels). Deze regels kenmerken zich door een oneindig
aantal mogelijke toepassingen van dezelfde regels op elkaar. Voor analyse is
het nodig dat dit beeindigd wordt door een zgn. "sluitregel".

3. Het nivo regelklasse: mogelijkheden en consequenties

3.1. Voordelen van een nivo regelklasse

Met de introductie van een extra nivo in de grammatica wordt het mogelijk een
uitspraak te doen over het wel of niet toepasbaar zijn geweest van een 
aantal regels, m.a.w. er wordt een mogelijkheid tot overzicht over een tussen-
resultaat gecreeerd.

a. robuustheid

Wat betreft de toepasbaarheid van de regels geldt voor generatie dat er altijd
iets uit de regelklasse moet komen, d.w.z. dat er minstens 1 regel toepasbaar
was van de uit transfer gekomen deelverzameling regels van de regelklasse
(in de implementatie samen de hyperknoop vormend), en voor analyse dat er al-
tijd iets uit de regelklasse moet komen in de robuustheidsmode.
Het idee, dat we hierbij hadden was dat elke regelklasse ook een speciale
robuustheidsregel zou moeten hebben die toegepast zou kunnen worden in de
robuustheidsmode die gaat werken als er geen enkel resultaat uit de analyse
is gekomen of geen enkele regel uit de hyperknoop in generatie toepasbaar
blijkt te zijn. Wel moeten deze regels berekend zijn op het zgn "ripple-effect"
dat kan ontstaat wanneer al een keer robuustheid is toegepast (zie RN8402 Fel-
linger, forthcoming?).
Door per regelklasse de robuustheid (in samenhang met zijn eventuele voorgan-
gers) te bekijken kan er misschien iets subtielers met robuustheid gedaan wor-
den dan alleen afdalen tot de bijna woord-voor-woord-vertaling, terwijl het 
toch nog redelijk lokaal gehouden kan worden. Dit vereist natuurlijk nog nader
onderzoek.

b. interactie

Het is misschien mogelijk interactie per regelklasse te bekijken. Wij onder-
scheiden twee soorten interactie:
1. het doel is desambiguering
2. het doel is robuustheid
ad1. Deze soort interactie is bedoeld om een keuze te maken uit de meerdere 
mogelijkheden die een regelklasse kan opleveren. Dit is ook de soort die er al
is om woordambiguiteiten op te lossen.
ad2. Deze soort interactie zou hulp kunnen bieden als er niets uit de regel-
klasse komt. Deze interactie is bedoeld voor analyse en kan helpen bij het
opsporen van fouten of een gebruiker attent maken op iets dat niet in het
systeem zit.
Deze aanpak is natuurlijk speculatief en vereist nader onderzoek:
- moet interactie bij elke regelklasse plaatsvinden?
- hoe verhoudt interactie zich tot het rippleeffect?
- etc.

c. bonussysteem

Het huidige bonussysteem is erg ad hoc en er is weinig zicht op wat de bonus-
toekenning in het totaal voor effect heeft. In principe kunnen bonussen worden
toegekend in analyse en generatie, d.w.z. in de  M-regels en in de transfer.
Het is onduidelijk wanneer je een plus- of minteken gebruikt en wat de"maat"
voorstelt. Misschien is het mogelijk binnen een regelklasse (en het stukje
transfer dat er bij hoort) richtlijnen te geven voor bonustoekenning en verder
op regelklassenivo te bekijken wat de waardes van bonussen t.o.v. elkaar
betekenen om wat meer grip op het totaaleffect van bonussen te krijgen.
Als robuustheidsmaatregelen aan de regelklasse gekoppeld worden, is het mis-
schien ook mogelijk hieraan een soort robuustheidsbonus toe te kennen die aan-
geeft hoe erg het misgegaan is. Dit kan bijvoorbeeld door elke keer dat het
nodig was een robuustheidsmaatregel toe te passen en negatieve bonus toe te
kennen (iets als het huidige sterrensysteem). De bonus zou dan niet alleen
voor het ordenen van de output gebruikt worden, maar ook voor het zichtbaar 
maken van de mate waarin iets fout gegaan is (gewogen fout).

Voor zowel robuustheid als interactie als bonustoekenning geldt dat het behalve
voor een goed overzicht van de zaken ook voor de implementatie handig lijkt om
een duidelijk aangrijpingspunt te hebben.

3.2. (Linguistische) efficientie

Met het nivo regelklasse is het misschien ook mogelijk een bepaalde (linguis-
tische) efficientie in te bouwen.

a. transformaties

Het idee uit RN8405 om  naast regels ook (taalspecifieke) syntactische trans-
formaties te hebben kan ook aan de regelklassen gekoppeld worden. De transfor-
maties worden niet na elke regel geprobeerd, maar bijvoorbeeld na elke regel-
klasse. Aan de regelklasse kan een bepaald pakket transformaties (een trans-
formatieklasse) gekoppeld worden dat bijvoorbeeld met die regelklasse samen-
hangt of waarvan bepaald is dat het na bepaalde regelklassen, waaronder deze,
moet worden toegepast. Het gaat hier om stukjes taalspecifieke syntaxis die de
huidige regels ingewikkeld maken en ondergeschoven zijn bij regels waar ze niet
thuishoren, of vaker voorkomen of geen vertaalrelevante betekenis hebben. 
Door talen vrij te laten waar die transformaties in het derivatieproces aan-
haken, kunnen de grammatica's er misschien "natuurlijker" uit blijven zien, 
terwijl de rigide derivatiestrategie van de regels van de grammatica (weer-
spiegeld in de sturing van de regelklassen) bewaard blijft. 
Het is wel zaak om goed te definieren wat er onder een transformatie ver-
staan moet worden, want er bestaat gevaar dat syntactische operaties van regels
steeds meer beperkt worden tot het laten veranderen van een attribuutwaarde
en om dan de echt syntactische verandering op een gunstig moment door een 
transformatie te laten doen (voorbeeld: in de voiceregels wordt de waarde van
het attribuut voice active of passive en worden de argumentvariabelen op een
andere plaats gezet, maar het al dan niet introduceren van het hulpwerkwoord
van de passieve vorm komt pas in de tijdregels). Het nemen van een beslissing
en het uitvoeren ervan worden gescheiden. De vraag is of dit de overzichtelijk-
heid bevordert en of het de bedoeling is.

b. trapsgewijze condities: de hyperregel

In een regelklasse heb je te maken met regels die vaak op argumenten werken die
veel met elkaar gemeen hebben in structuur- en/of andere eigenschappen. Het
lijkt nu mogelijk om deze samen te vatten en alleen daar waar dat nodig is de
specifieke gevallen te onderscheiden met bijvoorbeeld subcondities en subac-
ties die zowel op structuur- en/of andere eigenschappen (attribuutwaarden)
mogen slaan.
Je krijgt dan eerst een globale structuur met sigma's, mu's, record-, catego-
rie- en relatievariabelen die dan later in de subcondities en -acties met de
betreffende waarden aan de orde komen. Zo'n subconditie-actiestukje is dan de
eigenlijke regel (idee Jan Landsbergen). Op deze manier kunnen regels op een
overzichtelijke manier in elkaar geschoven worden en heb je niet het idee
steeds hetzelfde te doen. Er zijn ook nu al regels die er op die manier een
stuk leesbaarder van zouden worden.
Dit soort regels zou je hyperregels kunnen noemen. De vertaalrelevante informa-
tie (corresponderend met de regels) moet dan via parameters doorgegeven worden
(zoals ook nu het geval is).
Een hyperregel mag alleen regels uit eenzelfde regelklasse samennemen.
Analoog aan de hyperregel kun je ook hypertransformaties definieren.
Zoals in de voorwaarden voor een regelklasse staat, komt er uit een regel als
hij toepasbaar is, e@'e@'n resultaat. De vraag is nu of er uit een hyperregel
ook slechts een enkelvoudig resultaat mag komen. Als dat het geval is, dan
mogen alleen regels die elkaar uitsluiten in een hyperregel samen worden gezet.
Daar het criterium voor het maken van een hyperregel is, dat de regels over-
eenstemming vertonen, zodat het linguistisch efficient is om ze bij elkaar te
nemen, lijkt dat toch niet altijd wenselijk.
De huidige regels zijn in onze definitie meestal hyperregels.

$RL 3
3.3. Hyperregels en regelklassen

Een regelklasse kenmerkt zich door een "volledige" semantische verwantschap van
zijn regels. De hyperregel kenmerkt zich door semantische verwantschap van re-
gels die niet "volledig" hoeft te zijn en door sterke overeenkomst van de glo-
bale structuur van de regels waar hij voor staat. Het is mogelijk dat de regels
van een regelklasse tot meer dan e@'e@'n hyperregel worden afgekort. Dit lijkt
ook noodzakelijk te zijn als er regels met een verschillend aantal argumenten
in zo'n regelklasse zitten. 
Het is namelijk moeilijk die in een hyperregel te stoppen, omdat dan het aantal
argumenten van de hyperregel variabel zou moeten zijn. Een voorbeeld hiervan
zou een hyperregel voor de startclauseregels zijn; deze vormen een regelklasse
als je vindt dat functietoepassing op 0,1,2 of 3 argumenten verwant is. Deze
hyperregel zou dan als argumenten een VERB en een aantal variabelen hebben.
Nu is het wel zo, dat je kunt zeggen wat de grenzen van dat aantal variabelen
is, nl. 0 tot 3. Op zich zou het dan dus ook niet moeilijk moeten zijn om de
hyperregel zodanig te specificeren dat er een minimum en een maximum aantal 
variabelen is. In generatie is het aantal aanwezige variabelen bekend, in ana-
lyse stel je het vast. 

Ter discussie:
Over de doorwerking van het aantal argumenten van een VERB valt nog wel iets
te zeggen, want het aantal argumenten van een VERB (de variabelen), een
inherente eigenschap, blijft in een aantal regels en transformaties een rol
spelen, nl. in de vpregels (een soort transformaties) en de substitutieregels.
Het ligt voor de hand om van deze kennis gebruik te maken en de betreffende
regelklassen op grond hiervan in te delen in subklassen. Zodra het aantal
argumenten(n) bekend is, is ook bekend welke regels uit een aantal regel-
of transformatieklassen in ieder geval niet meer toepasbaar zullen zijn.
De vpregels zijn eenvoudig in te delen op die manier, daar dit al uit hun
naamgeving blijkt. De emptysubstitutieregels vormen a.h.w. de overgang van
het inherente aantal variabelen naar het in werkelijkheid aanwezige aantal
variabelen (existentiele quantificatie). Ze veranderen het getal n.
De argumentsubstitutieregels kunnen ook zo ingedeeld worden in subklassen,
maar een aantal regels zal dan in meerdere subklassen voorkomen (bijv. de
regel voor het subject). (Zie ook RN8407.)

3.4. Het "kanonieke" geval

Bij een dergelijke aanpak met regelklassen moet ook bekeken worden wat het
"kanonieke" geval ofwel het geval waarin de syntactische operatie leeg is 
betekent. Dit doet zich voor als een regelklasse als het ware overgeslagen 
mag worden. Hoort dat geval nu wel of niet bij het linguistische fenomeen
dat correspondeert met de regelklasse? Het is natuurlijk altijd mogelijk een
regel op te nemen voor het kanonieke geval, zoals nu ook gebeurt bij bijv.
de positiefregel (in de "negatieregels") of de shiftregel die niets "shift"
(in de shiftregels). Een voordeel van een dergelijke aanpak is dan dat je een
regelklasse niet mag "overslaan", je minder loops hebt in je "sturingsplaatje"
en de voorgangersverzamelingrelatie duidelijker wordt, omdat er minder regel-
klassen in aanmerking komen. Het heeft wel als consequentie, dat je een regel
zou moeten hebben voor de niet-emptysubstitutie (voor het geval dat het aantal
argumenten van een VERB er ook werkelijk is) en voor de niet-argumentsubsti-
tutie (voor het geval van 0 argumenten). 
Dit laatste is misschien niet bepaald wat men gewoonlijk onder "kanoniek" ver-
staat, omdat daarbij meestal aan iets als "meest voorkomend" wordt gedacht. Ook
de notie "eenvoudigst" wordt veel gebruikt, waarbij dan zoiets als "met het
minste aantal regels gegenereerd uit de dieptestructuur" wordt bedoeld. Kano-
nieke vorm is vaak ook synoniem met dieptestructuur. De term "ongemarkeerde
vorm" (vs. "gemarkeerde vorm") is ook in zwang in de taalkunde.
Zeker vanuit het oogpunt van elegantie (en efficientie) zijn er redenen aan te
voeren om in de morfologie en misschien ook in de syntaxis iets als een kano-
nieke vorm te hebben, maar het is de vraag of wij dat ook in onze isomorfe 
grammatica's op alle punten moeten volhouden. Wanneer nl. in isomorfe gramma-
tica's een kanonieke vorm bestaat, dan betekent dat, dat die in de grammatica's
voor alle talen hetzelfde moet zijn in het geval dat die kanoniciteit zich uit
in het ontbreken van regels in de grammatica. Nu zal dat zo op het oog voor de
talen die wij behandelen geen probleem opleveren, maar het is bekend dat talen
vooral in vorm verschillen en ook wel op dieptestructuurnivo.

Voorbeeld: Stel bijvoorbeeld, dat we Engels als SVO-taal en Nederlands als 
SOV-taal behandelen en we de declaratieve mood en de hoofdzin als
kanoniek beschouwen. En verder dat de kanonieke vorm betekent, dat er geen 
regel voor dat geval is, er een groep regels of een regelklasse "mood" be-
staat waarin de imperatieve en de vragende mood worden geregeld met hun bij-
behorende syntactische operaties en in de substitutieregels voor complement-
zinnen de bijzinsvolgorde geregeld wordt.
Dat Nederlands een SOV-taal is heeft,- als we een gangbare theorie hierover
volgen - als consequentie dat het werkwoord helemaal naar voren wordt geplaatst
(SOV is de bijzinsvolgorde) op het moment, dat het duidelijk is, dat het een
hoofdzin wordt (VSO). Dit houdt in, dat er in het geval dat het een hoofdzin
wordt er een actie uitgevoerd moet worden en dat kan niet als er geen regel
is waarin dat kan gebeuren. In het Engels hoeft er in dit geval niets te ge-
beuren (SVO-taal). Op het moment, dat we bij de moodregels aangeland zijn,
moet er in het Nederlands iets met het werkwoord gebeuren, als het om de de-
claratieve mood gaat, want VSO is de vraagzinvolgorde: het werkwoord moet over
de eerste constituent heen geplaatst worden (SVO). Ook hier weer: dit kan 
alleen als er voor de declaratieve mood een regel in het Nederlands bestaat;
in het Engels hoeft er niets te gebeuren.
Het blijkt dus dat als hoofdzinvolgorde en declaratieve mood kanoniek zijn
(wat in het Engels heel plausibel lijkt) je in het Nederlands niet uit moet
gaan van een SOV-volgorde, hoewel daarvoor in de Nederlandse taalkunde argu-
menten voor te vinden zijn en het de Nederlandse grammatica misschien elders
veel eenvoudiger zou kunnen maken.

Wanneer we in de grammatica wel altijd een regel zouden hebben voor de blijk-
baar taalspecifieke vorm die syntactisch gezien leeg is, kan dit probleem niet
ontstaan.
Een ander oplossing voor bovenstaand probleem is natuurlijk om wel een "univer-
sele" kanonieke vorm vast te stellen en de syntactische operaties die dan
blijkbaar toch nog nodig zijn in een bepaalde taal gewoon taalspecifieke trans-
formaties te noemen en ze ergens uit te voeren. Het enige nadeel hiervan is dat
deze transformaties naar ons idee wel een zekere vertaalrelevante betekenis 
hebben, wat eigenlijk niet de bedoeling is van transformaties (een transfor-
matie is bijv. bedoeld voor het maken en het op de goede plaats zetten van een
reflexief voornaamwoord; reflexiviteit van een werkwoord is geen vertaalrele-
vante eigenschap van een werkwoord).
Vanuit de optiek van regelklassen die moeten corresponderen met een vertaal-
relevant linguistisch fenomeen lijkt het ons echter niet vreemd om de onge-
markeerde vorm hierin op te nemen. Het is ook niet altijd zo, dat er duidelijk
een ongemarkeerde vorm aan te wijzen is, zoals bijvoorbeeld bij de tijden,
hoewel je er natuurlijk een aan zou kunnen wijzen (in de logica wordt bijv.
altijd uitgegaan van de Present en bestaan er operatoren voor andere tijden).
Een ander voordeel van een kanonieke vorm lijkt een bepaalde robuustheid te
zijn: als er onverhoopt een groepje regels niet toepasbaar blijkt te zijn, rolt
de kanonieke vorm er van zelf uit. Door aan elke regelklasse een speciale 
robuustheidsregel toe te voegen (en dat kan best de "kanonieke" regel zijn) 
wordt dat ook opgelost en kun je het nog expliciet aangeven ook.

3.5. Samenvatting

De gesignaleerde mogelijkheden en consequenties die ontstaan bij het onder-
scheiden van een nivo regelklasse zijn samengevat als volgt:
a. het lijkt mede vanuit het oogpunt van implementatie wenselijk een nivo te
hebben waarop robuustheid, interactie en bonustoekenning kunnen aangrijpen.
b. er kan enige linguistische efficientie bereikt worden door plaatsen te 
hebben waar transformaties ingevoegd kunnen worden en waar over bepaalde 
(structurele) condities gegeneraliseerd kan worden.
c. de definitie van wat een hyperregel is, is belangrijk, want als dat tot
gevolg heeft, dat er hyperregels met een variabel aantal argumenten komen, dan
is dat alleen mogelijk als de range van dat aantal eindig en bekend is. Het
expliciet vaststellen van zo'n aantal argumenten dat van toepassing is, kan
binnen de grammatica voordelig uitpakken, doordat hiermee de verzameling
mogelijk toepasbare regels ingeperkt kan worden.
d. hyperregels worden in de eerste plaats ingevoerd als afkorting.
e. het is noodzakelijk per regelklasse vast te stellen wat er onder het kano-
nieke geval verstaan wordt.
Wanneer aangenomen wordt, dat de kanonieke, ongemarkerde vorm in alle talen
dezelfde is, dan kan hij buiten beschouwing gelaten worden bij de beschrijving
van de linguistische taak van een regelklasse, maar wanneer er geen duidelijke
aan te wijzen is of als talen hierin erg afwijken lijkt het beter dit niet te
doen. In dat geval levert de kanonieke regel een syntactisch lege regel op en
kan de kanonieke vorm niet meteen als robuustheidsmaatregel gelden. Een voor-
deel bij een dergelijke strategie is dat de voorgangersverzameling van een
regel vaak uit minder regelklassen afkomstig zal zijn.

4. Subgrammatica's

Behalve groepen regels te onderscheiden zoals bij regelklassen gebeurt, is het 
natuurlijk ook mogelijk om regels op een andere manier te groeperen. Je zou
bijvoorbeeld als criterium de vertaaleenheid kunnen nemen. Tot nu toe is de
vertaaleenheid de zin en de grammatica een zinsgrammatica, d.w.z. een groep 
regels die tot doel heeft een zin te genereren (resp. analyseren). De top-
categorie van deze grammatica is dan ook S of Sentence.
Nu is het zo, dat deze grammatica een andere constituent, kleiner dan de zin
als een onvolledige zin beschouwt en deze met een aantal robuustheidsmaat-
regelen genereert (resp. analyseert). Het is voorstelbaar, dat we in de toe-
komst een iets flexibelere notie vertaaleenheid zouden willen hebben. Bijvoor-
beeld in de frasenvertaler Rosetta3 zou je "frasen" als vertaaleenheid willen
kunnen zien. Dit kan zoals in Rosetta2 met robuustheid of door een begrip
"subgrammatica" te introduceren dat wil aangeven, dat je ook een onderdeel
van een zin kunt genereren (resp. analyseren) en dat je dat doet met een stukje
van de grammatica. 
Dit kan als volgt:
Er wordt een verzameling SUBTOPCAT gedefinieerd die correspondeert met topcate-
gorieen van wat je als frase zou willen bestempelen. Te denken valt aan een
verzameling als {NP, ADVP, PP, ADJP(?), .....}.
Een  subgrammatica H van grammatica G is dan een een grammatica met domeinen
T%H%, T%M,H%, T%M,H&+& (analoog gedefinieerd aan die van G) een verzameling
M-rules en een eindcategorie uit de verzameling SUBTOPCAT, en waarvoor
geldt, dat de verzameling welgevormde S-trees (T%M,H%) een subset is van de
verzameling T%M&+& van G, domein T%H%  een subset is van domeint T van G en de
verzameling M-rules van H een subset is van de verzameling M-rules van G.
De regels van een subgrammatica kunnen net als die van de (zins)grammatica
weer gegroepeerd zijn in regelklassen zoals hierboven is beschreven die 
bestuurd worden via het voorgangersprincipe. Als H regelklassen heeft, dan en
slechts dan heeft G die regelklassen ook. Slechts in geval dat G een gestuurde
M-grammatica is, heeft H een "deelsturing" van G. 
Opvallend is, dat de subgrammatica's waar we in eerste instantie aan dachten
allemaal uitgaan van een speciale basiscategorie (nl. NOUN, ADV, PREP, ADJ).
De zinsgrammatica is erop gebaseerd, dat er in ieder geval een VERB aanwezig 
is.

5. Problemen

Ook in een grammatica met regelklassen en subgrammatica's blijven er problemen
bestaan, nl. de echte vertaalproblemen (4.1.) en problemen om de grammatica 
netjes formeel te definieren (4.2.).

5.1. "Categoryclash"

Het prettigst zou het natuurlijk zijn als de hierboven beschreven subgramma-
tica's isomorf zouden zijn, en dat elke regelklasse precies 1 corresponderende
regelklasse had, maar hier doet zich het uit de praktijk bekende probleem voor
dat een NP misschien niet altijd in een NP vertaald moet worden. Dit probleem
was er in principe ook al, als een zin niet in een zin , maar bijvoorbeeld al-
leen in een NP vertaald zou kunnen worden.
Het gaat hier eigenlijk om het graag-like-probleem (c.f. Landsbergen (1984)) 
waar door het verschil in syntactische categorie (niet in semantische, nl. een
2-plaatsige functie) problemen kunnen ontstaan met het laten corresponderen van
regels van de grammatica: ADVP-regels gaan corresponderen met CL-regels. Als 
dit verschillende, in principe niet-corresponderende  regelklassen zijn (ze
komen immers uit verschillende subgrammatica's) , dan is dit in strijd met de
eis aan regelklassen, dat een van z'n regels altijd correspondeert met een
regel uit een corresponderende regelklasse. Als dit echter een veelvuldig
voorkomend verschijnsel is, dan zullen we hier toch een oplossing voor moeten
zien te vinden.
Nog een paar voorbeelden hiervan zijn:
He happens to come                 : hij komt toevallig
He might come                      : hij komt misschien
Misschien is het daarom beter regels te groeperen naar hun semantische functie
dan naar hun syntactische. Binnen zo'n regelklasse is het dan al snel duidelijk
welke van de syntactische richtingen men op moet gaan, door naar de categorie
van de head te kijken die toch meestal de clash veroorzaakt.
Je krijgt dan a.h.w. "parallelle subgrammatica's"(syntactisch georienteerd) die
als dwarsverbanden "semantische" regelklassen hebben die als semantisch dwars-
verband bijvoorbeeld het aantal argumenten van de (semantische) functie (n)
kunnen hebben (dit hoeft niet voor elke n)
Voorbeelden waarbij dit voorkomt zijn:
1. een VERB met 2 argumenten waarvan de tweede een clause is - 
   een ADV met 2 argumenten waarvan de tweede een clause is
2. een PP met 1  argument dat een clause is -
   een ADV met 1 argument dat een clause is
Consequentie is dat je voor elke regelklasse in een parallelle subgrammatica
er ook een in elke andere parallelle zou moeten hebben. Regelklassen zoals
tijd, mood, voice die typisch voor de zinsgrammatica van toepassing zijn
moeten dan ook voorkomen in de ADVP en de PP-grammatica. In zekere zin gebeurt
dit al met tijd (supertense) en soms de mood(?). En komen er dan ook adverbium-
patternregels en emptysubstitutieregels voor adverbia?
(incompleet)

5.2. Formele definities

Wanneer regelklassen echt in het systeem opgenomen zouden worden en variabel 
aantal argumenten van hyperregels zou worden toegestaan, dan moeten ook de
formele definities aangepast worden. Hieraan hebben we geroken; we hebben
slechts vastgesteld dat ze er ingewikkelder van worden, maar het lijkt op het
eerste gezicht niet onoverkomelijk.
Deze note draagt dan ook een informeel karakter en dient slechts om een aantal
ideeen op een rijtje te zetten.

6. Voorlopige conclusies

Bij introductie van regelklassen en hyperregels in de grammatica zien wij de
volgende voordelen:
a. Het is voordelig een nivo te hebben waar je een stukje kunt overzien om de
robuuustheidsmaatregelen te nemen, interactie (met gerichte vragen) of een
pakketje transformaties te kunnen laten aangrijpen en het bonussysteem op
globaler nivo te kunnen bekijken.
b. Voor de implementatie lijkt een dergelijke meer modulaire aanpak prettig.
c. Door gebruik te maken van kennis over overeenkomstige condities en beper-
kingen kan een zekere linguistische efficientie bereikt worden.
d. de eisen aan een regelklasse, dat hij over een vertaalrelevant linguistisch
fenomeen moet gaan, terwijl tegelijkertijd aan de isomorfie-eis van de gramma-
tica's (in termen van regels) moet worden voldaan, het verbod op vertaalseman-
tisch lege regels en regelklassen, het invoeren van taalspecifieke, vertaal-
semantisch lege transformaties en het geven van een expliciete sturing via
de voorgangerrelatie (op regel- of regelklassenivo) maken de grammatica over-
zichtelijker en begrijpbaarder. Ook is duidelijker hoe taken over linguisten en
linguistische theorieen verdeeld kunnen worden.
e. Door na te denken over de begrippen hyperregel, regelklasse en regel is 
duidelijk geworden wat voor soorten "regels" er bestaan.
f. De notie subgrammatica is misschien te gebruiken in Rosetta 3 en helpt
misschien bij het verkrijgen van inzicht in de echte vertaalproblemen.

We willen hier nog aan toevoegen, dat het ons inziens een goede zaak is taal-
specifieke en vertaalrelevante fenomenen in taal te scheiden en te proberen
zonder de isomorfie-eis te laten vallen de grammatica's van de verschillende
talen er zo "natuurlijk" mogelijk uit te laten zien.
Verder willen we er nog op wijzen, dat vertalen in principe een semantische 
onderneming is en dat het daarom voor de hand ligt semantisch vertaalrelevante
criteria te hanteren bij het opsplitsen van de grammatica in regels en grotere
gehelen.
Een grammatica met regelklassen, hyperregels en subgrammatica's zoals hierboven
beschreven is een poging daartoe. Op zich is deze equivalent wat betreft kracht
met de huidige (Rosetta2)grammatica en het is ook mogelijk om een dergelijk
nivo niet in het systeem te introduceren, maar er slechts "conceptueel" vanuit
te gaan, zodat de ontwikkelaars van het systeem overzicht kunnen houden van
waar ze mee bezig zijn. Het genoemde voordeel d blijft dan behouden, al treedt
er dan een verschil op tussen papier/concept- en systeemgrammatica. 
Ook is het mogelijk alleen voordeel c te beogen en alleen regels op overzichte-
lijke manieren samen te klappen tot hyperregels op grond van overeenkomsten in
(structurele) condities.
Voordelen a en b kunnen niet optreden zonder een nivo van regelklasse echt in
het systeem te brengen.
