h43950
s 00036/00000/01009
d D 1.2 92/02/21 15:41:52 rous 2 1
c 
e
s 01009/00000/00000
d D 1.1 91/05/23 13:13:49 leermake 1 0
c date and time created 91/05/23 13:13:49 by leermake
e
u
U
f e 0
t
T
I 1

 
(*MPD:::===================================================================*
 *
 *  Rosetta Project
 *
 *  Module Title    : LSMRUQUO
 *  Creation date   :  14-SEP-1987
 *  Author          : rene leermakers
 *
 *  Copyright (c) 1987, by Nederlandse Philips Bedrijven BV.
 *
 *  Remarks         : Contains language dependent procedures and functions
 *                    for use in Mrules.
 *
 *EMP:::===================================================================*)

pragma C_include ('lsdomaint.pf');
pragma C_include ('lsstree.pf');

PACKAGE LSMRUQUO;
WITH lsdomaint,lsstree;


TYPE
 LSMRUQUO_pListOfStrees = ^LSMRUQUO_ListOfstrees;
 LSMRUQUO_ListOfStrees = RECORD
                         first,last:LSSTREE_pRelNode
                         END;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_copytreeifvar
 *  Description    : This procedure executes T2:=T1 if T1.cat IN varcatset
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_copytreeifvar(
                     T1:LSSTREE_pstree;VAR T2:LSSTREE_pstree);
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_UpToAmbiguity
 *  Description    : the cases that do not result in ambiguity are
                     explicitly mentioned
 *  Parameters     : T1: subjrel Stree, T2: Stree to be topicalized
 *  Result         : BOOLEAN
 *  Precondition   : (T2^.CAT = NPVAR)
 *  Postcondition  : yields true if topicalization of T2 in a sentence
                     with T1 as a subject yields no ambiguity at  the
                     surface,false otherwise
 *  Side Effects   : none
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_UpToAmbiguity(T1,T2:LSSTREE_pSTREE)
                    : BOOLEAN;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_hebbenorzijnfound
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_hebbenorzijnfound(mu:LSMRUQUO_ListOfStrees)
                    :BOOLEAN ;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_bigpronp
 *  Description    : yields true if T is of the form NP[head/BIGPRO],
                            fasle otherwise
 *  Parameters     : T: LSSTREE_pSTREE
 *  Result         : BOOLEAN
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_bigpronp(T:LSSTREE_pSTREE)
                    :BOOLEAN ;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : varinradv
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_varinradv(T:LSSTREE_pSTREE)
                    :BOOLEAN ;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : checkindices
 *  Description    : checks whether indices in two NPVARs or CNVARs are the
                     same
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_checkindices(T1,T2:LSSTREE_pSTREE)
                    :BOOLEAN ;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : normalergative
 *  Description    : yields true if the verb is a normal ergative verb,
                     i.e. vp010 or vp012 but not of the `het regent bommen'
                     type
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : vrec=VREC
 *  Postcondition  : VREC.thetavp IN [vp010,vp012]     &
                     ( VREC.Caseassigner = false    V
                       VREC.reflexivity = reflexive
                     )
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_normalergative(Vrec:LSDOMAINT_VERBrecord)
                    :BOOLEAN ;
EXTERNAL;

(*MPF:::===================================================================*
 *
 *  Function Name  : varsintree
 *  Description    : yields true if there are variables in the tree t
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : t=T
 *  Postcondition  : (Ex:x IN LSDOMAINT_VARCATSET: x contained in T)
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_varsintree(t:LSSTREE_pSTREE)
                    :BOOLEAN ;
EXTERNAL;




(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_polarityok
 *  Description    : yields true if polarity properties are satisfied,
                     false otherwise
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_polarityok(t:LSSTREE_pStree)
                    :BOOLEAN ;
EXTERNAL;



(*MPP:::===================================================================*
 *
 *  Function Name   : CheckAktarts
 *  Description     : checks whether the aktionsarts are compatible with 
                      the classes  of a verb. (Jan Odijk)
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_CheckAktarts(
                     classes:LSDOMAINT_classSETtype;
                     aktarts:LSDOMAINT_AktionsartEFFSETtype)
                     
                    :BOOLEAN;

EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function Name   : AssignAktarts
 *  Description     : Assigns the aktionsarts compatible with 
                      the classes  of a verb. (Jan Odijk)
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 PROCEDURE LSMRUQUO_AssignAktarts(
                     classes:LSDOMAINT_classSETtype;
                     VAR aktarts:LSDOMAINT_AktionsartEFFSETtype);
                     

EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_Contains2sgsubj
 *  Description    : true if mu contains a 2 person singular subject, false
                     otherwise
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Contains2sgsubj(mu: LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_ElkaarAnt
 *  Description    : 
 *  Parameters     : 
 *  Result         : true if T is a potential antecedent for `elkaar' 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_ElkaarAnt(T:LSSTREE_pSTREE)
                    : BOOLEAN;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_assspecmax
 *  Description    : 
 *  Parameters     : 
 *  Precondition   : s1=S1 & s2=S2 & &  S1,S2 IN [yesspec,nospec]
 *  Postcondition  : s3= yesspec if  S1= yesspec V S2 = yesspec
                     s3= nospec  otherwise
 *  Side Effects   : none
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_AssSpecmax(s1, s2:LSDOMAINT_specqtype;
                                         VAR s3:LSDOMAINT_specqtype);
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_specmax
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : s1=S1 & s2=S2 & & s3=S3 S1,S2,S3 IN [yesspec,nospec]
 *  Postcondition  : true iff (S3= yesspec & (S1= yesspec V S2 = yesspec)) V
                              (S1=S2=S3=nospec)
                     false otherwise
 *  Side Effects   : none
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_specmax(s1, s2,s3:LSDOMAINT_specqtype)
                    : BOOLEAN;

EXTERNAL;

(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_Deixismax
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Deixismax(d, s, ns:LSDOMAINT_deixistype)
                    : BOOLEAN;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Procedure Name  : LSMRUQUO_assdeixismax
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *  Side Effects    : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_assdeixismax(d,s: LSDOMAINT_deixistype; 
                          VAR res:LSDOMAINT_deixistype);
EXTERNAL;




(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_errelinpp
 *  Description    : 
 *  Parameters     : T: LSSTREE_pStree
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_errelinpp(T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;

I 2

E 2
(*MPF:::===================================================================*
 *
I 2
 *  Function Name  : LSMRUQUO_hetetcinpp
 *  Description    : determines whether an NP or NPVAR with possrform=true
                     is immediately dominated by the topnode PREP or VARPREPP
 *  Parameters     : t: LSSTREE_pStree
 *  Result         : BOOLEAN
 *  Precondition   : t=T
 *  Postcondition  : T.CAT IN [PREP, VARPREPP] & T= N[.../T'...] with
                     T'.cat in [NP,NPVAR] with T'.rec.possrform=true
 *  Side Effects   : none
 *
 *EMP:::===================================================================*)

FUNCTION LSMRUQUO_hetetcinpp(t:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;



(*MPF:::===================================================================*
 *
E 2
 *  Function Name  : LSMRUQUO_VARinNP
 *  Description    : 
 *  Parameters     : T: LSSTREE_pStree
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_VARinNP(T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_NegPhrase
 *  Description    : yields true if the tree is a negated phrase, false
                     otherwise
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_NegPhrase(T:LSSTREE_pStree)
                    :BOOLEAN ;
EXTERNAL;









(*MPP:::===================================================================*
 *
 *  Function Name   : substordercondition1
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_substordercondition1(mu1:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;



(*MPP:::===================================================================*
 *
 *  Function Name   : substordercondition2
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_substordercondition2(mu1,mu2:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : substordercondition
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_substordercondition(mu1,mu2,mu3:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function Name   : Gsubstordercondition1
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_Gsubstordercondition1(mu1:LSMRUQUO_ListOfStrees;
                    T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;



(*MPP:::===================================================================*
 *
 *  Function Name   : Gsubstordercondition2
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_Gsubstordercondition2
            (mu1,mu2:LSMRUQUO_ListOfStrees; T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : Gsubstordercondition
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_Gsubstordercondition
           (mu1,mu2,mu3:LSMRUQUO_ListOfStrees; T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : FirstIsADefNp
 *  Description     : yields true if the leftmost Stree in mu is
                      of category NP,NPVAR and definite
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_FirstIsADefNp(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;
(*MPP:::===================================================================*
 *
 *  Function Name   : FirstIsApossNietNp
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_FirstIsApossNietNp(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : PossNietXp
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_PossNietXp(T:LSSTREE_pStree)
                    : BOOLEAN;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_CpSpecq
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_CpSpecq
                    (s:LSDOMAINT_specqtype;mu:LSMRUQUO_ListOfStrees)
                    :BOOLEAN ;
EXTERNAL;



(*MPF:::===================================================================*
 *
 *  Procedure Name  : LSMRUQUO_AssSpecq
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *  Side Effects    : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_AssSpecq
                    (VAR s:LSDOMAINT_specqtype;mu:LSMRUQUO_ListOfStrees);
EXTERNAL;




(*MPP:::===================================================================*
 *
 *  Procedure Name  : AssignCase
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 PROCEDURE LSMRUQUO_AssignCase(
                    NPrec1:LSDOMAINT_NPrecord;
                    mu1:LSMRUQUO_ListOfStrees;
                    VAR NPrec2:LSDOMAINT_NPrecord;
                    VAR mu2:LSMRUQUO_ListOfStrees;
                    casevalue:LSDOMAINT_CaseSetType);
EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Procedure Name  : AssignEform  (Jan Odijk)
 *  Description     : to assign eform, enform or noform to adjp's
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 PROCEDURE LSMRUQUO_AssignEform(
                    ADJPrec1:LSDOMAINT_ADJPrecord;
                    mu1:LSMRUQUO_ListOfStrees;
                    VAR ADJPrec2:LSDOMAINT_ADJPrecord;
                    VAR mu2:LSMRUQUO_ListOfStrees;
                    form:LSDOMAINT_eORenFormtype);
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : TempRefNotFound
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_TempRefNotFound(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : TempRetroNotFound
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_TempRetroNotFound(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : TempDurNotFound
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_TempDurNotFound(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function Name   : TempFreqNotFound
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_TempFreqNotFound(mu:LSMRUQUO_ListOfStrees)
                    : BOOLEAN;
EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Procedure Name  : LSMRUQUO_init
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_init;

EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_Srelprec
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_Srelprec
                          ( rel1, rel2: LSDOMAINT_synrel
                          ) 
                          :BOOLEAN;

EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_VPrelprec
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_VPrelprec
                          ( rel1, rel2: LSDOMAINT_synrel
                          )
                          :BOOLEAN;

EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_ADJPrelprec
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)


 FUNCTION LSMRUQUO_ADJPrelprec
                          ( rel1, rel2: LSDOMAINT_synrel
                          )
                          :BOOLEAN;

EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_Firstrel
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Firstrel
                          ( mu1: LSMRUQUO_listofstrees;
                            rel1: LSDOMAINT_synrel
                          )
                          :BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_Firstcat
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Firstcat
                          ( mu1: LSMRUQUO_listofstrees;
                            cat1: LSDOMAINT_syntcat
                          )
                          :BOOLEAN;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_Lastrel
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Lastrel
                          ( mu1: LSMRUQUO_listofstrees;
                            rel1: LSDOMAINT_synrel
                          )
                          :BOOLEAN;
EXTERNAL;


(*MPP:::===================================================================*
 *
 *  Function  Name  : LSMRUQUO_Lastcat
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Lastcat
                          ( mu1: LSMRUQUO_listofstrees;
                            cat1: LSDOMAINT_syntcat
                          )
                          :BOOLEAN;
EXTERNAL;




(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_Checkreduce
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_Checkreduce
                    ( s:   LSDOMAINT_kindsEFFSETtype;
                      r:   LSDOMAINT_kindstype
                    )
                    :BOOLEAN ;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_checkextend
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_checkextend
                    ( s:   LSDOMAINT_kindsEFFSETtype;
                      r:   LSDOMAINT_kindstype
                    )
                    :BOOLEAN ;
EXTERNAL;


(*MPF:::===================================================================*
 *
 *  Procedure Name  : LSMRUQUO_extend
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *  Side Effects    : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_extend
                    ( s:       LSDOMAINT_kindsEFFSETtype;
                      VAR res: LSDOMAINT_kindsEFFSETtype;
                      r:       LSDOMAINT_kindstype
                    );
EXTERNAL;




(*MPF:::===================================================================*
 *
 *  Procedure Name  : LSMRUQUO_reduce
 *  Description     : 
 *  Parameters      : 
 *  Precondition    : 
 *  Postcondition   : 
 *  Side Effects    : 
 *
 *EMP:::===================================================================*)

 PROCEDURE LSMRUQUO_reduce
                    ( s:       LSDOMAINT_kindsEFFSETtype;
                      VAR res: LSDOMAINT_kindsEFFSETtype;
                      r:       LSDOMAINT_kindstype
                    );
EXTERNAL;

(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_IsIdiom
 *  Description    : 
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : 
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_IsIdiom
                    ( s:   LSSTREE_pstree
                    )
                    :BOOLEAN ;
EXTERNAL;




(*MPF:::===================================================================*
 *
 *  Function Name  : accmenzeintree
 *  Description    : yields true if there is generic ze or men with 
                     accusative case
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : t=T
 *  Postcondition  : (Ex: x in T:x.cat=NP  & x.NPhead IN [menNP,zegenNP] 
                          & accusative IN x.cases)
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)

 FUNCTION LSMRUQUO_accmenzeintree(t:LSSTREE_pSTREE)
                    :BOOLEAN ;
EXTERNAL;

(*MPP:::===================================================================*
 *
 *  PROCEDURE Name : LSMRUQUO_compNPattributes
 *  Description    : computes the values of the attributes of the 
                     node dominating two coordinated NPs and COORD
 *  Parameters     : 
 *  Precondition   : coord=COORD & np1=NP1 & np2=NP2 
 *  Postcondition  : Attributes of NP3  filled appropriately
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)
PROCEDURE LSMRUQUO_compNPattributes(COORD:LSDOMAINT_COORDrecord;
                           NP1,NP2: LSDOMAINT_NPrecord;
                           VAR NP3:LSDOMAINT_NPrecord);

EXTERNAL;

(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_cfNPattributes
 *  Description    : checks  the values of the attributes of the 
                     node dominating two coordinated NPs and COORD
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : coord=COORD & np1=NP1 & np2=NP2  & np3=NP3
 *  Postcondition  : Attributes of NP3 are filled appropriately
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)
FUNCTION LSMRUQUO_cfNPattributes(COORD:LSDOMAINT_COORDrecord;
                           NP1,NP2,NP3: LSDOMAINT_NPrecord):BOOLEAN;

EXTERNAL;

(*MPF:::===================================================================*
 *
 *  Function Name  : LSMRUQUO_coordpatternsok
 *  Description    : checks  whether the coordpattern is compatible with
                     the record of the sentences conjoined
 *  Parameters     : 
 *  Result         : 
 *  Precondition   : cp=CP & srec=SREC
 *  Postcondition  : CP and SREC are compatible
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)
FUNCTION LSMRUQUO_coordpatternsok(cp: LSDOMAINT_coordpatternsettype;
                                            srec: LSDOMAINT_SENTENCErecord)
                                           :BOOLEAN;
I 2

EXTERNAL;

(*MPP:::===================================================================*
 *
 *  PROCEDURE Name : LSMRUQUO_adaptvps
 *  Description    : Adapts the vps appropriately; used in Tsubstitutionn2
 *  Parameters     : 
 *  Precondition   : 
 *  Postcondition  : 
 *  Side Effects   : None
 *
 *EMP:::===================================================================*)
PROCEDURE LSMRUQUO_adaptvps(th: LSDOMAINT_thetavptype;
                           var vps:LSDOMAINT_synpatterneffsettype);
E 2

EXTERNAL;




END {LSMRUQUO};

E 1
