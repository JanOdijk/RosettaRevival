h40981
s 00016/00002/00186
d D 1.6 96/02/15 20:31:14 rous 6 5
c 
e
s 00006/00006/00182
d D 1.5 95/12/04 10:44:12 rous 5 4
c 
e
s 00005/00004/00183
d D 1.4 95/10/18 16:03:24 rous 4 3
c 
e
s 00009/00008/00178
d D 1.3 95/10/18 14:06:27 rous 3 2
c 
e
s 00186/00001/00000
d D 1.2 95/10/17 11:07:41 rous 2 1
c 
e
s 00001/00000/00000
d D 1.1 95/10/17 09:00:18 rous 1 0
c date and time created 95/10/17 09:00:18 by rous
e
u
U
f e 0
t
T
I 1
D 2
 
E 2
I 2
#! /bin/sh -e
I 3
#
D 4
# exeintegrate [<platform>]
E 4
I 4
# exeintegrate <debug> [<platform>]
E 4
#
#
E 3
case $# in
0) ;;
I 3
1) ;;
E 3
D 4
*) echo "Usage: integrate"; exit 1;;
E 4
I 4
2) ;;
*) echo "Usage: exeintegrate <debug> [<platform>]"; exit 1;;
E 4
esac
set -x
set -v
savedir=`pwd`
cd $RBS_USER_ROOT$RBS_USER$RBS_RELEASE
#
set -e
trap 'echo "INTEGRATE: Your archive might be inconsistent: warn the RBS system manager!!"; cd $savedir; exit 2' 0
if ( test -f $RBS_ARCHIVE$RBS_RELEASE/cons.rbs )
then exit
fi
#
set -e
trap 'echo "INTEGRATE: You are already integrating"; umask 22; cd $savedir; exit' 0
umask 222
(echo "  " > $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs ) 2> /dev/null
umask 22
#
#
set -e
trap 'echo "INTEGRATE: No integrate allowed during your build"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; cd $savedir; exit 2' 0
if ( test -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/build.rbs )
then exit 0
fi
#
#
set -e
trap 'echo "INTEGRATE: No integrate allowed when grabbing"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; cd $savedir; exit 2' 0
if ( test -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/grab.rbs )
then exit 0
fi
#
#
set -e
trap 'echo "INTEGRATE: No integrate allowed when freeing"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; cd $savedir; exit 2' 0
if ( test -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/free.rbs )
then exit 0
fi
#
#
set -e
trap 'echo "INTEGRATE: No integrate allowed when you are modifying a file"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; cd $savedir; exit 2' 0
mods=`(ls $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/modify*.rbs 2> /dev/null) | head -1`
if test -z "$mods"
then :
else exit 0
fi
#
#
d4=`date`
echo "INTEGRATE: integrate started at $d4!"
#
#
trap 0
echo "  " > $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs
#
# Clear user work directories
#
set -e
trap 'echo "INTEGRATE: error during cleanup"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; cd $savedir; exit 2' 0    
cleanup
cp $RBS_ARCHIVE$RBS_RELEASE/RBS_logicals RBS_logicals
#
# Generate a make file for each of the specified domains
#
set -e
trap 'echo "INTEGRATE: error during makefile generation"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; cd $savedir; exit 2' 0
#
D 3
flang=""
for lang in `cat $RBS_ARCHIVE$RBS_RELEASE/RBS_domains`
do if ( test "$flang" = "" )
   then flang="$lang"
   fi
   expandmake $flang
done        
E 3
I 3
# Expand the makefile
E 3
#
I 3
D 4
expandmake $1
E 4
I 4
expandmake $2
E 4
#
E 3
# Throw away old actions file and initialize new one
#
rm -f actions_.rbs
echo "#! /bin/sh -e" > actions_.rbs
echo "set -e" >> actions_.rbs
#
# make integrate target
#
set -e
trap 'echo "INTEGRATE: Error during make"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; cd $savedir; exit 2' 0
#
D 3
make -S -n -f $flang/target/$RBS_MAKEFILE.rbs integrate | sed "s/^make/# make/" >> actions_.rbs
E 3
I 3
D 4
make -S -n -f $RBS_MAKECOMP/target/$RBS_MAKEFILE.rbs integrate pf=$1 | sed "s/^make/# make/" >> actions_.rbs
E 4
I 4
make -S -n -f $RBS_MAKECOMP/target/$RBS_MAKEFILE.rbs integrate debug=$1 pf=$2 | sed "s/^make/# make/" >> actions_.rbs
E 4
E 3
chmod u+x actions_.rbs
echo "==============================================================================" >> $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/warnings
#
d3=`date`
echo "INTEGRATE: build actions started at $d3!"
#
set -e
trap 'echo "INTEGRATE: Error during build"; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; cd $savedir; exit 2' 0
actions_.rbs 1> buildlog$$.rbs 2>&1
#
set -e
trap 'echo "INTEGRATE: Someone else is consolidating!"; umask 22; cd $savedir; rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; exit 2' 0
umask 222
(echo "  " > $RBS_ARCHIVE$RBS_RELEASE/cons.rbs) 2> /dev/null
umask 22
trap 0
#
#
locks=`(ls $RBS_ARCHIVE$RBS_RELEASE/build*.rbs 2> /dev/null) | head -1`
while : 
do if test -z "$locks"
   then break
   else :
   fi
   echo "INTEGRATE: waiting for a build to continue..." 
   sleep 30
   locks=`(ls $RBS_ARCHIVE$RBS_RELEASE/build*.rbs 2> /dev/null) | head -1`
done
#
#set -e
trap 'rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs; rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs; echo "INTEGRATE: Error during consolidate";  exit 2' 0
#
d2=`date`
echo "CONSOLID: consolidation actions started at $d2!"
directs=`ls -d *`
for i in $directs; do
   if ( test -d $i ) 
   then 
       if ( test "$i" = "actions" )
        then echo "CONSOLID: consolidating component $i"
             cd $i
             for j in `ls`; do
                echo "CONSOLID: consolidating $j"
                k=`basename $j`
                chmod ug+rwx $k
D 5
#                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                rm -f $RBS_ARCHIVE$RBS_RELEASE/$i/$k
                $RBS_ARCHIVE/fuid "cp -p $k $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
D 5
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
                $RBS_ARCHIVE/fuid "chmod ug=rx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                sccs -d$RBS_ARCHIVE$RBS_RELEASE/$i -psccs delta -s -y $k
                chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/sccs/s.$k
             done
             cd $RBS_USER_ROOT$RBS_USER$RBS_RELEASE
        elif ( test "$i" = "doc" )
        then echo "CONSOLID: skipping component $i"
        else echo "CONSOLID: consolidating component $i"
             cd $i/source
             for j in `ls`; do
                echo "CONSOLID: consolidating $j"
                k=`basename $j`
                chmod ug+rwx $k
D 5
#                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                rm -f $RBS_ARCHIVE$RBS_RELEASE/$i/$k
                $RBS_ARCHIVE/fuid "cp -p $k $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
D 5
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
                $RBS_ARCHIVE/fuid "chmod ug=rx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                sccs -d$RBS_ARCHIVE$RBS_RELEASE/$i -psccs delta -s -y $k
                chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/sccs/s.$k
             done
             cd $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/$i/target
             for j in `ls`; do
                echo "CONSOLID: consolidating $j"
                k=`basename $j`
                chmod ug+rwx $k
D 5
#                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
D 6
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                rm -f $RBS_ARCHIVE$RBS_RELEASE/$i/$k
E 6
I 6
                if ( test -f $RBS_ARCHIVE$RBS_RELEASE/$i/$k )
                then $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
                     rm -f $RBS_ARCHIVE$RBS_RELEASE/$i/$k
                fi
E 6
                $RBS_ARCHIVE/fuid "cp -p $k $RBS_ARCHIVE$RBS_RELEASE/$i" || exit
D 5
                $RBS_ARCHIVE/fuid "chmod ug+rwx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
I 5
                $RBS_ARCHIVE/fuid "chmod ug=rx $RBS_ARCHIVE$RBS_RELEASE/$i/$k" || exit
E 5
                rm -f $k
             done
             cd $RBS_USER_ROOT$RBS_USER$RBS_RELEASE
        fi
   fi
done
I 6
#
#
cd $RBS_USER_ROOT$RBS_USER$RBS_RELEASE
#
#
E 6
d1=`date`
echo "CONSOLID: consolidation actions completed at $d1!"
I 6
#
E 6
d=`date`
echo "$USER: $d" >> $RBS_ARCHIVE$RBS_RELEASE/history.rbs
I 6
#
E 6
cat $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/inteffect.rbs >> $RBS_ARCHIVE$RBS_RELEASE/history.rbs
I 6
effect=`cat $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/inteffect.rbs`
#
for u in `cat intusers.rbs`; do
      echo "user $USER integrated. Intended effect: $effect" | mail $u@prle
done
E 6
#
rm -f $RBS_ARCHIVE$RBS_RELEASE/cons.rbs
rm -f $RBS_USER_ROOT$RBS_USER$RBS_RELEASE/integrate.rbs 
rm -f $RBS_ARCHIVE$RBS_RELEASE/integrate$$.rbs
cd $savedir
trap 0
E 2
E 1
