NP=
[POSSADJ
/
1
|
DETP
/
2
|
NP
/
3]
.
[CN
/
4]
.
[THANP
/
5
|
PREPP
/
6]
+NP1RULE
+1
+2
+3
+4
+5
+6
#NP1RULE#REC = RECORD
MODIFIEDADJPINCNFOUND:BOOLEAN
;QPUNDERDETPFOUND:BOOLEAN
;WHDETFOUND:BOOLEAN
;DEFINITEPAR:LSDOMAINT_DEFTYPE
;POSSCOMASPAR:LSDOMAINT_POSSCOMASETTYPE
 END;
NP=
DETP
/
2
.
[CN
/
4]
+NP1ARULE
+2
+4
#NP1ARULE#REC = RECORD
 END;
NP=
DEMPRO
/
1
|
PERSPRO
/
2
|
INDEFPRO
/
3
|
WHPRO
/
4
|
PROPERNOUN
/
5
.
{
PREPP
/
6
|
PREPP
/
7
}
.
[SENTENCE
/
8]
+NP2RULE
+1
+2
+3
+4
+5
+6
+7
+8
#NP2RULE#REC = RECORD
PROFOUND:BOOLEAN
;INDEFPROHEADFOUND:BOOLEAN
;PROPERNOUNHEADFOUND:BOOLEAN
 END;
NP=
ADVP
/
1
.
NP
/
2
+NP3RULE
+1
+2
#NP3RULE#REC = RECORD
PREADVFOUND:BOOLEAN
 END;
NP=
RECIPRO
/
1
+NP4RULE
+1
#NP4RULE#REC = RECORD
 END;
NP=
REFLPRO
/
1
+NP5RULE
+1
#NP5RULE#REC = RECORD
 END;
NP=
NP
/
1
.
PUNC
/
2
.
NP
/
3
.
[PUNC
/
4]
+NP6RULE
+1
+2
+3
+4
#NP6RULE#REC = RECORD
NUMBERPAR:LSDOMAINT_NUMBERTYPE
;CASESPAR:LSDOMAINT_CASESETTYPE
 END;
NP=
DETP
/
2
.
[CN
/
4]
+NP7RULE
+2
+4
#NP7RULE#REC = RECORD
 END;
DETP=
[ART
/
12]
.
NUM
/
1
|
DET
/
2
|
DEMADJ
/
3
|
QP
/
4
|
ART
/
5
|
CARD
/
11
|
DETP
/
6
.
PREP
/
7
.
DETP
/
8
|
NP
/
9
|
POSSADJ
/
10
+DETPRULE
+1
+2
+3
+12
+4
+5
+6
+7
+8
+9
+10
+11
#DETPRULE#REC = RECORD
MFMEESTEEXPECTED:BOOLEAN
;NEUTMEESTEEXPECTED:BOOLEAN
 END;
DETP=
DET
/
2
+DETP2RULE
+2
#DETP2RULE#REC = RECORD
 END;
CN=
{
ADJP
/
2
|
DETP
/
3
|
SENTENCE
/
4
}
.
NOUN
/
5
.
[QP
/
12]
.
[PREPP
/
14
|
SENTENCE
/
15]
.
[NP
/
6]
.
[PROPERNOUN
/
13]
.
{PREPP
/
8
|
ADVP
/
9}
.
{
SENTENCE
/
11}
+CN1RULE
+2
+3
+4
+5
+12
+14
+15
+6
+13
+8
+9
+11
#CN1RULE#REC = RECORD
COMPLEXPECTED:BOOLEAN
;NUMBERSPAR:LSDOMAINT_NUMBERSETTYPE
;ANIMATEPAR:LSDOMAINT_ANIMATETYPE
;POSSCOMASPAR:LSDOMAINT_POSSCOMASETTYPE
;THETANPPAR:LSDOMAINT_THETANPTYPE
;NOUNPATTERNEFSPAR:LSDOMAINT_SYNPATTERNSETTYPE
;PREPKEYPAR:LSDOMAINT_KEYTYPE
 END;
CN=
{
DETP
/
1
|
ADJP
/
2
|
SENTENCE
/
3
}
.
{
PREPP
/
4
}
.
{
SENTENCE
/
6
}
+CN2RULE
+1
+2
+3
+4
+6
#CN2RULE#REC = RECORD
 END;
PREPP=
[MOD]
.
[RADVP
/
3
.
[GLUE
/
4]]
.
[PREP
/
1]
.
[PPCOMPLS]
.
[PREP
/
8
|
PART
/
9
|PREPP
/
13]
MOD
=
ADVP
/
10
|
NP
/
11
PPCOMPLS
=
NP
/
2
|
PREPP
/
5
|
ADJP
/
6
|
ADVP
/
7
|
REFLPRO
/
12
+PREPP
+1
+2
+3
+4
+5
+6
+7
+8
+9
+10
+11
+12
+13
#PREPP#REC = RECORD
RADVPFOUND:BOOLEAN
;COMPLFOUND:BOOLEAN
;HEADFOUND:BOOLEAN
;POSTPKEYVAR:LSDOMAINT_INDEXTYPE
;SECONDPREPVAR:LSDOMAINT_KEYTYPE
 END;
RADVP=
RADV
/
1
+RADVP
+1
#RADVP#REC = RECORD
 END;
ADVP=
[
NP
/
4
|
NP
/
44
|
QP
/
5
|
ADVP
/
6]
.
ADV
/
1
.
[THANP
/
7
|
ADJP
/
8]
.
[
NP
/
2
|
ADVP
/
3
]
+ADVP
+1
+2
+3
+4
+44
+5
+6
+7
+8
+9
#ADVP#REC = RECORD
PRECOMPLFOUND:BOOLEAN
;POSTCOMPLFOUND:BOOLEAN
;THANPPOSSIBLE:BOOLEAN
;ALSCOMPLADVFOUND:BOOLEAN
;DEGREEADVEXPECTED:BOOLEAN
;DEGREEADVFOUND:BOOLEAN
;DEGREEMODFOUND:BOOLEAN
 END;
