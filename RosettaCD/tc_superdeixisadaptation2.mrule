DUTCH 104
&

\newpage
\begin{verbatim}
%
% TRANSFORMATION Tsuperdeixisadaptation3
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    I1: rel1/T1, 
                    mu3
                   ],
            mu4
           ]
>

< m :CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2, 
                    I2: rel1/T2, 
                    mu3
                   ],
            mu4
           ]

>
   MATCHCONDITIONS
      <
       I1: (T1.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENADVPPROP, CLOSEDADVPPROP,
                      OPENNPPROP, CLOSEDNPPROP, OPENVERBPPROP, 
                      CLOSEDVERBPPROP]) AND
           (rel1 IN [complrel, objrel, dirargrel, locargrel, predrel])
       I2: (T2.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENADVPPROP, CLOSEDADVPPROP,
                      OPENNPPROP, CLOSEDNPPROP, OPENVERBPPROP, 
                      CLOSEDVERBPPROP]) AND
           (rel1 IN [complrel, objrel, dirargrel, locargrel, predrel])
      >

<
   SUBRULE (* 1. OpenAdjpprop *)
      < T1: OPENADJPPROP{OPENADJPPROPrec1}[mu5] >
      < T2: OPENADJPPROP{OPENADJPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (OPENADJPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENADJPPROPrec2 := OPENADJPPROPrec1;
                  OPENADJPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENADJPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENADJPPROPrec2 := OPENADJPPROPrec1;
                   OPENADJPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENADJPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENADJPPROPrec1 := OPENADJPPROPrec2;
                   OPENADJPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENADJPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENADJPPROPrec1 := OPENADJPPROPrec2;
                    OPENADJPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 2. ClosedAdjpprop *)
      < T1: CLOSEDADJPPROP{CLOSEDADJPPROPrec1}[mu5] >
      < T2: CLOSEDADJPPROP{CLOSEDADJPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (CLOSEDADJPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDADJPPROPrec2 := CLOSEDADJPPROPrec1;
                  CLOSEDADJPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDADJPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDADJPPROPrec2 := CLOSEDADJPPROPrec1;
                   CLOSEDADJPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDADJPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDADJPPROPrec1 := CLOSEDADJPPROPrec2;
                   CLOSEDADJPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDADJPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDADJPPROPrec1 := CLOSEDADJPPROPrec2;
                    CLOSEDADJPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 3. OpenPreppprop *)
      < T1: OPENPREPPPROP{OPENPREPPPROPrec1}[mu5] >
      < T2: OPENPREPPPROP{OPENPREPPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (OPENPREPPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENPREPPPROPrec2 := OPENPREPPPROPrec1;
                  OPENPREPPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENPREPPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENPREPPPROPrec2 := OPENPREPPPROPrec1;
                   OPENPREPPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENPREPPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENPREPPPROPrec1 := OPENPREPPPROPrec2;
                   OPENPREPPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENPREPPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENPREPPPROPrec1 := OPENPREPPPROPrec2;
                    OPENPREPPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 4. ClosedPreppprop *)
      < T1: CLOSEDPREPPPROP{CLOSEDPREPPPROPrec1}[mu5] >
      < T2: CLOSEDPREPPPROP{CLOSEDPREPPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (CLOSEDPREPPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDPREPPPROPrec2 := CLOSEDPREPPPROPrec1;
                  CLOSEDPREPPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDPREPPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDPREPPPROPrec2 := CLOSEDPREPPPROPrec1;
                   CLOSEDPREPPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDPREPPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDPREPPPROPrec1 := CLOSEDPREPPPROPrec2;
                   CLOSEDPREPPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDPREPPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDPREPPPROPrec1 := CLOSEDPREPPPROPrec2;
                    CLOSEDPREPPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 5. OpenAdvpprop *)
      < T1: OPENADVPPROP{OPENADVPPROPrec1}[mu5] >
      < T2: OPENADVPPROP{OPENADVPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (OPENADVPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENADVPPROPrec2 := OPENADVPPROPrec1;
                  OPENADVPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENADVPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENADVPPROPrec2 := OPENADVPPROPrec1;
                   OPENADVPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENADVPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENADVPPROPrec1 := OPENADVPPROPrec2;
                   OPENADVPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENADVPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENADVPPROPrec1 := OPENADVPPROPrec2;
                    OPENADVPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 6. ClosedAdvpprop *)
      < T1: CLOSEDADVPPROP{CLOSEDADVPPROPrec1}[mu5] >
      < T2: CLOSEDADVPPROP{CLOSEDADVPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (CLOSEDADVPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDADVPPROPrec2 := CLOSEDADVPPROPrec1;
                  CLOSEDADVPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDADVPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDADVPPROPrec2 := CLOSEDADVPPROPrec1;
                   CLOSEDADVPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDADVPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDADVPPROPrec1 := CLOSEDADVPPROPrec2;
                   CLOSEDADVPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDADVPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDADVPPROPrec1 := CLOSEDADVPPROPrec2;
                    CLOSEDADVPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 7. OpenNpprop *)
      < T1: OPENNPPROP{OPENNPPROPrec1}[mu5] >
      < T2: OPENNPPROP{OPENNPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (OPENNPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENNPPROPrec2 := OPENNPPROPrec1;
                  OPENNPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENNPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENNPPROPrec2 := OPENNPPROPrec1;
                   OPENNPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENNPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENNPPROPrec1 := OPENNPPROPrec2;
                   OPENNPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENNPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENNPPROPrec1 := OPENNPPROPrec2;
                    OPENNPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 8. ClosedNpprop *)
      < T1: CLOSEDNPPROP{CLOSEDNPPROPrec1}[mu5] >
      < T2: CLOSEDNPPROP{CLOSEDNPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (CLOSEDNPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDNPPROPrec2 := CLOSEDNPPROPrec1;
                  CLOSEDNPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDNPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDNPPROPrec2 := CLOSEDNPPROPrec1;
                   CLOSEDNPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDNPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDNPPROPrec1 := CLOSEDNPPROPrec2;
                   CLOSEDNPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDNPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDNPPROPrec1 := CLOSEDNPPROPrec2;
                    CLOSEDNPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 9. OpenVerbpprop *)
      < T1: OPENVERBPPROP{OPENVERBPPROPrec1}[mu5] >
      < T2: OPENVERBPPROP{OPENVERBPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (OPENVERBPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENVERBPPROPrec2 := OPENVERBPPROPrec1;
                  OPENVERBPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENVERBPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENVERBPPROPrec2 := OPENVERBPPROPrec1;
                   OPENVERBPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENVERBPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENVERBPPROPrec1 := OPENVERBPPROPrec2;
                   OPENVERBPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENVERBPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENVERBPPROPrec1 := OPENVERBPPROPrec2;
                    OPENVERBPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 10. ClosedVerbpprop *)
      < T1: CLOSEDVERBPPROP{CLOSEDVERBPPROPrec1}[mu5] >
      < T2: CLOSEDVERBPPROP{CLOSEDVERBPPROPrec2}[mu5] >

      COMP
         <
          C1:true

            C11: (CLOSEDVERBPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDVERBPPROPrec2 := CLOSEDVERBPPROPrec1;
                  CLOSEDVERBPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDVERBPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDVERBPPROPrec2 := CLOSEDVERBPPROPrec1;
                   CLOSEDVERBPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDVERBPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDVERBPPROPrec1 := CLOSEDVERBPPROPrec2;
                   CLOSEDVERBPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDVERBPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDVERBPPROPrec1 := CLOSEDVERBPPROPrec2;
                    CLOSEDVERBPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

>

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tsuperdeixisadaptation3
\item[* relevant examples:]
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] TC: Superdeixisadaptation
\item[* date of creation:] 15-MAR-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Tsuperdeixisadaptation2
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 24/11/88\ \ \ \ \ author:margreet sanders\\
Added subrules 7 - 10 for NPPROPs and VERBPPROPs. These subrules are simply 
copies of the other subrules.
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Check superdeixis of XPPROP with superdeixis or 
deixis of the higher clause in case of temporally dependent complements .
The superdeixis of the complement sentence is set omega/given a 
value present or past.(This is needed for efficiency 
reasons of the surface parser.) 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc. nr 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION Tsuperdeixisadaptation4
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    prepobjrel/PREPP{PREPPrec1}
                              [mu5,
                               I1: rel1/T1,
                               mu6], 
                    mu3
                   ],
            mu4
           ]
>

< m :CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2, 
                    prepobjrel/PREPP{PREPPrec1}
                              [mu5,
                               I2: rel1/T2,
                               mu6], 
                    mu3
                   ],
            mu4
           ]

>
   MATCHCONDITIONS
      <
       I1: (T1.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENNPPROP, CLOSEDNPPROP,
                       OPENVERBPPROP, CLOSEDVERBPPROP])
           AND
           (rel1 IN [objrel, complrel])
       I2: (T2.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENNPPROP, CLOSEDNPPROP,
                       OPENVERBPPROP, CLOSEDVERBPPROP])
           AND
           (rel1 IN [objrel, complrel])

      >

<
   SUBRULE (* 1. OpenAdjpprop *)
      < T1: OPENADJPPROP{OPENADJPPROPrec1}[mu7] >
      < T2: OPENADJPPROP{OPENADJPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (OPENADJPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENADJPPROPrec2 := OPENADJPPROPrec1;
                  OPENADJPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENADJPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENADJPPROPrec2 := OPENADJPPROPrec1;
                   OPENADJPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENADJPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENADJPPROPrec1 := OPENADJPPROPrec2;
                   OPENADJPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENADJPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENADJPPROPrec1 := OPENADJPPROPrec2;
                    OPENADJPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 2. ClosedAdjpprop *)
      < T1: CLOSEDADJPPROP{CLOSEDADJPPROPrec1}[mu7] >
      < T2: CLOSEDADJPPROP{CLOSEDADJPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (CLOSEDADJPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDADJPPROPrec2 := CLOSEDADJPPROPrec1;
                  CLOSEDADJPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDADJPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDADJPPROPrec2 := CLOSEDADJPPROPrec1;
                   CLOSEDADJPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDADJPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDADJPPROPrec1 := CLOSEDADJPPROPrec2;
                   CLOSEDADJPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDADJPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDADJPPROPrec1 := CLOSEDADJPPROPrec2;
                    CLOSEDADJPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 3. OpenPreppprop *)
      < T1: OPENPREPPPROP{OPENPREPPPROPrec1}[mu7] >
      < T2: OPENPREPPPROP{OPENPREPPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (OPENPREPPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENPREPPPROPrec2 := OPENPREPPPROPrec1;
                  OPENPREPPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENPREPPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENPREPPPROPrec2 := OPENPREPPPROPrec1;
                   OPENPREPPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENPREPPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENPREPPPROPrec1 := OPENPREPPPROPrec2;
                   OPENPREPPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENPREPPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENPREPPPROPrec1 := OPENPREPPPROPrec2;
                    OPENPREPPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 4. ClosedPreppprop *)
      < T1: CLOSEDPREPPPROP{CLOSEDPREPPPROPrec1}[mu7] >
      < T2: CLOSEDPREPPPROP{CLOSEDPREPPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (CLOSEDPREPPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDPREPPPROPrec2 := CLOSEDPREPPPROPrec1;
                  CLOSEDPREPPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDPREPPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDPREPPPROPrec2 := CLOSEDPREPPPROPrec1;
                   CLOSEDPREPPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDPREPPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDPREPPPROPrec1 := CLOSEDPREPPPROPrec2;
                   CLOSEDPREPPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDPREPPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDPREPPPROPrec1 := CLOSEDPREPPPROPrec2;
                    CLOSEDPREPPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 5. OpenNpprop *)
      < T1: OPENNPPROP{OPENNPPROPrec1}[mu7] >
      < T2: OPENNPPROP{OPENNPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (OPENNPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENNPPROPrec2 := OPENNPPROPrec1;
                  OPENNPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENNPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENNPPROPrec2 := OPENNPPROPrec1;
                   OPENNPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENNPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENNPPROPrec1 := OPENNPPROPrec2;
                   OPENNPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENNPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENNPPROPrec1 := OPENNPPROPrec2;
                    OPENNPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 6. ClosedNpprop *)
      < T1: CLOSEDNPPROP{CLOSEDNPPROPrec1}[mu7] >
      < T2: CLOSEDNPPROP{CLOSEDNPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (CLOSEDNPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDNPPROPrec2 := CLOSEDNPPROPrec1;
                  CLOSEDNPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDNPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDNPPROPrec2 := CLOSEDNPPROPrec1;
                   CLOSEDNPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDNPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDNPPROPrec1 := CLOSEDNPPROPrec2;
                   CLOSEDNPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDNPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDNPPROPrec1 := CLOSEDNPPROPrec2;
                    CLOSEDNPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

SUBRULE (* 7. OpenVerbpprop *)
      < T1: OPENVERBPPROP{OPENVERBPPROPrec1}[mu7] >
      < T2: OPENVERBPPROP{OPENVERBPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (OPENVERBPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: OPENVERBPPROPrec2 := OPENVERBPPROPrec1;
                  OPENVERBPPROPrec2.superdeixis := omegadeixis;

             C12:(OPENVERBPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: OPENVERBPPROPrec2 := OPENVERBPPROPrec1;
                   OPENVERBPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(OPENVERBPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: OPENVERBPPROPrec1 := OPENVERBPPROPrec2;
                   OPENVERBPPROPrec1.superdeixis := presentdeixis;
            
              C12: (OPENVERBPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: OPENVERBPPROPrec1 := OPENVERBPPROPrec2;
                    OPENVERBPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE (* 6. ClosedVerbpprop *)
      < T1: CLOSEDVERBPPROP{CLOSEDVERBPPROPrec1}[mu7] >
      < T2: CLOSEDVERBPPROP{CLOSEDVERBPPROPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (CLOSEDVERBPPROPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: CLOSEDVERBPPROPrec2 := CLOSEDVERBPPROPrec1;
                  CLOSEDVERBPPROPrec2.superdeixis := omegadeixis;

             C12:(CLOSEDVERBPPROPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: CLOSEDVERBPPROPrec2 := CLOSEDVERBPPROPrec1;
                   CLOSEDVERBPPROPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(CLOSEDVERBPPROPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: CLOSEDVERBPPROPrec1 := CLOSEDVERBPPROPrec2;
                   CLOSEDVERBPPROPrec1.superdeixis := presentdeixis;
            
              C12: (CLOSEDVERBPPROPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )

               A12: CLOSEDVERBPPROPrec1 := CLOSEDVERBPPROPrec2;
                    CLOSEDVERBPPROPrec1.superdeixis := pastdeixis;

          A1: @
         >

>

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tsuperdeixisadaptation4
\item[* relevant examples:]
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] TC: Superdeixisadaptation
\item[* date of creation:] 27-JUL-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Tsuperdeixisadaptation3
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 24/11/88\ \ \ \ \ author: margreet sanders\\
Added subrules 5 -8 for NPPROPs and VERBPPROPs. these subrules are copies of 
the other subrules
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Check superdeixis of XPPROP with superdeixis or 
deixis of the higher clause in case of temporally dependent complements in 
prepositional objects.
The superdeixis of the complement sentence is set omega/given a 
value present or past.(This is needed for efficiency 
reasons of the surface parser.) 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc. nr 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION Tsuperdeixisadaptation6
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    predrel/ADJP{ADJPrec1}
                              [mu5,
                               I1: rel1/T1,
                               mu6], 
                    mu3
                   ],
            mu4
           ]
>

< m :CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2, 
                    predrel/ADJP{ADJPrec1}
                              [mu5,
                               I2: rel1/T2,
                               mu6], 
                    mu3
                   ],
            mu4
           ]

>
   MATCHCONDITIONS
      <
       I1: ((T1.CAT IN [ADVP, PREPP, NP, QP]) AND
            (rel1 IN [degreemodrel, voorobjrel, hoprel])
           ) OR
           ((T1.CAT = SENTENCE) AND
            (rel1 = complrel)
           )
       I2: ((T2.CAT IN [ADVP, PREPP, NP, QP]) AND
            (rel1 IN [degreemodrel, voorobjrel, hoprel])
           ) OR
           ((T2.CAT = SENTENCE) AND
            (rel1 = complrel)
           )

      >

<
   SUBRULE
      < T1: ADVP{ADVPrec1}[mu7] >
      < T2: ADVP{ADVPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (ADVPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = presentdeixis)
                   )
                  )
             A12: ADVPrec2:= ADVPrec1;
                  ADVPrec2.superdeixis := omegadeixis;

             C12:(ADVPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: ADVPrec2:= ADVPrec1;
                   ADVPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(ADVPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: ADVPrec1:= ADVPrec2;
                   ADVPrec1.superdeixis := presentdeixis;
            
              C12: (ADVPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )                    
               A12: ADVPrec1 := ADVPrec2;
                    ADVPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE
      < T1: PREPP{PREPPrec1}[mu7] >
      < T2: PREPP{PREPPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (PREPPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: PREPPrec2:= PREPPrec1;
                  PREPPrec2.superdeixis := omegadeixis;

             C12:(PREPPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )
              A12: PREPPrec2:= PREPPrec1;
                   PREPPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(PREPPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: PREPPrec1:= PREPPrec2;
                   PREPPrec1.superdeixis := presentdeixis;
            
              C12: (PREPPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )                    
               A12: PREPPrec1 := PREPPrec2;
                    PREPPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE
      < T1: NP{NPrec1}[mu7] >
      < T2: NP{NPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (NPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: NPrec2:= NPrec1;
                  NPrec2.superdeixis := omegadeixis;

             C12:(NPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )
              A12: NPrec2:= NPrec1;
                   NPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(NPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: NPrec1:= NPrec2;
                   NPrec1.superdeixis := presentdeixis;
            
              C12: (NPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )                    
               A12: NPrec1 := NPrec2;
                    NPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE
      < T1: QP{QPrec1}[mu7] >
      < T2: QP{QPrec2}[mu7] >

      COMP
         <
          C1:true

            C11: (QPrec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                    (
                     (CLAUSErec1.deixis = omegadeixis) AND
                     (CLAUSErec1.superdeixis = presentdeixis)
                    )
                   )
             A12: QPrec2:= QPrec1;
                  QPrec2.superdeixis := omegadeixis;

             C12:(QPrec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )
              A12: QPrec2:= QPrec1;
                   QPrec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(QPrec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: QPrec1:= QPrec2;
                   QPrec1.superdeixis := presentdeixis;
            
              C12: (QPrec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )                    
               A12: QPrec1 := QPrec2;
                    QPrec1.superdeixis := pastdeixis;

          A1: @
         >

   SUBRULE
      < T1: SENTENCE{SENTENCErec1}[mu7] >
      < T2: SENTENCE{SENTENCErec2}[mu7] >
      COMP
         <
          C1:true
                 (* independent complement clause *)
             C11:((CLAUSErec1.synvpefs * AUX_tempindepcomplvps <> []) AND
                  (SENTENCErec1.superdeixis = omegadeixis) AND
                  (((SENTENCErec1.deixis = presentdeixis) AND
                    (QUOTE_temprefnotfound(mu7)) AND
                    (CLAUSErec1.deixis <> presentdeixis) AND
                    (CLAUSErec1.superdeixis <> presentdeixis) 
                   ) OR
                   ((SENTENCErec1.deixis = pastdeixis) AND
                    (QUOTE_temprefnotfound(mu7)) AND
                    (CLAUSErec1.deixis <> pastdeixis) AND
                    (CLAUSErec1.superdeixis <> pastdeixis)
                   ) OR
                   (NOT (QUOTE_temprefnotfound(mu7))
                   )
                  )
                 )
             A11: SENTENCErec2 := SENTENCErec1;

                 (* dependent complement clauses *)
             C12:(CLAUSErec1.synvpefs * AUX_tempdepcomplvps <> [])
                  
                       (* present *)
                 C121: (SENTENCErec1.superdeixis = presentdeixis) AND
                       (SENTENCErec1.deixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = presentdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = presentdeixis)
                        )
                       )

                       C1211: (SENTENCErec1.finiteness = finite)
                       A1211: SENTENCErec2 := SENTENCErec1;
                              SENTENCErec2.deixis := presentdeixis;

                       C1212: (SENTENCErec1.finiteness = infinite)
                       A1212: SENTENCErec2 := SENTENCErec1;


                 A121: SENTENCErec2.superdeixis := omegadeixis;

                      (* past *)
                 C122:(SENTENCErec1.deixis = omegadeixis) AND
                      (SENTENCErec1.superdeixis = pastdeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = pastdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = pastdeixis)
                        )
                       )

                       C1221: (SENTENCErec1.finiteness = finite)
                       A1221: SENTENCErec2 := SENTENCErec1;
                              SENTENCErec2.deixis := pastdeixis;

                       C1222: (SENTENCErec1.finiteness = infinite)
                       A1222: SENTENCErec2 := SENTENCErec1;

                 A122: SENTENCErec2.superdeixis := omegadeixis;
                       

              A12: @

          A1: @
         >

      DECOMP
         <
          C1:true
                 (* independent complement clause *)
             C11:((CLAUSErec1.synvpefs * AUX_tempindepcomplvps <> []) AND
                  (SENTENCErec2.superdeixis = omegadeixis) AND
                  (((SENTENCErec2.deixis = presentdeixis) AND
                    (QUOTE_temprefnotfound(mu7)) AND
                    (CLAUSErec1.deixis <> presentdeixis) AND
                    (CLAUSErec1.superdeixis <> presentdeixis) 
                   ) OR
                   ((SENTENCErec2.deixis = pastdeixis) AND
                    (QUOTE_temprefnotfound(mu7)) AND
                    (CLAUSErec1.deixis <> pastdeixis) AND
                    (CLAUSErec1.superdeixis <> pastdeixis) 
                   ) OR
                   (NOT (QUOTE_temprefnotfound(mu7))
                   )
                  )
                 )
             A11: SENTENCErec1 := SENTENCErec2;

                 (* dependent complement clauses *)
             C12:(CLAUSErec1.synvpefs * AUX_tempdepcomplvps <> [])
                  
                       (* present *)
                 C121: (SENTENCErec2.superdeixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = presentdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = presentdeixis)
                        )
                       )

                       C1211: (SENTENCErec2.deixis = presentdeixis) AND
                              (SENTENCErec2.finiteness = finite)
                       A1211: SENTENCErec1 := SENTENCErec2;
                              SENTENCErec1.deixis := omegadeixis;

                       C1212: (SENTENCErec2.deixis = omegadeixis) AND
                              (SENTENCErec2.finiteness = infinite)
                       A1212: SENTENCErec1 := SENTENCErec2;


                 A121: SENTENCErec1.superdeixis := presentdeixis;

                       (* past *)
                 C122:(SENTENCErec2.superdeixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = pastdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = pastdeixis)
                        )
                       )

                       C1221:(SENTENCErec2.deixis = pastdeixis) AND
                              (SENTENCErec2.finiteness = finite)
                       A1221: SENTENCErec1 := SENTENCErec2;
                              SENTENCErec1.deixis := omegadeixis;

                       C1222: (SENTENCErec2.deixis = omegadeixis) AND
                              (SENTENCErec2.finiteness = infinite)
                       A1222: SENTENCErec1 := SENTENCErec2;

                 A122: SENTENCErec1.superdeixis := pastdeixis;
                       

              A12: @

          A1: @
         >



>

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tsuperdeixisadaptation6
\item[* relevant examples:] Hij is [erg ziek]
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] TC: Superdeixisadaptation
\item[* date of creation:] 20-OCT-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Tsuperdeixisadaptation4
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 14/08/89\ \ \ \ \ author: Lisette Appelo\\
Added subrule for SENTENCE.
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Check superdeixis of ADVP, PREPP, NP or QP as modifiers
 under ADJP or SENTENCE as complement with superdeixis or 
deixis of the higher clause.
The superdeixis of ADVP, PREPP, NP, QP or SENTENCE is set omega/given a 
value present or past.(This is needed for efficiency 
reasons of the surface parser.) In case of SENTENCE an independent version is 
also allowed.
\item[\ \ strategy:] The reason this adaptation rule is necessary is that the 
modification rules with ADVP, PREPP, Np or QP
 in the ADJP-grammars are (incorrectly) 
ordered before the (super)deixis rules.
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] Different syntactic 
categrories.
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc. nr 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION Tsuperdeixisadaptation7
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    predrel/ADJP{ADJPrec1}
                              [mu5,
                               I1: rel1/SENTENCE{SENTENCErec1}[mu7],
                               mu6], 
                    mu3
                   ],
            mu4
           ]
>

< m :CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2, 
                    predrel/ADJP{ADJPrec1}
                              [mu5,
                               I2: rel1/SENTENCE{SENTENCErec2}[mu7],
                               mu6], 
                    mu3
                   ],
            mu4
           ]

>
   MATCHCONDITIONS
      <
       I1: (rel1 IN [omtemodrel, postmodrel])
       I2: (rel1 IN [omtemodrel, postmodrel])

      >


      COMP
         <
          C1:true

            C11: (SENTENCErec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = presentdeixis)
                   )
                  )
             A12: SENTENCErec2:= SENTENCErec1;
                  SENTENCErec2.superdeixis := omegadeixis;

             C12:(SENTENCErec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: SENTENCErec2:= SENTENCErec1;
                   SENTENCErec2.superdeixis := omegadeixis;

          A1: @
         >

      DECOMP
         <
          C1:true
             C11:(SENTENCErec2.superdeixis = omegadeixis) AND
                 (
                  (
                   (CLAUSErec1.deixis = presentdeixis) AND
                   (CLAUSErec1.superdeixis = omegadeixis)
                  ) OR
                  (
                   (CLAUSErec1.deixis = omegadeixis) AND
                   (CLAUSErec1.superdeixis = presentdeixis)
                  )
                 )
              A11: SENTENCErec1:= SENTENCErec2;
                   SENTENCErec1.superdeixis := presentdeixis;
            
              C12: (SENTENCErec2.superdeixis = omegadeixis) AND
                    (
                     (
                      (CLAUSErec1.deixis = pastdeixis) AND
                      (CLAUSErec1.superdeixis = omegadeixis)
                     ) OR
                     (
                      (CLAUSErec1.deixis = omegadeixis) AND
                      (CLAUSErec1.superdeixis = pastdeixis)
                     )
                    )                    
               A12: SENTENCErec1 := SENTENCErec2;
                    SENTENCErec1.superdeixis := pastdeixis;

          A1: @
         >



&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tsuperdeixisadaptation7
\item[* relevant examples:] hij is ziek genoeg om naar huis te gaan
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] TC: Superdeixisadaptation
\item[* date of creation:] 21-OCT-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Tsuperdeixisadaptation6
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Check superdeixis of SENTENCE as modifier
 under ADJP with superdeixis or 
deixis of the higher clause.
The superdeixis of SENTENCE is set omega/given a 
value present or past.(This is needed for efficiency 
reasons of the surface parser.) 
\item[\ \ strategy:] The reason this adaptation rule is necessary is that the 
modification rules with SENTENCE
 in the ADJP-grammars are (incorrectly) 
ordered before the (super)deixis rules.
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] 

\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc. nr 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% FILTER Fsuperdeixisadaptation7
< m:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    predrel/ADJP{ADJPrec1}
                              [mu5,
                               I1: rel1/SENTENCE{SENTENCErec1}[mu7],
                               mu6], 
                    mu3
                   ],
            mu4
           ]
>

   MATCHCONDITIONS
      <
       I1: (rel1 IN [omtemodrel, postmodrel])
      >


         <
          C1:true

            C11: (SENTENCErec1.superdeixis = presentdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = presentdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = presentdeixis)
                   )
                  )
             A12: @

             C12:(SENTENCErec1.superdeixis = pastdeixis) AND
                  (
                   (
                    (CLAUSErec1.deixis = pastdeixis) AND
                    (CLAUSErec1.superdeixis = omegadeixis)
                   ) OR
                   (
                    (CLAUSErec1.deixis = omegadeixis) AND
                    (CLAUSErec1.superdeixis = pastdeixis)
                   )
                  )

              A12: @
          A1: @
         >


&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Fsuperdeixisadaptation7
\item[* relevant examples:] hij is ziek genoeg om naar huis te gaan
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] FC: Superdeixisadaptation
\item[* date of creation:] 28-OCT-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Tsuperdeixisadaptation7
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Filter for the superdeixis check of SENTENCE as modifier
 under ADJP with superdeixis or 
deixis of the higher clause.
The superdeixis of SENTENCE is set omega/given a 
value present or past.(This is needed for efficiency 
reasons of the surface parser.) 
\item[\ \ strategy:] The reason this adaptation rule is necessary is that the 
modification rules with SENTENCE
 in the ADJP-grammars are (incorrectly) 
ordered before the (super)deixis rules. The filter is needed because it is an 
iterative transformation class.
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] 

\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] no
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc. nr 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% TRANSFORMATION Tidsuperdeixisadaptation
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2,
                    I1: rel1/T1, 
                    mu3
                   ],
            mu4
           ]
>

< m :I2::CLAUSE{CLAUSErec1}
           [mu1,
            predrel/VERBP{VERBPrec1}
                   [mu2, 
                    I1: rel1/T1, 
                    mu3
                   ],
            mu4
           ]

>
   MATCHCONDITIONS
      <
       I1: (T1.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENADVPPROP, CLOSEDADVPPROP,
                      SENTENCE]) AND
           (rel1 IN [complrel, dirargrel, locargrel, predrel])
       I2: CLAUSErec1.synvpefs * AUX_propidvps <> []
      >

      COMP
         <
          C1: (T1.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENADVPPROP, CLOSEDADVPPROP] WITH 
              T1.REC.superdeixis = omegadeixis ) OR
              (T1.CAT IN [SENTENCE] WITH
              T1.REC.superdeixis = omegadeixis AND
              T1.REC.deixis = omegadeixis)
          A1: @
         >

      DECOMP
         <
          C1: (T1.CAT IN [OPENADJPPROP, CLOSEDADJPPROP, OPENPREPPPROP, 
                      CLOSEDPREPPPROP, OPENADVPPROP, CLOSEDADVPPROP] WITH 
              T1.REC.superdeixis = omegadeixis ) OR
              (T1.CAT IN [SENTENCE] WITH
              T1.REC.superdeixis = omegadeixis AND
              T1.REC.deixis = omegadeixis)
          A1: @
         >

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tidsuperdeixisadaptation
\item[* relevant examples:]
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:]  XPPROPtoCLAUSE
\item[* class:] TC: Superdeixisadaptation
\item[* date of creation:] 27-SEP-1988 
\item[* author:] Andr\'{e} Schenk
\item[* copied from:] Tsuperdeixisadaptation3
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] Let through propositional constituents with omega value for 
deixis.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION Tsuperdeixisadaptation9
< m1:CLAUSE{CLAUSErec1}
           [mu1,
            I1:rel1/SENTENCE{SENTENCErec1}[I3:mu8],
            mu3
           ]
>

< m :CLAUSE{CLAUSErec1}
           [mu1,
            I2:rel1/SENTENCE{SENTENCErec2}[I3:mu8],
            mu3
           ]

>
   MATCHCONDITIONS
      <
       I1: (rel1 = leftdislocrel OR SENTENCErec1.adverbial = true) AND
           (SENTENCErec1.temporal = false)
       I2: (rel1 = leftdislocrel OR SENTENCErec2.adverbial = true) AND
           (SENTENCErec2.temporal = false)
       I3: NOT EXIST(mu8, [predrel/VERBP{VERBPrec1}[mu9]])
      >


      COMP
         <
          C1:true
                 (* dependent sentences *)
             C12: true
                  
                       (* present *)
                 C121: (SENTENCErec1.superdeixis = presentdeixis) AND
                       (SENTENCErec1.deixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = presentdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = presentdeixis)
                        )
                       )

                       C1211: (SENTENCErec1.finiteness = finite)
                       A1211: SENTENCErec2 := SENTENCErec1;
                              SENTENCErec2.deixis := presentdeixis;

                       C1212: (SENTENCErec1.finiteness = infinite)
                       A1212: SENTENCErec2 := SENTENCErec1;


                 A121: SENTENCErec2.superdeixis := omegadeixis;

                      (* past *)
                 C122:(SENTENCErec1.deixis = omegadeixis) AND
                      (SENTENCErec1.superdeixis = pastdeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = pastdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = pastdeixis)
                        )
                       )

                       C1221: (SENTENCErec1.finiteness = finite)
                       A1221: SENTENCErec2 := SENTENCErec1;
                              SENTENCErec2.deixis := pastdeixis;

                       C1222: (SENTENCErec1.finiteness = infinite)
                       A1222: SENTENCErec2 := SENTENCErec1;

                 A122: SENTENCErec2.superdeixis := omegadeixis;
                       

              A12: @

          A1: @
         >

      DECOMP
         <
          C1:true

                 (* dependent sentences *)
             C12: true
                  
                       (* present *)
                 C121: (SENTENCErec2.superdeixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = presentdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = presentdeixis)
                        )
                       )

                       C1211: (SENTENCErec2.deixis = presentdeixis) AND
                              (SENTENCErec2.finiteness = finite)
                       A1211: SENTENCErec1 := SENTENCErec2;
                              SENTENCErec1.deixis := omegadeixis;

                       C1212: (SENTENCErec2.deixis = omegadeixis) AND
                              (SENTENCErec2.finiteness = infinite)
                       A1212: SENTENCErec1 := SENTENCErec2;


                 A121: SENTENCErec1.superdeixis := presentdeixis;

                       (* past *)
                 C122:(SENTENCErec2.superdeixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = pastdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = pastdeixis)
                        )
                       )

                       C1221:(SENTENCErec2.deixis = pastdeixis) AND
                              (SENTENCErec2.finiteness = finite)
                       A1221: SENTENCErec1 := SENTENCErec2;
                              SENTENCErec1.deixis := omegadeixis;

                       C1222: (SENTENCErec2.deixis = omegadeixis) AND
                              (SENTENCErec2.finiteness = infinite)
                       A1222: SENTENCErec1 := SENTENCErec2;

                 A122: SENTENCErec1.superdeixis := pastdeixis;
                       

              A12: @

          A1: @
         >

   

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Tsuperdeixisadaptation9
\item[* relevant examples:] Is hij ziek, dan zwemmen we niet
(without a VP in the subordinate clause)
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 3-MAR-1989 12:47:27  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 27/06/89\ \ \ \ \ author: Lisette Appelo\\
Deleted splitting into subrules.
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% FILTER Fsuperdeixisadaptation9
< m :CLAUSE{CLAUSErec1}
           [mu1,
            I1:rel1/SENTENCE{SENTENCErec1}[I3:mu8],
            mu3
           ]
>

   MATCHCONDITIONS
      <
       I1: (rel1 = leftdislocrel OR SENTENCErec1.adverbial = true) AND
           (SENTENCErec1.temporal = false)
       I3: NOT EXIST(mu8, [predrel/VERBP{VERBPrec1}[mu9]])
      >


         <
          C1:true
                 (* dependent sentences *)
             C12: true
                  
                       (* present *)
                 C121: (SENTENCErec1.superdeixis = presentdeixis) AND
                       (SENTENCErec1.deixis = omegadeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = presentdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = presentdeixis)
                        )
                       )

                       C1211: (SENTENCErec1.finiteness = finite)
                       A1211: @

                       C1212: (SENTENCErec1.finiteness = infinite)
                       A1212: @


                 A121: @

                      (* past *)
                 C122:(SENTENCErec1.deixis = omegadeixis) AND
                      (SENTENCErec1.superdeixis = pastdeixis) AND
                       (
                        (
                         (CLAUSErec1.deixis = pastdeixis) AND
                         (CLAUSErec1.superdeixis = omegadeixis)
                        ) OR
                        (
                         (CLAUSErec1.deixis = omegadeixis) AND
                         (CLAUSErec1.superdeixis = pastdeixis)
                        )
                       )

                       C1221: (SENTENCErec1.finiteness = finite)
                       A1221: @

                       C1222: (SENTENCErec1.finiteness = infinite)
                       A1222: @

                 A122: @
                       

              A12: @

          A1: @
         >


   

  
&
\end{verbatim}
  \newpage
\begin{description}
\item[* name:] Fsuperdeixisadaptation9
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 3-MAR-1989 13:03:11  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 27/06/89\ \ \ \ \ author: Lisette Appelo\\
Deleted splitting into subrules.
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% FILTER Ftempindep2
< m :CLAUSE{CLAUSErec1}
           [mu1,
            I1:rel1/SENTENCE{SENTENCErec1}[I3:mu8],
            mu3
           ]

>
   MATCHCONDITIONS
      <
       I1: rel1 IN AUX_sentencerels AND
           SENTENCErec1.temporal = false
       I3: NOT EXIST(mu8, [predrel/VERBP{VERBPrec1}[mu9]])
      >


         <
          C1:true
                 (* independent sentence *)
             C11: (
                  (SENTENCErec1.superdeixis = omegadeixis) AND
                  (((SENTENCErec1.deixis = presentdeixis) AND
                    ((QUOTE_temprefnotfound(mu8)) AND
                     (CLAUSErec1.deixis = presentdeixis) OR
                     (CLAUSErec1.superdeixis = presentdeixis) 
                    )  
                 ) OR
                   ((SENTENCErec1.deixis = pastdeixis) AND
                    ((QUOTE_temprefnotfound(mu8)) AND
                     (CLAUSErec1.deixis = pastdeixis) OR
                     (CLAUSErec1.superdeixis = pastdeixis)
                    ) 
                   ) 
                  )
                 )
             A11: @
         A1: @
>

  
&
\end{verbatim}
  \newpage
\begin{description}
\item[* name:] Ftempindep2
\item[* relevant examples:]
Is hij ziek, dan zwemmen we niet (no VP in adverbial clause)
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 3-MAR-1989 12:53:07  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 27/06/89\ \ \ \ \ author: LIsette Appelo\\
Deleted splitting into subrules.
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}




%
%
