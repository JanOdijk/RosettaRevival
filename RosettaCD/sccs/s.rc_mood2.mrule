h14973
s 02821/00001/00000
d D 1.2 92/02/21 15:43:38 rous 2 1
c 
e
s 00001/00000/00000
d D 1.1 92/02/11 11:47:53 rous 1 0
c date and time created 92/02/11 11:47:53 by rous
e
u
U
f e 0
t
T
I 1
D 2
 
E 2
I 2
DUTCH 87
&
\newpage
\begin{verbatim}
%
% RULE Rmoodfinrel
< m1:I6::CLAUSE{CLAUSErec1}
           [ I3:shiftrel/T1,
             I4:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ I3:shiftrel/T1,
               conjrel/CONJ(KEY_datCONJkey){CONJrec1},
               I4:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : T1.CAT IN [NPVAR, VARPREPP, CNVAR] OR
            (T1.CAT = RADVP AND QUOTE_varinradv(T1))
       I4 : NOT EXIST(mu1, [conjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.modus = omegamodus
       I7 : SENTENCErec1 =
		   {
                    modus      : indicative
                    finiteness : finite
 		    mood       : relative
		    senttype   : subordinateclause
                    conjkey    : KEY_datconjkey
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: (*T1.REC.mood <> wh AND *)
              VERBrec1.modus = omegamodus
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := indicative;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : relative
		    senttype : subordinateclause
                    modus    : indicative
                    conjkey  : KEY_datCONJkey
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: (* T1.REC.mood <> wh AND *)
              VERBrec2.modus = indicative 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              CLAUSErec1.modus := omegamodus;
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: (* T1.REC.mood <> wh AND *) 
              VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : relative
                  senttype : subordinateclause
                  modus    : indicative
                  conjkey  : KEY_datCONJkey
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
         >
      DECOMP
         <
          C1: (* T1.REC.mood <> wh                              AND *)
              VERBrec3.modus = indicative                    AND
              VERBrec4.modus = indicative
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: (* T1.REC.mood <> wh AND *)
              VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : relative
                  senttype : subordinateclause
                  modus    : indicative
                  conjkey  : KEY_datCONJkey
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
         >
      DECOMP
         <
          C1: (* T1.REC.mood <> wh                               AND *)
               VERBrec3.modus = indicative                    AND
               VERBrec4.modus = indicative
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



>

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodfinrel
\item[* relevant examples:]
shiftrel/x1 hij zag -> shiftrel/x1 dat hij zag (* die hij zag *)
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] Clausetosentence
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 25-MAR-1988 16:00:56  
\item[* author:] Jan Odijk
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% RULE Rmoodfinwhmod
< m1:I6::CLAUSE{CLAUSErec1}
           [ I3:shiftrel/T1,
             I4:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ I3:shiftrel/T1,
               conjrel/CONJ(KEY_datCONJkey){CONJrec1},
               I4:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : T1.CAT IN [NPVAR, VARPREPP, CNVAR] OR
            (T1.CAT = RADVP AND QUOTE_varinradv(T1))
       I4 : NOT EXIST(mu1, [conjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.modus = omegamodus
       I7 : SENTENCErec1 =
		   {
                    modus      : indicative
                    finiteness : finite
 		    mood       : whmod
		    senttype   : subordinateclause
                    conjkey    : KEY_datconjkey
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: 
              VERBrec1.modus = omegamodus
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := indicative;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : whmod
		    senttype : subordinateclause
                    modus    : indicative
                    conjkey  : KEY_datCONJkey
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: 
              VERBrec2.modus = indicative 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              CLAUSErec1.modus := omegamodus;
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: 
              VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : whmod
                  senttype : subordinateclause
                  modus    : indicative
                  conjkey  : KEY_datCONJkey
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = indicative                    AND
               VERBrec4.modus = indicative
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: 
              VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : whmod
                  senttype : subordinateclause
                  modus    : indicative
                  conjkey  : KEY_datCONJkey
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = indicative                    AND
               VERBrec4.modus = indicative
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



>

&

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodfinwhmod
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] Clausetosentence
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 25-MAR-1988 16:11:49  
\item[* author:] Jan Odijk
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% RULE Rmoodopeninf
< m1: I3::CLAUSE{CLAUSErec1}
                [ I1:sig3, 
                  I2:subjrel/T1,
                  mu1,
                  predrel/VERBP{VERBPrec1}
                          [ mu2,
                            I5:rel2/T2,
                            I6:mu4 
                          ],
                  mu6
                ]
>

< m : I4::SENTENCE{SENTENCErec1}
                           [I1:sig3,
                            I2:subjrel/T1, 
                            mu1,
                            predrel/VERBP{VERBPrec1}
                                   [ mu2,
                                     I5:rel2/T3,
                                     I6:mu4 
                                   ],
                            mu6
                           ]
>


   MATCHCONDITIONS
      <
       I1 : ALL(sig3, shiftrel/..)
       I2 : T1.CAT IN [NPVAR, CNVAR] OR QUOTE_bigpronp(T1)
       I3 : CLAUSErec1.finiteness = infinite AND
            CLAUSErec1.PROsubject =true AND
            CLAUSErec1.infsort = omegainf AND
            CLAUSErec1.aspect = perfective
       I4 : SENTENCErec1 =
		   {
 		    mood       : declarative
		    senttype   : subordinateclause
                    modus      : infinitive
                    finiteness : infinite
                    PROsubject : true
                    infsort    : inf
                    adverbial  : false
                    temporal   : false
                    aspect     : perfective
                    conjclass  : omegaTimeadvClass
                    conjdeixis : omegadeixis
                    conjaspect : omegaAspect
                    conjretro  : false
		   }
       I5 : rel2 IN [head, progauxrel, auxrel]
       I6 : ALL(mu4, I16:rel5/..)
       I16: rel5 IN AUX_postverbrels
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := infinitive;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : declarative
		    senttype : subordinateclause
                    modus    : infinitive
                    infsort  : inf
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = infinitive
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
         >



   SUBRULE
                   (* proberen te werken, willen werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : declarative
                  senttype : subordinateclause
                  modus    : infinitive
                  infsort  : inf
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := infinitive;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := infinitive;
         >
      DECOMP
         <
          C1:  
               VERBrec3.modus = infinitive                    AND
               VERBrec4.modus = infinitive
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



   SUBRULE
                    (* hebben gewerkt; worden  gedood; zijn gedood ;
                         zitten te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : declarative
                  senttype : subordinateclause
                  modus    : infinitive
                  infsort  : inf
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := infinitive;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := infinitive;
         >
      DECOMP
         <
          C1:  
               VERBrec3.modus = infinitive                    AND
               VERBrec4.modus = infinitive
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



>
&


\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodopeninf
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] Clausetosentence
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 25-MAR-1988 16:14:54  
\item[* author:] Jan Odijk
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}


\newpage
\begin{verbatim}
% RULE Rmoodclosedinf
< m1: I3::CLAUSE{CLAUSErec1}
                [ mu1,
                  predrel/VERBP{VERBPrec1}
                          [ mu2,
                            I5:rel2/T2,
                            I6:mu4 
                          ],
                  mu6
                ]
>

< m : I4::SENTENCE{SENTENCErec1}
                           [mu1,
                            predrel/VERBP{VERBPrec1}
                                   [ mu2,
                                     I5:rel2/T3,
                                     I6:mu4 
                                   ],
                            mu6
                           ]
>


   MATCHCONDITIONS
      <
       I3 : CLAUSErec1.finiteness = infinite AND
            CLAUSErec1.PROsubject = false AND
            CLAUSErec1.infsort = omegainf
       I4 : SENTENCErec1 =
		   {
 		    mood       : declarative
		    senttype   : subordinateclause
                    modus      : infinitive
                    finiteness : infinite
                    PROsubject : false
                    infsort    : inf
                    adverbial  : false
                    temporal   : false
                    conjclass  : omegaTimeadvClass
                    conjdeixis : omegadeixis
                    conjaspect : omegaAspect
                    conjretro  : false
		   }
       I5 : rel2 IN [head, progauxrel, auxrel]
       I6 : ALL(mu4, I16:rel5/..)
       I16: rel5 IN AUX_postverbrels
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := infinitive;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : declarative
		    senttype : subordinateclause
                    modus    : infinitive
                    infsort  : inf
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = infinitive
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
         >



   SUBRULE
                   (* proberen te werken, willen werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : declarative
                  senttype : subordinateclause
                  modus    : infinitive
                  infsort  : inf
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := infinitive;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := infinitive;
         >
      DECOMP
         <
          C1:  
               VERBrec3.modus = infinitive                    AND
               VERBrec4.modus = infinitive
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



   SUBRULE
                    (* hebben gewerkt; worden  gedood; zijn gedood ;
                         zitten te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : declarative
                  senttype : subordinateclause
                  modus    : infinitive
                  infsort  : inf
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := infinitive;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := infinitive;
         >
      DECOMP
         <
          C1:  
               VERBrec3.modus = infinitive                    AND
               VERBrec4.modus = infinitive
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := omegamodus;
              CLAUSErec1.infsort := omegainf;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
         >



>

&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodclosedinf
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] Clausetosentence
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 31-MAR-1988 13:48:07  
\item[* author:] Jan Odijk
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

% RULE RMood7         (*imperativemood sg main clause, finite, imperative*)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_jijbpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : imperative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              NPrec1 = AUX_NPONjijbgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := imperative;
              VERBrec2.persons := [];
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = imperative  AND
              VERBrec2.persons = []        AND
              VERBrec2.number = singular
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjijbgpr;
     
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = singular  AND
              NPrec1 = AUX_NPONjijbgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND 
               VERBrec3.number = singular                     AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = singular                     
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjijbgpr;

         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = singular  AND      
              NPrec1 = AUX_NPONjijbgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec3.number = singular                     AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = singular
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjijbgpr;
         >



>

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] RMood7 (imperative singular)
\item[* relevant examples:]
CLAUSE[subjrel/jij boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (uiteindelijk: koop boeken!)
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] CLAUSEtoSENTENCE
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 4-JUN-1987 11:59:08  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To make a finite indicative main clause
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] none
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

% RULE RMood8         (*imperativemood t-form plural main clause, finite, imperative*)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_julliebpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : imperative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural  AND
              NPrec1 = AUX_NPONjulliebgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := imperative;
              VERBrec2.persons := [];
              VERBrec2.number := plural;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = imperative  AND
              VERBrec2.persons = []        AND
              VERBrec2.number = plural
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjulliebgpr;
     
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = plural  AND
              NPrec1 = AUX_NPONjulliebgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.number := plural;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.number := plural;
              VERBrec4.persons := [];

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec3.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              VERBrec2.number := plural;
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjulliebgpr;

         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = plural  AND      
              NPrec1 = AUX_NPONjulliebgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec3.number := plural;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];
              VERBrec4.number := plural;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec4.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              VERBrec2.number := plural;
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONjulliebgpr;
         >



>

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] RMood8 (imperative plural)
\item[* relevant examples:]
CLAUSE[subjrel/jij boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (uiteindelijk: koop boeken!)
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] CLAUSEtoSENTENCE
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 4-JUN-1987 11:59:08  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To make a finite indicative main clause
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] none
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}



\newpage
\begin{verbatim}
% RULE Rmoodpoliteimp          (* (u) Zwemt cf. nade usted *)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_ubpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : imperative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              NPrec1 = AUX_NPONubgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := imperative;
              VERBrec2.persons := [];
              VERBrec2.number := plural;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = imperative  AND
              VERBrec2.persons = []        AND
              VERBrec2.number = plural
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONubgpr;
     
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              4 IN VERBrec2.persons       AND
              VERBrec2.number = singular  AND
              NPrec1 = AUX_NPONubgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.number := plural;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.number := plural;
              VERBrec4.persons := [];

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec3.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [4];
              VERBrec2.number := singular;
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONubgpr;

         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              4 IN VERBrec2.persons       AND
              VERBrec2.number = singular  AND      
              NPrec1 = AUX_NPONubgpr  AND
              PERSPROrec1 = COPYT_BPERSPROtoPERSPRO(BPERSPROrec1) AND
              PERSPROrec1 =
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 }

          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec3.number := plural;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];
              VERBrec4.number := plural;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec4.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [4];
              VERBrec2.number := singular;
              PERSPROrec1 := COPYT_BPERSPROtoPERSPRO(BPERSPROrec1);
              PERSPROrec1 :=
                 {
                   reduced       : false
                   persprocases  : [Nominative]
                 };
              NPrec1 := AUX_NPONubgpr;
         >



>


&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodpoliteimp
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 23-DEC-1988 16:47:21  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}



% RULE RMood7s        (*imperativemood sg main clause, subject,
                                  finite, imperative*)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_jijbpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_jijbpersprokey){BPERSPROrec1}] 
                    ],
               I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : imperative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := imperative;
              VERBrec2.persons := [];
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = imperative  AND
              VERBrec2.persons = []        AND
              VERBrec2.number = singular
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = singular  
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND 
               VERBrec3.number = singular                     AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = singular                     
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];

         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = singular  
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec3.number = singular                     AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = singular
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
         >



>

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] RMood7s (imperative singular)
\item[* relevant examples:]
CLAUSE[subjrel/jij boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (uiteindelijk: koop boeken!)
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] CLAUSEtoSENTENCE
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 4-JUN-1987 11:59:08  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To make a finite indicative main clause
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] none
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

% RULE RMood8s    (*imperativemood indicative modus plural main clause, 
                         subject  finite, ind 'Komen jullie binnen'*)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_julliebpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_julliebpersprokey){BPERSPROrec1}] 
                    ],
               I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : indicative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural    AND
              VERBrec1.tense = omegatense
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := indicative;
              VERBrec2.persons := [2];
              VERBrec2.number := plural;
              VERBrec2.tense := presenttense;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = indicative AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = plural    AND
              VERBrec2.tense = presenttense
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              VERBrec1.tense := omegatense;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
              CLAUSErec1.modus := imperative;
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = plural       AND
              VERBrec1.tense = omegatense    AND
              VERBrec2.tense = omegatense
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : indicative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec3.number := plural;
              VERBrec3.persons := [2];
              VERBrec3.tense := presenttense;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
              VERBrec4.number := plural;
              VERBrec4.persons := [2];
              VERBrec4.tense := presenttense;

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = indicative                    AND
               2 IN VERBrec3.persons                          AND
               VERBrec3.number = plural                       AND
               VERBrec4.modus = indicative                    AND
               2 IN VERBrec4.persons                          AND
               VERBrec4.number = plural                       AND
              VERBrec4.tense = presenttense                   AND
              VERBrec3.tense = presenttense
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := imperative;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              VERBrec2.number := plural;
              VERBrec1.tense := omegatense;
              VERBrec2.tense := omegatense;

         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              2 IN VERBrec1.persons       AND
              VERBrec1.number = plural  AND
              2 IN VERBrec2.persons       AND
              VERBrec2.number = plural     AND
              VERBrec1.tense = omegatense    AND
              VERBrec2.tense = omegatense
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : indicative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := indicative;
              VERBrec3.persons := [];
              VERBrec3.number := plural;
              VERBrec3.tense := presenttense;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := indicative;
              VERBrec4.persons := [];
              VERBrec4.number := plural;
              VERBrec4.tense := presenttense;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = indicative                    AND
               2 IN VERBrec3.persons                          AND
               VERBrec4.number = plural                       AND
               VERBrec4.modus = indicative                    AND
               2 IN VERBrec4.persons                          AND
               VERBrec4.number = plural                       AND
              VERBrec3.tense = presenttense                   AND
              VERBrec4.tense = presenttense
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              CLAUSErec1.modus := imperative;
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [2];
              VERBrec1.number := plural;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [2];
              VERBrec2.number := plural;
              VERBrec1.tense := omegatense;
              VERBrec2.tense := omegatense;
         >



>

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] RMood8s (imperative plural)
\item[* relevant examples:]
CLAUSE[subjrel/jij boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (uiteindelijk: koop boeken!)
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] CLAUSEtoSENTENCE
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 4-JUN-1987 11:59:08  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To make a finite indicative main clause
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] none
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}



\newpage
\begin{verbatim}
% RULE Rmoodpoliteimps          (* (u) Zwemt cf. nade usted  subject*)
< m1:I6::CLAUSE{CLAUSErec1}
           [ subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_ubpersprokey){BPERSPROrec1}] 
                    ],
             I3:mu1,
             predrel/VERBP{VERBPrec1}
                    [ mu2,
                      I1:rel1/T2,
                      I2:mu3
                    ],
             mu4
           ] 
>

< m :I7::SENTENCE{SENTENCErec1}
             [  subjrel/NP{NPrec1}
                    [head/PERSPRO{PERSPROrec1}
                          [head/BPERSPRO(KEY_ubpersprokey){BPERSPROrec1}] 
                    ],
               I3:mu1,
               predrel/VERBP{VERBPrec1}
                      [ mu2,
                        I1:rel1/T3,
                        I2:mu3
                      ],
               mu4
             ] 
>

   MATCHCONDITIONS
      <
       I1 : rel1 IN [head, auxrel, progauxrel]
       I2 : ALL(mu3, I12:rel2/..)
       I3 : NOT EXIST(mu1, [subjrel/..])
       I6 : CLAUSErec1.finiteness = finite  AND
            CLAUSErec1.deixis = presentdeixis AND
            CLAUSErec1.modus = imperative
       I7 : SENTENCErec1.deixis = presentdeixis AND
            SENTENCErec1 =
		   {
                    modus      : imperative
                    finiteness : finite
 		    mood       : imperativemood
		    senttype   : mainclause
                    conjkey    : 0
                    adverbial  : false
                    temporal   : false
		    conjclass  : omegaTimeAdvClass
		    conjdeixis : omegadeixis
		    conjaspect : omegaAspect
		    conjretro  : false
		   }


       I12: rel2 IN AUX_postverbrels 
      >


<

   SUBRULE  (* bare V, partV, prepV *)
      <T2:I4::VERB{VERBrec1}[mu5] >
      <T3:I5::VERB{VERBrec2}[mu5] >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV, prepV]
       I5: VERBrec2.status IN [bareV, partV, prepV]
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  
          A1: VERBrec2 := VERBrec1;
              VERBrec2.modus := imperative;
              VERBrec2.persons := [];
              VERBrec2.number := plural;
              SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
		   {
 		    mood     : imperativemood
		    senttype : mainclause
                    modus    : imperative
		   }
            (* other attributes retain default values *)
         >

      DECOMP
         <
          C1: VERBrec2.modus = imperative  AND
              VERBrec2.persons = []        AND
              VERBrec2.number = plural
          A1: VERBrec1 := VERBrec2;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              CLAUSErec1 := COPYT_sentencetoclause(sentencerec1);
         >



   SUBRULE
                   (* probeerde te werken, wilde werken *)
      <T2:VERB{VERBrec1}[I1:sig1, head/I3::VERB{VERBrec2}[mu5], I2:sig2 ] >
      <T3:VERB{VERBrec3}[I1:sig1, head/I4::VERB{VERBrec4}[mu5], I2:sig2 ] >

   MATCHCONDITIONS
      <
        I1: ALL(sig1, adjoinrel/..)
        I2: ALL(sig2, adjoinrel/..)     
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              4 IN VERBrec2.persons       AND
              VERBrec2.number = singular 
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.number := plural;
              VERBrec3.persons := [];
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.number := plural;
              VERBrec4.persons := [];

         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec3.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [4];
              VERBrec2.number := singular;
         >



   SUBRULE
                    (* heeft gewerkt; werd gedood; is gedood ;zat te werken *)
      <T2:VERB{VERBrec1}[I1:rel4/I3::VERB{VERBrec2}[mu5], sig1 ] >
      <T3:VERB{VERBrec3}[I1:rel4/I4::VERB{VERBrec4}[mu5], sig1 ] >

   MATCHCONDITIONS
      <
        I1: rel4 IN [auxrel, progauxrel]
        I3: VERBrec2.status = bareV
        I4: VERBrec4.status = bareV  
      >

      COMP
         <
          C1: VERBrec1.modus = omegamodus AND
              VERBrec2.modus = omegamodus AND
              4 IN VERBrec1.persons       AND
              VERBrec1.number = singular  AND
              4 IN VERBrec2.persons       AND
              VERBrec2.number = singular  
          A1: SENTENCErec1 := COPYT_clausetosentence(CLAUSErec1);
              SENTENCErec1 :=
                 {
                  mood     : imperativemood
                  senttype : mainclause
                  modus    : imperative
                 };
                (* rest of the attributes remains the same *)
              VERBrec3 := VERBrec1;
              VERBrec3.modus := imperative;
              VERBrec3.persons := [];
              VERBrec3.number := plural;
              VERBrec4 := VERBrec2;
              VERBrec4.modus := imperative;
              VERBrec4.persons := [];
              VERBrec4.number := plural;
         >
      DECOMP
         <
          C1: 
               VERBrec3.modus = imperative                    AND
               VERBrec3.persons = []                          AND
               VERBrec4.number = plural                       AND
               VERBrec4.modus = imperative                    AND
               VERBrec4.persons = []                          AND
               VERBrec4.number = plural
          A1: CLAUSErec1 := COPYT_sentencetoclause(SENTENCErec1);
              VERBrec1 := VERBrec3;
              VERBrec1.modus := omegamodus;
              VERBrec1.persons := [4];
              VERBrec1.number := singular;
              VERBrec2 := VERBrec4;
              VERBrec2.modus := omegamodus;
              VERBrec2.persons := [4];
              VERBrec2.number := singular;
         >



>


&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rmoodpoliteimps
\item[* relevant examples:]
\item[* language:] (Dutch, English, Spanish) 
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] 
\item[* class:] (name of rule, transformation or filter class)
\item[* date of creation:] 23-DEC-1988 16:47:21  
\item[* author:] 
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}




%%
E 2
E 1
