{*DUTCH}
pragma C_include('listree.pf');
pragma C_include('lsstree.pf');
PACKAGE comlexrules2;
WITH listree,lsstree;

{rule:}
{:bpropernountopropernoun}
FUNCTION combpropernountopropernoun(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
bpropernountopropernoun
1
BPROPERNOUN
PROPERNOUN
}
{:bpropernountopropernoun}


{rule:}
{:bpropertopropergenitief}
FUNCTION combpropertopropergenitief(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
bpropertopropergenitief
2
BPROPERNOUN
SFCAT
PROPERNOUN
}
{:bpropertopropergenitief}


{rule:}
{:PropernounWithDimForm}
FUNCTION comPropernounWithDimForm(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
PropernounWithDimForm
2
BPROPERNOUN
SFCAT
PROPERNOUN
}
{:PropernounWithDimForm}


{rule:}
{:PropernounWithGeniDimForm}
FUNCTION comPropernounWithGeniDimForm(Is1,Is2,Is3:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
PropernounWithGeniDimForm
3
BPROPERNOUN
SFCAT
SFCAT
PROPERNOUN
}
{:PropernounWithGeniDimForm}


{rule:}
{:bpropernountosubnoun}
FUNCTION combpropernountosubnoun(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
bpropernountosubnoun
1
BPROPERNOUN
SUBNOUN
}
{:bpropernountosubnoun}


{rule:}
{:bnountosub}
FUNCTION combnountosub(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
bnountosub
1
BNOUN
SUBNOUN
}
{:bnountosub}


{rule:}
{:DimForm}
FUNCTION comDimForm(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
DimForm
2
SUBNOUN
SFCAT
SUBNOUN
}
{:DimForm}


{rule:}
{:nounenkelvoud}
FUNCTION comnounenkelvoud(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
nounenkelvoud
1
SUBNOUN
NOUN
}
{:nounenkelvoud}


{rule:}
{:nounmeervoud}
FUNCTION comnounmeervoud(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
nounmeervoud
2
SUBNOUN
SFCAT
NOUN
}
{:nounmeervoud}


{rule:}
{:noungenitiefenkelvoud}
FUNCTION comnoungenitiefenkelvoud(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
noungenitiefenkelvoud
2
SUBNOUN
SFCAT
NOUN
}
{:noungenitiefenkelvoud}


{rule:}
{:noungenitiefmeervoud}
FUNCTION comnoungenitiefmeervoud(Is1,Is2,Is3:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
noungenitiefmeervoud
3
SUBNOUN
SFCAT
SFCAT
NOUN
}
{:noungenitiefmeervoud}


{rule:}
{:Perspro1}
FUNCTION comPerspro1(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
Perspro1
1
BPERSPRO
PERSPRO
}
{:Perspro1}


{rule:}
{:Perspro2}
FUNCTION comPerspro2(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
Perspro2
2
BPERSPRO
SFCAT
PERSPRO
}
{:Perspro2}


{rule:}
{:Perspro3}
FUNCTION comPerspro3(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
Perspro3
1
BPERSPRO
PERSPRO
}
{:Perspro3}


{rule:}
{:PersproToPossadj}
FUNCTION comPersproToPossadj(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
PersproToPossadj
2
BPERSPRO
SFCAT
POSSADJ
}
{:PersproToPossadj}


{rule:}
{:PersproToPosspro}
FUNCTION comPersproToPosspro(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
PersproToPosspro
2
BPERSPRO
SFCAT
POSSPRO
}
{:PersproToPosspro}


{rule:}
{:BwhProToWhPro}
FUNCTION comBwhProToWhPro(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
BwhProToWhPro
1
BWHPRO
WHPRO
}
{:BwhProToWhPro}


{rule:}
{:WhproToPossadj}
FUNCTION comWhproToPossadj(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
WhproToPossadj
2
BWHPRO
SFCAT
POSSADJ
}
{:WhproToPossadj}


{rule:}
{:DemproToPossadj}
FUNCTION comDemproToPossadj(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
DemproToPossadj
2
DEMPRO
SFCAT
POSSADJ
}
{:DemproToPossadj}


{rule:}
{:BDetToDet1}
FUNCTION comBDetToDet1(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
BDetToDet1
1
BDET
DET
}
{:BDetToDet1}


{rule:}
{:BDetToDet2}
FUNCTION comBDetToDet2(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
BDetToDet2
2
BDET
SFCAT
DET
}
{:BDetToDet2}


{rule:}
{:Bindefprotoindefpro1}
FUNCTION comBindefprotoindefpro1(Is1:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
Bindefprotoindefpro1
1
BINDEFPRO
INDEFPRO
}
{:Bindefprotoindefpro1}


{rule:}
{:Bindefprotoindefpro2}
FUNCTION comBindefprotoindefpro2(Is1,Is2:LISTREE_pStree)
                                 :LISTREE_SetOfStrees;
EXTERNAL;
{*
Bindefprotoindefpro2
2
BINDEFPRO
SFCAT
INDEFPRO
}
{:Bindefprotoindefpro2}

END;
