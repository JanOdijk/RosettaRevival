DUTCH 44
&
\begin{verbatim}
%
% TRANSFORMATION TADJPATTERNe21    (* ergative adjs: 
                                      meewerkend voorwerp met prepositie
                                      aan mij duidelijk dierbaar, 
                                      aan ons bekend
                                    *)

< m1: ADJPPROP{ADJPPROPrec1}
                       [predrel/ADJP{ADJPrec1}
                              [argrel/T1,
                               argrel/T2,
                               head/ADJ{ADJrec1}[mu2]
                              ]
                       ]
>

< m : ADJPPROP{ADJPPROPrec2}[mu1,
                       predrel/ADJP{ADJPrec1}
                              [aanobjrel/VARPREPP{VARPREPPrec1}
                                        [head/PREP(AUX_aanioprepkey){PREPrec1},
                                         objrel/T1
                                        ],
                               rel1/T2,
                               head/ADJ{ADJrec1}[mu2]
                              ]
                       ]
>
<
   SUBRULE (* 1 *)          
      <T1: NPVAR{NPVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: NPVAR{NPVARrec1}
      >

      COMP
         <
          C1: (synAANNP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synAANNP_DONP]
              
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synAANNP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synAANNP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 2 *)          (* variant van SUBRULE 1 *)
      <T1: CNVAR{CNVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: CNVAR{CNVARrec1}
      >

      COMP
         <
          C1: (synAANNP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synAANNP_DONP]
              
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synAANNP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synAANNP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 3 *)          (* variant van SUBRULE 1 *)
      <T1: NPVAR{NPVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: CNVAR{CNVARrec1}
      >

      COMP
         <
          C1: (synAANNP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synAANNP_DONP]
              
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synAANNP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synAANNP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 4 *)          (* variant van SUBRULE 1 *)
      <T1: CNVAR{CNVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      COMP
         <
          C1: (synAANNP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synAANNP_DONP]
              
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synAANNP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synAANNP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >

   SUBRULE (* 5 *)
      <T1: NPVAR{NPVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_THATSENT,
                                        synAANNP_QSENT] <> []) AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})

              C11: SENTENCEVARrec1.mood = declarative
              A11: ADJPPROPrec2.adjpatternefs := [synAANNP_THATSENT]
              C12: (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synAANNP_QSENT]

          A1: rel1 := complrel;
              ADJPPROPrec2 := ADJPPROPrec1
              
         >
      DECOMP
         <
          C1: (rel1 = complrel) AND
              (ADJPPROPrec2.adjpatternefs * [synAANNP_THATSENT,
                                             synAANNP_QSENT] 
               <> []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})
              C11: (synAANNP_THATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synAANNP_QSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >

   SUBRULE (* 6 *)
      <T1: CNVAR{CNVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_THATSENT,
                                        synAANNP_QSENT] <> []) AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})

              C11: SENTENCEVARrec1.mood = declarative
              A11: ADJPPROPrec2.adjpatternefs := [synAANNP_THATSENT]
              C12: (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synAANNP_QSENT]

          A1: rel1 := complrel;
              ADJPPROPrec2 := ADJPPROPrec1
              
         >
      DECOMP
         <
          C1: (rel1 = complrel) AND
              (ADJPPROPrec2.adjpatternefs * [synAANNP_THATSENT,
                                             synAANNP_QSENT] 
              <> []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})
              C11: (synAANNP_THATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synAANNP_QSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >
>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] TADJPATTERNe21
\item[* relevant examples:] x1 aan mij dierbaar, x1 aan ons bekend
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] AdjpPropFormation
\item[* class:] TC:ADJPATTERNRULES
\item[* date of creation:] 08-AUG-1987 15:33:37  
\item[* author:] Franciska de Jong
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\item domain: 
\end{enumerate}
\item[\ \ consequences in the grammar:] 
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION TADJPATTERNe22    (* ergative adjs: 
                                      indobj zonder prepositie:
                                      mij duidelijk, ons bekend
                                      empty indirect object: 
                                      bekend, duidelijk
                                    *)

< m1: ADJPPROP{ADJPPROPrec1}
                       [predrel/ADJP{ADJPrec1}
                              [argrel/T1,
                               argrel/T2,
                               head/ADJ{ADJrec1}[mu2]
                              ]
                       ]
>

< m : ADJPPROP{ADJPPROPrec2}
                       [mu1,
                       predrel/ADJP{ADJPrec1}
                              [indobjrel/T1,
                               rel1/T2,
                               head/ADJ{ADJrec1}[mu2]
                              ]
                       ]
>
<
   SUBRULE (* 1 *)          
      <T1: NPVAR{NPVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      COMP
         <
          C1: (synIONP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIONP_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIONP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIONP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 2 *)          (* variant van SUBRULE 1 *)
      <T1: CNVAR{CNVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      COMP
         <
          C1: (synIONP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIONP_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIONP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIONP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 3 *)          (* variant van SUBRULE 1 *)
      <T1: NPVAR{NPVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: CNVAR{CNVARrec1}
      >

      COMP
         <
          C1: (synIONP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIONP_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIONP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIONP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 4 *)          (* variant van SUBRULE 1 *)
      <T1: CNVAR{CNVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      COMP
         <
          C1: (synIONP_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIONP_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIONP_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIONP_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 5 *)
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: NPVAR{NPVARrec1}
      >
      COMP
         <
          C1: (synIOEMPTY_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIOEMPTY_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIOEMPTY_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIOEMPTY_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >

   SUBRULE (* 6 *)
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: CNVAR{CNVARrec1}
      >
      COMP
         <
          C1: (synIOEMPTY_DONP IN ADJrec1.adjpatterns) AND
              ADJPPROPrec1.adjpatternefs = []
          A1: rel1 := objrel;
              ADJPPROPrec2 := ADJPPROPrec1;
              ADJPPROPrec2.adjpatternefs := [synIOEMPTY_DONP]
         >
      DECOMP
         <
          C1: (rel1 = objrel) AND
              (synIOEMPTY_DONP IN ADJPPROPrec2.adjpatternefs) AND
              (synIOEMPTY_DONP IN ADJrec1.adjpatterns) 
          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []

         >


   SUBRULE (* 7 *)
      <T1: NPVAR{NPVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >
      <T1: NPVAR{NPVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_THATSENT,
                                        synIONP_QSENT] <> []) AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})

              C11: SENTENCEVARrec1.mood = declarative
              A11: ADJPPROPrec2.adjpatternefs := [synIONP_THATSENT]
              C12: (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_QSENT]

          A1: rel1 := complrel;
              ADJPPROPrec2 := ADJPPROPrec1
              
         >
      DECOMP
         <
          C1: (rel1 = complrel) AND
              (ADJPPROPrec2.adjpatternefs * [synIONP_THATSENT,
                                                synIONP_QSENT] <> []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})
              C11: (synIONP_THATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIONP_QSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >

   SUBRULE (* 8 *)
      <T1: CNVAR{CNVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >
      <T1: CNVAR{CNVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_THATSENT,
                                        synIONP_QSENT] <> []) AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})

              C11: SENTENCEVARrec1.mood = declarative
              A11: ADJPPROPrec2.adjpatternefs := [synIONP_THATSENT]
              C12: (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_QSENT]

          A1: rel1 := complrel;
              ADJPPROPrec2 := ADJPPROPrec1
              
         >
      DECOMP
         <
          C1: (rel1 = complrel) AND
              (ADJPPROPrec2.adjpatternefs * [synIONP_THATSENT,
                                                synIONP_QSENT] <> []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})
              C11: (synIONP_THATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIONP_QSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >

   SUBRULE (* 9 *)
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >
      <T1: EMPTYVAR{EMPTYVARrec1}
       T2: SENTENCEVAR{SENTENCEVARrec1}
      >

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIOEMPTY_THATSENT,
                                        synIOEMPTY_QSENT] <> []) AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})

              C11: SENTENCEVARrec1.mood = declarative
              A11: ADJPPROPrec2.adjpatternefs := [synIOEMPTY_THATSENT]
              C12: (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synIOEMPTY_QSENT]

          A1: rel1 := complrel;
              ADJPPROPrec2 := ADJPPROPrec1
              
         >
      DECOMP
         <
          C1: (rel1 = complrel) AND
              (ADJPPROPrec2.adjpatternefs * [synIOEMPTY_THATSENT,
                                                synIOEMPTY_QSENT] <> []) AND
              (SENTENCEVARrec1 = { senttype  : subordinateclause
                                   finiteness: finite})
              C11: (synIOEMPTY_THATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIOEMPTY_QSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN [whinterrogative, yesnointerrogative])
              A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := []
         >
>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] TADJPATTERNe22
\item[* relevant examples:] x1 ( mij) dierbaar, x1 ( ons) bekend
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] AdjpPropFormation
\item[* class:] TC:ADJPATTERNRULES
\item[* date of creation:] 08-AUG-1987 15:33:37  
\item[* author:] Franciska de Jong
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] 
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\item domain: 
\end{enumerate}
\item[\ \ consequences in the grammar:] 
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION TADJPATTERN25       (* het is aan x1 bekend/duidelijk
                                        dat/of  .... *)

< m1: ADJPPROP{ADJPPROPrec1}[ predrel/ADJP{ADJPrec1}
                                       [ argrel/T1,
                                         I1:argrel/T2,
                                         head/ADJ{ADJrec1}[mu2]
                                       ] 
                               ]
>

< m : ADJPPROP{ADJPPROPrec2}
               [ predrel/ADJP{ADJPrec1}
                        [aanobjrel/VARPREPP{VARPREPPrec1}
                                [head/PREP(AUX_aanioprepkey){PREPrec1},
                                 I1:objrel/T2
				],
		         objrel/I2::NP{NPrec1}
                                       [head/PERSPRO{PERSPROrec1}
                                             [head/BPERSPRO(AUX_HETBPERSPROkey)
                                                                 {BPERSPROrec1}]
                                       ],
                         complrel/SENTENCEVAR{SENTENCEVARrec1},
                         head/ADJ{ADJrec1}[mu2]
                        ] 
               ]
>

   MATCHCONDITIONS
      < I1: T2.cat IN [NPVAR, CNVAR]
        I2: NPrec1 = AUX_NPONHetBprspr
      >
<

   SUBRULE (* 1 het is aan x1 bekend dat ... *)
      < T2: NPVAR{NPVARrec1}>
      < T2: NPVAR{NPVARrec1}>

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_HETTHATSENT,
                                         synAANNP_HETQSENT
                                        ] <> [] )  AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = 
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              )

              C11: (synAANNP_HETTHATSENT IN  ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: ADJPPROPrec2.adjpatternefs := [synAANNP_HETTHATSENT];

              C12: (synAANNP_HETQSENT IN  ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN 
                      [WHInterrogative, YesNoInterrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synAANNP_HETQSENT];

          A1: VARPREPPrec1 := VARPREPPrecdef;
              VARPREPPrec1.headkey := AUX_aanioprepkey;
              VARPREPPrec1.synppefs := [synNP];
              ADJPPROPrec2 := ADJPPROPrec1;
              NPrec1 := AUX_NPONHetBprspr;

         >
      DECOMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_HETTHATSENT,
                                         synAANNP_HETQSENT
                                        ] <> [] )  AND
              (SENTENCEVARrec1 =
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              ) AND
              (PREPrec1.key = AUX_aanioprepkey) AND
              (VARPREPPrec1 = VARPREPPrecdef 
                              EXCEPT FOR [synppefs, headkey]) AND
              (VARPREPPrec1.headkey = AUX_aanioprepkey) AND
              (synNP IN VARPREPPrec1.synppefs) 

             C11: (synAANNP_HETTHATSENT IN ADJrec1.adjpatterns) AND
                  (synAANNP_HETTHATSENT IN ADJPPROPrec2.adjpatternefs) 
                   AND
                  SENTENCEVARrec1.mood = declarative

             A12: @

             C12: (synAANNP_HETQSENT IN ADJrec1.adjpatterns) AND
                  (synAANNP_HETQSENT IN ADJPPROPrec2.adjpatternefs) 
                   AND
                  (SENTENCEVARrec1.mood 
                            IN [WHInterrogative, YesNoInterrogative])
             A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := [];
         >

   SUBRULE(* 2,  variant van 1 *)

      < T2: CNVAR{CNVARrec1}>
      < T2: CNVAR{CNVARrec1}>

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_HETTHATSENT,
                                         synAANNP_HETQSENT
                                        ] <> [] )  AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = 
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              )

              C11: (synAANNP_HETTHATSENT IN  ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: ADJPPROPrec2.adjpatternefs := [synAANNP_HETTHATSENT];

              C12: (synAANNP_HETQSENT IN  ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood IN 
                      [WHInterrogative, YesNoInterrogative])
              A12: ADJPPROPrec2.adjpatternefs := [synAANNP_HETQSENT];

          A1: VARPREPPrec1 := VARPREPPrecdef;
              VARPREPPrec1.headkey := AUX_aanioprepkey;
              VARPREPPrec1.synppefs := [synNP];
              ADJPPROPrec2 := ADJPPROPrec1;
              NPrec1 := AUX_NPONHetBprspr
         >
      DECOMP
         <
          C1: (ADJrec1.adjpatterns * [synAANNP_HETTHATSENT,
                                         synAANNP_HETQSENT
                                        ] <> [] )  AND
              (SENTENCEVARrec1 =
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              ) AND
              (PREPrec1.key = AUX_aanioprepkey) AND
              (VARPREPPrec1 = VARPREPPrecdef 
                              EXCEPT FOR [synppefs, headkey]) AND
              (VARPREPPrec1.headkey = AUX_aanioprepkey) AND
              (synNP IN VARPREPPrec1.synppefs) 

             C11: (synAANNP_HETTHATSENT IN ADJrec1.adjpatterns) AND
                  (synAANNP_HETTHATSENT IN ADJPPROPrec2.adjpatternefs) 
                   AND
                  SENTENCEVARrec1.mood = declarative

             A12: @

             C12: (synAANNP_HETQSENT IN ADJrec1.adjpatterns) AND
                  (synAANNP_HETQSENT IN ADJPPROPrec2.adjpatternefs) 
                   AND
                  (SENTENCEVARrec1.mood IN 
                                  [WHInterrogative, YesNoInterrogative])
             A12: @

          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := [];
         >
>                              
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] TADJPATTERN25
\item[* relevant examples:] het is aan x1 bekend/onduidelijk dat/of .........
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] AdjpPropFormation
\item[* class:] TC:ADJPATTERNRULES
\item[* date of creation:] 28-JAN-1988 15:27:10  
\item[* author:] Franciska de Jong
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% TRANSFORMATION TADJPATTERN26       (* het is (x1) bekend/duidelijk
                                        dat/of  .... *)

< m1: ADJPPROP{ADJPPROPrec1}[ predrel/ADJP{ADJPrec1}
                                       [ argrel/T1,
                                         argrel/SENTENCEVAR{SENTENCEVARrec1},
                                         head/ADJ{ADJrec1}[mu2]
                                       ] 
                               ]
>

< m : ADJPPROP{ADJPPROPrec2}
               [ predrel/ADJP{ADJPrec1}
                        [I1:indobjrel/T1,
		         objrel/I2::NP{NPrec1}
                                       [head/PERSPRO{PERSPROrec1}
                                             [head/BPERSPRO(AUX_HETBPERSPROkey)
                                                                 {BPERSPROrec1}]
                                       ],
                         complrel/SENTENCEVAR{SENTENCEVARrec1},
                         head/ADJ{ADJrec1}[mu2]
		        ] 
	       ]
>
   MATCHCONDITIONS
      <I1: T1.cat IN [NPVAR,CNVAR,EMPTYVAR]
       I2: NPrec1 = AUX_NPONHetBprspr
      >

<
   SUBRULE (* 1 het is  x1 bekend dat ... *)
      < T1: NPVAR{NPVARrec1}>
      < T1: NPVAR{NPVARrec1}>

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_HETTHATSENT,
                                      synIONP_HETQSENT
                                     ] <> [] )  AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = 
                        {
                          senttype    : subordinateclause
                          finiteness  : finite
                        }
              )

              C11: (synIONP_HETTHATSENT IN ADJrec1.adjpatterns ) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: ADJPPROPrec2.adjpatternefs := [synIONP_HETTHATSENT];


              C12: synIONP_HETQSENT IN ADJrec1.adjpatterns
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_HETQSENT];

          A1: NPrec1 : = AUX_NPONHetBprspr;
              ADJPPROPrec2 := ADJPPROPrec1
         >
      DECOMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_HETTHATSENT,
                                         synIONP_HETQSENT
                                        ] <> [] )  AND
              (SENTENCEVARrec1 =
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              ) 

              C11: (synIONP_HETTHATSENT IN ADJrec1.adjpatterns) AND
                   (synIONP_HETTHATSENT IN ADJPPROPrec2.adjpatternefs) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIONP_HETQSENT IN ADJrec1.adjpatterns) AND
                   (synIONP_HETQSENT IN ADJPPROPrec2.adjpatternefs)
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_HETQSENT];


          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := [];
         >

   SUBRULE(* 2,  variant van 1 *)

      < T1: CNVAR{CNVARrec1}>
      < T1: CNVAR{CNVARrec1}>

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_HETTHATSENT,
                                      synIONP_HETQSENT
                                     ] <> [] )  AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = 
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              )

              C11: (synIONP_HETTHATSENT IN ADJrec1.adjpatterns ) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: ADJPPROPrec2.adjpatternefs := [synIONP_HETTHATSENT];


              C12: (synIONP_HETQSENT IN ADJrec1.adjpatterns)
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_HETQSENT];

          A1: NPrec1 : = AUX_NPONHetBprspr;
              ADJPPROPrec2 := ADJPPROPrec1
         >
      DECOMP
         <
          C1: (ADJrec1.adjpatterns * [synIONP_HETTHATSENT,
                                         synIONP_HETQSENT
                                        ] <> [] )  AND
              (SENTENCEVARrec1 =
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              ) 

              C11: (synIONP_HETTHATSENT IN ADJrec1.adjpatterns) AND
                   (synIONP_HETTHATSENT IN ADJPPROPrec2.adjpatternefs) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIONP_HETQSENT IN ADJrec1.adjpatterns) AND
                   (synIONP_HETQSENT IN ADJPPROPrec2.adjpatternefs)
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIONP_HETQSENT];


          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := [];
         >

   SUBRULE(* 3,  variant van 1 *)

      < T1: EMPTYVAR{EMPTYVARrec1}>
      < T1: EMPTYVAR{EMPTYVARrec1}>

      COMP
         <
          C1: (ADJrec1.adjpatterns * [synIOEMPTY_HETTHATSENT,
                                      synIOEMPTY_HETQSENT
                                     ] <> [] )  AND
              (ADJPPROPrec1.adjpatternefs = []) AND
              (SENTENCEVARrec1 = 
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              )

              C11: (synIOEMPTY_HETTHATSENT IN ADJrec1.adjpatterns) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: ADJPPROPrec2.adjpatternefs := [synIOEMPTY_HETTHATSENT];


              C12: (synIOEMPTY_HETTHATSENT IN ADJrec1.adjpatterns)
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIOEMPTY_HETQSENT];

          A1: NPrec1 : = AUX_NPONHetBprspr;
              ADJPPROPrec2 := ADJPPROPrec1
         >
      DECOMP
         <
          C1: (ADJrec1.adjpatterns * [synIOEMPTY_HETTHATSENT,
                                         synIOEMPTY_HETQSENT
                                        ] <> [] )  AND
              (SENTENCEVARrec1 =
                         {
                          senttype    : subordinateclause
                          finiteness  : finite
                         }
              ) 

              C11: (synIOEMPTY_HETTHATSENT IN ADJrec1.adjpatterns) AND
                   (synIOEMPTY_HETTHATSENT IN ADJPPROPrec2.adjpatternefs) AND
                   (SENTENCEVARrec1.mood = declarative)
              A11: @

              C12: (synIOEMPTY_HETQSENT IN ADJrec1.adjpatterns) AND
                   (synIOEMPTY_HETQSENT IN ADJPPROPrec2.adjpatternefs)
                   C111: SENTENCEVARrec1.mood = WHInterrogative
                   A111: @
                   C112: SENTENCEVARrec1.mood = YesNoInterrogative
                   A112: @
              A12: ADJPPROPrec2.adjpatternefs := [synIOEMPTY_HETQSENT];


          A1: ADJPPROPrec1 := ADJPPROPrec2;
              ADJPPROPrec1.adjpatternefs := [];
         >


>                              
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] TADJPATTERN26
\item[* relevant examples:] het is (x1) bekend/onduidelijk dat/of .........
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] AdjpPropFormation
\item[* class:] TC:ADJPATTERNRULES
\item[* date of creation:] 28-JAN-1988 16:12:10  
\item[* author:] Franciska de Jong
\item[* copied from:]
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:]
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{} 
\begin{enumerate}
\item N.B. most embedded CA-pairs can be collapsed
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}
%%
