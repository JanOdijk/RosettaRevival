
LANGUAGE : DUTCH

PARAMETER TRANSLATION
   < humanpar:humantype <-> humanpar:humantype =
   (yeshuman <-> ilyeshuman, nohuman <-> ilnohuman, omegahuman <-> ilomegahuman)
     superpar:deixistype <-> superpar:deixistype =
   (presentdeixis <-> ilpresentdeixis, pastdeixis <-> ilpastdeixis)
     adjunctpar:adjuncttype <-> adjunctpar:adjuncttype =
     (resAP      <-> ilResAP, 
      resPP      <-> ilResPP, 
      SubjComit  <-> ilComit, 
      ObjComit   <-> ilComit, 
      BenfactNP  <-> ilBenfactNP,
      BenfactPP  <-> ilBenfactPP, 
      BenfactPP  <-  ilBenfactNP,
      Locadjunct <-> ilLocAdjunct, 
      DirAdjunct <-> ilDirAdjunct, 
      resNP      <-> ilResNP
    )
     numberpar:numbertype <-> numberpar:numbertype =
    (singular <-> ILsingular, plural <-> ILplural)
   >


RULE TRANSLATION
<
Rpppdurvarinsertion,
Rdurvarinsertion,
Radjdurvarinsertion                  <-> Ldurvarinsertion

Rrefvarinsertion,
Rexistrefvarinsertion,
Ridentrefvarinsertion,
Radvrefvarinsertion,
Radjrefvarinsertion,
Rppprefvarinsertion,
RNPrefvarinsertion                   <-> Lrefvarinsertion

Rretrovarinsertion,
Rpppretrovarinsertion,
Radjretrovarinsertion,
RNPretrovarinsertion                 <-> Lretrovarinsertion

Raspectimperfective,
Radjaspectimperfective, 
Radvaspectimperfective,
RpppAspectImperfective               <-> Laspectimperfective

Raspectperfective                    <-> Laspectperfective

Raspecthabitual                      <-> Laspecthabitual

Rretroimperfective,
Rretroperfective                     <-> Lretro

Rfinirrmodaldeixis                   <-> Lirrmodaldeixis

Rfinirrmodalsuperdeixis              <-> Lirrmodalsuperdeixis

Rfinpresentdeixis,
Rinfinpresentdeixis,
RinfinpresentdeixisA,
Rfinpresentdeixisa                   <-> Lpresentdeixis

RfinpastdeixisA,
RfinpastdeixisspecA,
RinfinpastdeixisspecA,
Rfinpastdeixis,
Rfinpastdeixisspec,
Rinfinpastdeixisspec                 <-> Lpastdeixis

RfinpresentsuperdeixisA,
RinfinpresentsuperdeixisA,
Rfinpresentsuperdeixis,
Rinfinpresentsuperdeixis,
RCNPresentSuperdeixis,
RNPPresentSuperdeixis1,
RNPPresentSuperdeixis2,
Ridnppsuperdeixis{super=presentdeixis},
Radjpresentsuperdeixis,
Radvppsuperdeixis{super=presentdeixis},
Rpppsuperdeixis{super=presentdeixis},
Rppsuperdeixis{super=presentdeixis},
RADVPsuperdeixis{super=presentdeixis},
RQPsuperdeixis{super=presentdeixis},
RDETPsuperdeixis{super=presentdeixis}
                                      <-> Lpresentsuperdeixis

Rfinpastsuperdeixis1A,
RinfinpastsuperdeixisA,
Rfinpastsuperdeixis1,
Rinfinpastsuperdeixis,
RCNPastSuperdeixis,
RNPPastSuperdeixis1,
RNPPastSuperdeixis2,
Ridnppsuperdeixis{super=pastdeixis},
Radjpastsuperdeixis,
Radvppsuperdeixis{super=pastdeixis},
Rpppsuperdeixis{super=pastdeixis},
Rppsuperdeixis{super=pastdeixis},
RADVPsuperdeixis{super=pastdeixis},
RDETPsuperdeixis{super=pastdeixis},
RQPsuperdeixis{super=pastdeixis}
                                      <-> Lpastsuperdeixis

Rfinpastsuperdeixis2A,
RfinpastsuperdeixisspecA,
RinfinpastsuperdeixisspecA,
Rfinpastsuperdeixis2,
Rfinpastsuperdeixisspec,
Rinfinpastsuperdeixisspec             <-> Lpastpastsuperdeixis

Rimpdeixis                            <-> Limpdeixis

Rtempadvsubstitution1(*LEVEL*),
Rtempadvsubstitution2 (*LEVEL*),
Rtempadvsentsubstitution (*LEVEL*)      <-> Ltempsubst(*LEVEL*)

RtempConjSentMoveToLeft                <-> Ltemptoleft


RcoordIntro                  <-> Lcoordintro

RsimplePPcoord               <-> Lsimplecoord{catpar=ilPP}
RsimpleAdvPcoord             <-> Lsimplecoord{catpar=ilAdvP}
RsimpleopenPPPcoord          <-> Lsimplecoord{catpar=ilOPPP}
RsimpleopenAdvPPcoord        <-> Lsimplecoord{catpar=ilOAdvPP}     
RsimpleopenADjPPcoord        <-> Lsimplecoord{catpar=ilOAdjPP}
RsimpleNPcoord               <-> Lsimplecoord{catpar=ilNP}
RsimpleclosedAdvppcoord      <-> Lsimplecoord{catpar=ilCAdvPP}
RsimpleADJPPcoord            <-> Lsimplecoord{catpar=ilAdjPP}
RsimpleCLOSEDADJPPcoord      <-> Lsimplecoord{catpar=ilCAdjPP}
RcoordS                      <-> Lsimplecoord{catpar=ilSENTENCE}
RitskPPcoord                 <-> Litsimplecoord{catpar=ilPP kommapar=yes}
RitscPPcoord                 <-> Litsimplecoord{catpar=ilPP kommapar=no}
RcoorditS                    <-> Litsimplecoord{catpar=ilSENTENCE kommapar=yes}
RcorrPPcoord                 <-> Lcorrcoord{catpar=ilPP}
Rcorropenadjppcoord          <-> Lcorrcoord{catpar=ilOAdjPP}
Rcorrclosedadjppcoord        <-> Lcorrcoord{catpar=ilCAdjPP}
Rcorradjppcoord              <-> Lcorrcoord{catpar=ilAdjPP}
Rcorropenadvppcoord          <-> Lcorrcoord{catpar=ilOAdvPP}
RcorrNPcoord                 <-> Lcorrcoord{catpar=ilNP}




RNNcompounds                      <-> LNNcompounds
RVNcompounds                      <-> LVNcompounds

Radjunctvar1                      <-> Ladjunctvar1
Radjunctvar2                      <-> Ladjunctvar2
Radjunctvar2{adjunctpar=benfactNP}<-  Ladjunctvar3       WBONUS -1   
Radjunctvar3                      <-> Ladjunctvar3
Radjunctvar3                      <-  Ladjunctvar2

RcardtoDETP                       <-> LcardToDETP
Rcard1                            <-> Lcard1
Rcard2                            <-> Lcard2
Rcardnp                           <-> Lcardnp



(* rules are listed partially alphabetically, partially by rule class *)
(* Joep: Ik heb hier een kleiner dan teken weggehaald ! *)

RAanActive                        <-> LAanactive
RActive{ voicepar = Active}       <-> LActive
RActive{ voicepar = Active}       <-  LDoorActive         WBONUS -1
RActive{ voicepar = Active}       <-  LAanActive          WBONUS -1
RActive{ voicepar = Passive}      <-  LPassive            WBONUS -1
RDoorActive                       <-> LDoorActive
RPassive{ voicepar = Passive}     <-> LPassive
RPassive{ voicepar = Active}      <-  LActive             WBONUS -1
RPassive{ voicepar = Active}      <-  LDoorActive         WBONUS -1
RPrepppropvoice                   <-> LActive
Radvppropvoice                    <-> Lactive
Rdooractive,
Raanactive                        <-  Lpassive             WBONUS -1

RBADJTOSUB1,
BNOUNTOSUBNOUN,
RBPROPERNOUNtoSUBNOUN,
RBAdvtoSUB,
RRadvtosub,
Rpreptosub,
RBVERBTOSUB                       <-> Lbtosub


RCLOSEDADJPPROPprepobj,
RCLOSEDADJPPROPsubstitution,
RCLOSEDNPPROPprepobj,
RCLOSEDNPPROPsubstitution,
RCADVPPsubst,
Rcvppsubst,
RDIRCLOSEDPREPPPROP,
ROCPPPsubst,     (* removed from Lopensubst MJS *)
RLCPPPsubst,
RPropsubst13   (* graag-like *),
RPropsubst14   (* toevallig- happen*),
RSENTENCEcompl,
Rsentenceomtecompl,
RSENTENCEextrapos,
RSENTENCEprepobj,
Rsadjsentsubst,
RSentencesubj                     <->  Lclandsentsubst

RSentenceldisloc                  <->  Lpropldlsubst

Rsadjsentsubst,
RSENTENCEcompl,
Rsentenceomtecompl,
RSENTENCEextrapos,
RSENTENCEprepobj,
RSentencesubj                     <-  Lpropldlsubst

RDIROPENPREPPROPsubstitution,
RLOCOPENPREPPROPsubstitution,
ROADVPPsubst,
ROOPPPsubst,
ROPENADJPPROPprepobj,
ROPENADJPPROPsubstitution,
ROPENNPPROPprepobj,
ROPENNPPROPsubstitution           <-> Lopensubst

(* misschien de laatste twee samenklappen *)

Radvtoformula,
Rpreptoformula,
RClauseformation1,
RClauseformation2,
RClauseformation3,
RClauseformation4,
RClauseformation5,
RClauseformation6,
RClauseformation7                 <-> LClOrFormula   (* ILname changed MJS *) 


Rsadjemptysubst,
REmptysubstitution1,
REmptysubstitution2,
REmptysubstitution3,
REmptysubstitution4,
RPrepEmptySubst1,
RPrepEmptySubst2,
Rdiremptysubst1,
RIdEmptysubstitution1
                                  <-> Lemptysubst
REmptysubstitution5,
Rzeemptysubst
                                  <-  Lemptysubst

Rwilinsertion                     <-> Lpolite

RMooddetermination1               <-> Ldeclmain  (* ILname changed MJS *) 
   (*declarative main clause, finite, indicative *)

RMood3                            <-> Lwhmain
 (*wh main clause, finite, indicative *)

RMood4                            <-> Lynmain      
       (*yes-no-interrogative main clause, finite, indicative *)

RMood6                            <-> Lwhsub
(*wh subordinate clause, finite, indicative *)

RMood7, Rmood8, Rmoodpoliteimp    <-> Limp  (* ILname changed MJS *) 
   (*imperativemood sg and t-form main clause, finite, imperative*)

Rmood7s, Rmood8s, Rmoodpoliteimps <-> Limps

Rgelievemood{gelievepar=gelieve}  <-> Lgelievemood
Rgelievemood{gelievepar=ugelieve} <-> Lgelievemood

Rlatenmood                        <-> Ladhort

Rclosedteinf,
Rmoodclosedinf                    <-> Lclosedinf

Rclosedteinf,
Rmoodclosedinf                    <-  Ldeclsub  WBONUS -1

Rclosedteinf,
Rmoodclosedinf,
Rmood2                            <- Lpossing  WBONUS -1

Rclosedteinf,
Rmoodclosedinf                    <-  Laccing   WBONUS -1

Rmoodopenteinf                    <-> Lopendeclinf
Rmoodopenteinf                    <-  Lopening  WBONUS -1
Rmoodopenteinf                    <-  Ldeclsub  WBONUS -1
                                      
Rmood2  (* subordinate declarative indicative  *)
                                  <-> Ldeclsub
Rmood2                            <-  Lopendeclinf WBONUS -1

Radjmood1                         <-  Ldeclsub     WBONUS -1

Radjmood1                         <-  Lclosedinf   WBONUS -1

Rmood2                            <-  Lclosedinf,
                                      Laccing      WBONUS -1

Rmood5                            <-> Lynsub

Radjmood2                         <-  Lfinrel      WBONUS -1

Rmoodfinrel                       <-> Lfinrel

Rmoodinfrel                       <-> Ltoinfrel
Rmoodfinwhmod                     <-> Lfinwhmod

Rmoodopenomteinf                  <-> Linjunsub
Rmoodopeninf                      <-> Lopendeclinf
Rmoodopenomteinf                  <-  Lopendeclinf WBONUS -1 (* 20-4-89 MJS *)
Rmoodopeninf                      <-  LopenIng     WBONUS -1
Rmoodclosedinf                    <-  LClosedvpprop

Rmoodpastpart                     <-> Lpastpart

Rmoodprespart                     <-> Lprespart

Rmoodfinrel                       <-  Lpastpart, Lprespart

ROPENNPPROPformation,
RCLOSEDNPPROPformation            <-  Lopendeclinf

ROPENNPPROPformation              <-> Lopennpp
RCLOSEDNPPROPformation            <-> Lclosednpp
RCLOSEDNPPROPformation            <-  Lclosedinf WBONUS -1

Radjmood2,
Rpppmood1,                         
Radvppmood1                       <-> Lopenxpp

Rmoodfinrel                       <-  Lopenxpp    WBONUS -1

Rmoodcvpp                         <-> Lclosedvpprop

Radjmood1,
Rpppmood2,                         
Radvppmood2                       <-> Lclosedxpp

Rmood2,
Rclosedteinf                      <-  Lclosedxpp  WBONUS -1

RpppNPmod                         <-> LPPPNpMod
RpppAdvpmod                       <-> LPPPAdvpMod
RppNPmod                          <-> LPPNPmod
RPPADVPmod                        <-> LPPADVPmod


Rconjsent1,
Rconjsent2,
Rconjsent3,
Rconjsent4,
Rconjsent6,
Rconjsent5                        <-> Lconjsent


RADJpunc, 
RpppNoPunc, 
RadvppNoPunc,
RnppNoPunc,
Rpunc0                            <-> Lpunc0

Rpunc1                            <-> Lpuncq
Rpunc2                            <-> Lpuncexclam
Rpunc3                            <-> Lpuncdot


Ridentformation1                  <-> LidentNPandPerspro (* ILname changed MJS *) 
Ridentformation2                  <-> LidentNPandPerspro (* ILname changed MJS *) 
Ridentformation3                  <-> LidentWhsg  (* ILname changed MJS *) 
Ridentformation4                  <-> LidentWhpl  (* ILname changed MJS *) 
Ridentformation5                  <-> Lident2NPandSent (* ILname changed MJS *) 
Ridentformation6                  <-> Lident2NPandSent (* ILname changed MJS *) 

RReciprocalsubst1{antecedent=X1}  <-> Lreciprosubstsg{antecedent=X1} ,
                                      Lreciprosubstpl{antecedent=X1} 

Rrelmarking1
  {indexpar=X1 xpmoodpar=relativexpmood},
Rrelmarking2
  {indexpar=X1 xpmoodpar=relativexpmood},
Rrelmarking3
  {indexpar=X1 xpmoodpar=relativexpmood},
Rrelmarking4
  {indexpar=X1 xpmoodpar=relativexpmood}
                                             <-> Lrelmarking{indexpar=X1}

Rrelmarking1
  {indexpar=X1 xpmoodpar=topicxpmood},
Rrelmarking2
  {indexpar=X1 xpmoodpar=topicxpmood},
Rrelmarking3
  {indexpar=X1 xpmoodpar=topicxpmood},
Rrelmarking4
  {indexpar=X1 xpmoodpar=topicxpmood}
                                             <-> Ltopicmarking{indexpar=X1}



RNPPROPformation                  <-> LstartNPPROP

RSubadjToSubadv                   <-> LAdjToAdvDeriv
Rordderiv                         <-> Lordinalderiv
Rnoundim                          <-> Lnoundim
Rpndim                            <-> Lpndim

RstartADVP0                       <-> Lstartxp100

RstartADVP1,
Rstartprepp120,
RIdStartPrepP1,
RIdStartPrepP2,
RIdStartPrepP3,
RIdStartPrepP4
                                  <-> Lstartxp120

RSTARTADJPPROPFORMATION000,
Rstartpreppprop000,  
RSTARTVPPROP000                   <-> Lstart0

RSTARTADJPPROP100,
RIdDeriv1,
RIdDeriv2,
RIdDeriv3,
RIdDeriv4,
RIdDeriv15,
(* RIdStartVpprop1VAR2ID0, *)
Rstartpreppprop100,
RSTARTVPPROP010a,
RStartverbpprop010b,
RSTARTVPPROP100,
Rstartadvpprop100,            
Rstartadvpprop010
                                  <-> Lstart1

RSTARTADJPPROP120,
RSTARTADJPPROP012,
rstartpreppprop120,
RSTARTVPPROP012,
RSTARTVPPROP120,
Rstartadvpprop120,
RIdDeriv5,
RIdDeriv7,
RIdDeriv8,
RIdDeriv9,
RIdDeriv12,
RIdDeriv13,
RIdDeriv14,
RIdStartPrepPForm1,
RIdStartPrepPForm2
                                  <-> Lstart2
RSTARTADJPPROP123,
RSTARTVPPROP123,
RIdDeriv6,
RIdDeriv10,
RIdDeriv11
                                  <-> Lstart3

(* lowering of bonus in case translation of into some element
of a different category or of a different thetavp is accounted for in the
lexicon
*)

RStartexistential1                 <-> Lstartexist

RSidStartVpprop120                 <-> LSidStart2   (* Andre 6-6-88 *)
RSidStartVpprop123                 <-> LSidStart3   (* Andre 6-6-88 *)

Rpppsubstitution1,
rpppsubstitution2,
RSubstitution1   (* NP in VP *),
Rsubstitution2   (* NP in S *),
Rsubstitution3   (* NP in VARPREPP in VP *),
Rsubstitution16,
Rsubstitution17,
Rsubstitution18,
RIdSubstitution1,
RIdSubstitution2,
RIdSubstitution3,
RIdSubstitution4,
RIdSubstitution5,
RIdSubstitution6,
RsubstenNP1,
RsubstenNP2,
Rsadjsubstitution1,
Rbigprosubst,
RIdPPPSubstitution1,
RIdPPPSubstitution2
                                              <-> Largsubst

Rsubstitution4,   
Rsubstitution4a,
rsubstitution4b,
Rsubstitution7,
rpppsubstitution3       (* PREPP *),         
rpppsubstitution4, (* ADVP *)
RSubstitution5   (* er *),
Rsubstitution6   (* daar, hier *),
Rsubstitution8   (* ADVP under S *),
Rsubstitution9   (* sentadv *)                <-> Ladvsubst


Rprepprosentsubst, Rsoprosentsubst,
RSubstitution10  (* PROSENT *)                <-> Lprosentsubst

Rposvar                           <-> LPosVarIntro
Rnegvar1,
Rnegvar2{relpar=objrel},
Rnegvar2{relpar=indobjrel},
Rnegvar2{relpar=prepobjrel},
Rnegvar2{relpar=predrel},
Rnegvar2{relpar=locargrel},
Rnegvar2{relpar=dirargrel},
Rnegvar2{relpar=vpadvrel},
Rnegvar2{relpar=agvpadvrel},
Rnegvar2{relpar=byobjrel},
Rnegvar3{relpar=tempadvrel},
Rnegvar3{relpar=preadvrel},
Rnegvar3{relpar=postsubjrel},
Rnegvar3{relpar=locadvrel},
Rnegvar3{relpar=erposrel},
Rnegvar3{relpar=subjrel},
Rnegvar3{relpar=shiftrel}
                                 <-> LNegVarIntro

RSUBSTITUTION11  (* wel, POS *)   <-> Lposintro

RSubstitution12  (* NEG *),
RSubstitution13,
Rsubstitution14                   <-> Lnegintro

Ridentsadvvar, Ridentspreppvar,
Rexistsadvvar, Rexistspreppvar,
Rnppsadvvar, Rnppspreppvar,
Rpppsadvvar, Rpppspreppvar,
Radvppsadvvar, Radvppspreppvar,
Radjcauspreppvar, Radjcausadvpvar,
Rsadvvar,
Rspreppvar                       <-> Lsadvvar

Ridentconjsvar, ridentconjsvar2, Ridentconjsvar3,
Rexistconjsvar, rexistconjsvar2, Rexistconjsvar3,
Rnppconjsvar, rnppconjsvar2, Rnppconjsvar3,
Rpppconjsvar, rpppconjsvar2, Rpppconjsvar3,
Radvppconjsvar, radvppconjsvar2, Radvppconjsvar3,
Radjppconjsvar, radjppconjsvar2, Radjppconjsvar3,
Rconjsvar3,
Rconjsvar2,
Conjsvar                         <-> LconjSvar



Rconjsentsubst1                      <-> LconjsentsubstMiddle
rconjsentsubst2,      
Rconjsentsubst4                  <-> Lconjsentsubstinitial
Rconjsentsubst3                  <-> LconjsentsubstFinal


Rvpadv                           <-> Lvpadv
Ragvpadv1,
Ragvpadv2,
Ragvpadv3                        <-> Lagvpadv


Rvppreppvar                      <-> Lvppreppvar

RADVPsubstitution1,
RADVPsubstitution2,
Rppsubstitution1,
Rppsubstitution2,
Ridppsubstitution1,                
Ridppsubstitution2,
Ridppsubstitution3
                                 <-> LNPinPPsubst
Rppsubstitution3,   
Rppsubstitution4                  <-> LnoNPinPPsubst 

RUtt1                             <-> LUtt1     (* sentence *)
RUTTADJP, RUTTADVP, RUttPrepp     <-> LUttAorPP (* ILname changed MJS *) 
RuttNp{casespar=[nominative]}     <-> LUttNPnom
RuttNp{casespar=[dative]}         <-> LUttNPdat
RuttNp{casespar=[accusative]}     <-> LUttNPacc
RUttExclam                        <-> LuttExclam
RAddexclam                        <-> LaddExclam

Rlocadvvar, Rlocpreppvar,
Ridentlocadvvar, ridentlocpreppvar,
rexistlocadvvar, rexistlocpreppvar,
rppplocadvvar, rppplocpreppvar,
rnpplocadvvar, rnpplocpreppvar,
radvpplocadvvar, radvpplocpreppvar,
 Radjlocadvpvar, Radjlocpreppvar   <-> Llocadv
(* kan opgesplitst worden???*)


RADJVOOROBJMOD                     <-> Ladjvoorobj

RADJMOD1                           <-> Ladjmod
RADJOMTEMOD1                       <-> Ladjomtemod

RADJDEGREEMOD1,
RADJDEGREEMOD2a,
RADJDEGREEMOD2b                    <-> Ladjdegreemod



RADJVOICEdefault                   <-> Lactive

RADJSENTENCESUBSTITUTION1,
RADJSENTENCESUBSTITUTION2,
RADJSENTENCESUBSTITUTION3,
RADJsentenceomtecompl,  
RADJsentenceomtesubj               <-> Lclandsentsubst

RADJPFORMULAFORMATION1             <-> Lclorformula

RADJEMPTYSUBST1 (* LEVEL*),
RADJEMPTYSUBST2 (* LEVEL*),
RADJEMPTYSUBST3 (* LEVEL*),
RADJEMPTYSUBST4 (* LEVEL*)         <-> Lemptysubst (* LEVEL *)

Rnppsubst1,
Rpppsubstitution5,
Radvppsubst1,
RADJSubstitution1, (* LEVEL *)
RADJSubstitution2, (* LEVEL *)
RADJSubstitution3  (* LEVEL *)     <-> Largsubst  (* LEVEL *)

RADJSubstitution4  (* LEVEL *)     <-> Ladvsubst  (* LEVEL *)

RADJEMPTYsubjSUBST (* LEVEL *)     <-> Ladjemptysubjsubst (* LEVEL *)

RHELPEMPTYsubjSUBST (* LEVEL *)    <-> Ladjhelpempty (* LEVEL *)
(* auxiliary *)

RQTOQP1,
RQTOQP2                            <-> Lqtoqp
(* RQTOQP3 *) 


RADVPDEGREEMOD1,
RADVPDEGREEMOD2,
RADVPDEGREEMOD3                    <-> Ladvpdegreemod

RADVPvoorobjmod,
RQPvoorobjmod                      <-> Lxpvoorobjmod


RADVPomcomplmod,
RQPomcomplmod                      <-> Lxpinfcomplmod

RADVPsubstitution3,
RQPsubstitution2                    <-> LxpVOOROBJmodsubst

RADVPCOMPARISONcomplmod            <-> Ladvpcomparcomplmod

RQPCOMPARATIVEcomplmod             <-> Lqpcomparcomplmod
RQPSUPERLATIVEcomplmod             <-> Lqpsuperlcomplmod

RADVPamountmod                     <-> LADVPamountmod
RQPamountmod                       <-> LQPamountmod



RADVPsubstitution4,
RQPSubstitution1 (* LEVEL *)       <-> LTHANPsubst (* LEVEL *)



RBWHPROTOWHPRO,
RBINDEFPROTOINDEFPRO,            
RBPERSPROTOPERSPRO                 <-> Lbtopronoun (* LA 19-10-1989 *)

Rbtobigpro                         <-> Lbtobigpro

RBPROPERNOUNTOPROPERNOUN           <-> LBPNtoPN

RSUBNOUNTONOUN1                    <-> Lsubnountonoun1
RSUBNOUNTONOUN2                    <-> Lsubnountonoun2

RCNFORMATION1                      <-> LCNformation1
RCNFORMATION3                      <-> LCNformationcountsing
RCNFORMATION2,
RCNFORMATION4                      <-> LCNformationmassplur


RNOUNargmod1                       <-> LNOUNargmod1  
RNOUNargmod2                       <-> LNOUNargmod2

RNPargmodsubst1                    <-> LNPargmodsubst1 (* LEVEL *)
RNPargmodsubst2                    <-> LNPargmodsubst2 (* LEVEL *)


RCNMODRELSENT1,
RCNMODANTEREL1,
RCNMODADJP, 
RCNMODADVP1, 
RCNMODADVP2, 
RCNMODPP                           <-> LCNmod

RCNmodinfrel                       <-> LCNmodinfrel

RCNMODbareNP                       <-> LCNmodbareNP

RCNMODNUM                          <-> LCNmodnum

RnonCNMODRELSENT1                  <-> LnonCNmod

(*
RnonCNMODRELSENT2,
RnonCNMODRELSENT3,
RnonCNMODRELSENT5
*)

RCNMODPOSS1,
RCNMODPOSS2,
RCNMODPOSS3                        <-> LCNmodposs

RCNspecProperName                  <-> LCNspecPN


RdatumNP                           <-> LdatumNP
Rdatumyear                         <-> Ldatumyear
Rdatumday                          <-> Ldatumday
Rdatumdayname                      <-> Ldatumdayname

RNPFORMATION1                      <-> LNPformation1
RNPFORMATION2                      <-> LNPformation2
RNPFORMATION3,                     
RNPFORMATION3a                     <-> LNPformation3 (* def EN-NP *) 
RNPFORMATION4a,  
RNPFORMATION10                     <-> LNPformationindef
RNPFORMATION4,
RNPFORMATION5                      <-> LNPformationdef
RNPFORMATION6                      <-> LNPformation6
RNPFORMATION7,                     
RNPformation8                      <-> LNPformationpronoun (* LA 19-10-1989 *)
RNPFORMATION9                      <-> LNPformation9
RNPFORMATION11,
RNPFORMATION11a                    <-> LNPformation11
RNPFORMATION12                     <-> LNPformation12
RNPFORMATION13                     <-> LNPformation13
RNPFORMATION14                     <-> LNPformation14
RNPFORMATION17{controllerpar=X1}   <-> LNPformation17{controllerpar=X1}

RNPpartitiveformation1,
RNPpartitiveformation2             <-> LNPpartitiveformation

RNPapposition                      <-> LNPapposition

RNPWHMODPOSS,
RNPPROPERNOUNMODPOSS,
RNPINDEFMODPOSS                    <-> LNPmodposs

RNPMODADVP                         <-> Lnpmodadv

DETDERIVATION1                     <-> Ldetderivation

DETPFORMATION1,
DETPFORMATION2,
DETPFORMATION3,                 
DETPFORMATION3a,                 
DETPFORMATION4                     <-> Ldetpformation

RDETPpartitiveformation            <-> Lpartdetpform

(* testNP removed, 18-AUG-1988, MJS *) 
>
