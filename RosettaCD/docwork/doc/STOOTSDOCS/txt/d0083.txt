$FL 12
$PL 274,16
$LD 5
$OP SH=S,HY=1,la=E,ph=r,pn=c,AN=C
$NP 
$UC _
$SC &%
$AC @
$XC ~`

   

            Project ROSETTA : Machine Translation


            Topic     :  Rosetta3.general

    ---------------------------------------------------------







         Title        :  THE PRINCIPLES OF ROSETTA3 AND HOW TO VIOLATE THEM

         Author       :  Jan Landsbergen









         Doc.Nr       :  0083

         Date         :  86/05/28

         Status       :  approved

         Supersedes   :  ...

         Distribution :  project

         Clearance    :  Philips

         Keywords     :  principles, robustness
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Copyright (c) Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 0083                    date:86/05/28
$LD 4
$Np 1
$c1 Introduction
$ The isomorphic M-grammar method of Rosetta can - in retrospect -
be seen as a particular application of a number of basic principles.
In this document I will try to formulate these principles separately
and check whether the systems that we have made or that we
will make will obey or violate them.$
$ I think there is a fair amount of agreement about the principles
of Rosetta, but there may be less agreement about the circumstances
in which they can be violated. At this moment important choices
about the future capabilities of Rosetta3 have to be made ; I
hope that this paper will be helpful in the discussions about
these choices.$
$c1 The principles
The basic principles of Rosetta are:

$ P1. Compositionality Principle: the languages are described by means
of compositional grammars with basic expressions and syntactic
rules that have a well-defined meaning. The way in which these
grammars relate form and meaning of sentences should conform to
our intuitions.$

$ P2. Compositionality Principle of Translation: two sentences are
considered translations of each other if they are derived from
corresponding basic expressions by applying corresponding rules.
Here "corresponding" means "with the same meaning". The translation
relation defined in this way should conform to our intuitions
about adequate translations.$

$ P3. Principle of One Grammar: each language is described by one
grammar, from which an analysis and a generation component are 
derived which are each other's reverse.$

$ P4. Principle of Interlinguality. There is an intermediate
language IL into which all analysis components translate and
from which all generation components are able to translate.
The IL expressions are meaning representations.$

$ An MT system based on isomorphic M-grammars in the strict sense
obeys principles P1 - P4. There are other approaches to machine
translation in which only some of the principles are obeyed. A few
examples:$
$ - A transfer system SL --> TL with compositional grammars for
SL and TL and with a transfer component that maps SL derivation
trees onto TL derivation trees, obeys P1. The mapping may be
defined by means of arbitrarily complex operations on derivation trees.$
$ - A transfer system as described above, but with "local transfer"
of syntactic rules and basic expressions, is in accordance with
both P1 and P2.$
$ - An interlingual system with intensional logic as its interlingua
obeys P4.$
$c1 Motivations for the principles
$ Thinking about the principles, one soon discovers that they stem from
more basic ones, such as:$
$ - in language processing machines a clear distinction should be made
between knowledge of language and knowledge of the world (P1 - P4 
presuppose this),$
$ - an MT system should be based upon explicit grammars of SL and TL and
translate correct SL sentences into correct TL sentences,$
$ - translation should be meaning preserving, so in MT systems we need
grammars with a firm semantic base,$
$ - a preference for modularity (or: "locality"). 
$ Without doubt these principles can be derived from even more basic 
principles, but as this is a project on MT and not on methodology or
philosophy, I will not delve deeper, but instead make a few
comments on each principle separately.$

$ For motivations behind principle P1, I refer to the literature on
Montague Grammar (especially Partee - Compositionality, 1984).$

$ Principle P2 is a way to express - in a constructive way - 
the idea that translation should not only preserve the meaning in the
model-theoretical sense, but also the way in which the meaning is 
derived.$

$ For P3, the One Grammar Principle, the main motives are:$
$ - the idea that there is one - "objective" - notion of language,
independent from processes for analysis and generation. $
$ - a preference for symmetry. Notice that P3 expresses not only
symmetry between analysis and generation, but together with P4
it also implies the symmetry of the (possible) translation
relation.$
$ - economy of development: by making one grammar we develop two
components.$

$ For P4, the Principle of Interlinguality, the motives are:$
$ - theoretical elegance: it is nice to have a level of  representation
that is "equidistant" to all languages involved. 
This is related to the 
before-mentioned esthetic preference for symmetry and is without
doubt rather subjective. $
$ An approach with meaning representations as interlingua tends to be
more transparent than a syntactic approach. It is clearer which
decisions have to be made in analysis and which in generation.$
$ - Economy of development: the well-known "n*(n-1) versus 2*n" argument.
This argument holds only if one can prove that the complexity
and the quality of the mono-lingual components of an interlingual
system are comparable with the complexity and the quality of the
bi-lingual components of direct or transfer systems. The fact that the
argument also seems to hold 
for systems with a natural language as IL illustrates
its weakness.$
$ - There are applications for which an IL is indispensable, e.g. an
electronic mail system with terminals that translate from and into the 
user's own language. A European Teletext system is another example.$
$ I think that only the last argument is strong, for a project with
such an application as the ultimate goal. If the goal is to build a
set of bi-lingual systems, an approach with lexical transfer may be more
economical, especially if one has to make use of already existing
- bi-lingual - dictionaries.$

$ In conclusion, the best motivation for embracing principles P1 - P4
is that they fit so nicely together and that they are good guidelines for the 
development of both powerful and transparent translation systems.$
$c1 Violations of the principles
$ A dogmatic application of the principles might result in interesting 
papers and dissertations, but presumably in only very small translation
systems (given a limited amount of time and personnel). In the actual
implementation of Rosetta2 the principles are often violated and the same
is to be expected for Rosetta3. This does not imply that the principles
are useless. They are important guidelines for the construction of the
systems. In the first place the principles constitute - partially -
our method of translation, but they are also an important help for
making difficult choices. If a particular phenomenon can be handled
in two ways (not only in principle, but also in practice), of which
one is in accordance with the principles, the choice will be easy. The
situation is more difficult if we have to choose between _not_
handling a particular phenomenon or handling it by violating one or
more principles. Some guidelines for this will be given in section 5.
Here I give a few examples of the way in which the principles have been 
or may be violated.$

$ P1. In many cases we are not sure about the meaning of basic expressions
and/or syntactic rules. So it is hard to judge whether the Compositionality
Principle is obeyed. In Rosetta2 there are various rules that clearly
violate P1, e.g. the substitution rules for WH-NPs. The robustness
measures for unknown words and ungrammatical sentences are also in 
conflict with P1.$

$ P2. It is inevitable that the Compositionality Principle of Translation
is violated for many basic expressions. Corresponding words of two languages
often have meanings that are a bit different. Translation is not possible
without some tolerance in this respect. One should be less tolerant
as far as the formal semantic aspects are concerned, e.g. the meaning of 
the syntactic rules, but even there violations may occur. If one is
not sure about obeying P1, one cannot be sure about P2 either.$

$ P3. The Principle of One Grammar can be violated (and is violated in 
Rosetta2) for two reasons. First, rules or basic expressions, of which the only
effect is the enlargement of the 
set of TL paraphrases for one IL expression, can be eliminated from the
generation component (E.g. 
according to the grammar both "u bent" and "u is" are
correct, but  "u is" is not generated).
 Second, the analysis component can be made more
tolerant than the grammar prescribes, because of robustness reasons
(E.g. the grammar of English prescribes a rather strict order of time
adverbials and place adverbials. In analysis this order is not checked).$

$ P4. The Principle of Interlinguality has not been violated deliberately
in Rosetta2. The system can be called for each of the four language pairs.
Of course, the fact that only two languages were involved helped a lot.
Furthermore the interlinguality of the transfer dictionaries has been achieved
by having an E-D dictionary that is simply the reverse of the D-E 
dictionary. This is in accordance with P4, but yields bad
E-D translations in some cases. $
$ If in Rosetta3 we have small Spanish dictionaries next to the large Dutch and
English dictionaries, we violate P4. If we supplement the dictionary
with fake Spanish words, principle P4 is obeyed.$
$ If we decide that Rosetta3 D-E is based on Van Dale N-E and that
Rosetta3 E-D is based on Van Dale E-N, we violate P4.$
$c1 Subdivision of a Rosetta system with respect to the principles
$ With respect to the principles, we may distinguish the following
parts in a version of Rosetta:$

$ 1. A pure kernel, which is in accordance with all principles, for
all three languages (but
with a bit of tolerance with respect to P1 and P2.).$

$ 2. Additional parts in the analysis components, which are in
conflict with principle P3. The rules and lexical entries that are
added are in itself correct, they are not in conflict with principles
P1, P2, P4 and should be distinguished from the robustness measures
that will be discussed below.$
$ Examples are: infrequent words synonymous to words that are already
in the lexicon (of the kernel), a second possibility to form the
plural of a noun, rules for more or less obsolete constructs which
are equivalent to constructs already in the kernel.$
$ Instead of speaking of an additional part in the analysis component,
it is conceptually more correct 
to speak of an eliminated part of the generation component (the
eliminated part would only increase the number of paraphrases).
The reason to stick to the earlier formulation is that we describe here
the parts of an actual version of Rosetta.$

$ 3. Anisomorphic parts; additions to grammars which are in itself
correct, but which violate P2, because there are no corresponding correct parts
in some other grammar. It may occur that we are able to handle a
phenomenon in two languages, but not (yet) in the third one. In the 
grammar of the third language the phenomenon is handled by a robustness
rule (cf. 4) or is not handled at all.$
 
$ 4. Robustness parts; additions to the grammars which are in conflict
with principle P1. In general they are also in conflict with 
P3, as robustness measures tend to be asymmetric. These additions
should cope with phenomena that cannot (or not yet) be handled
adequately by the system. Examples are: unknown words and ungrammatical
constructions (w.r.t. the system's grammar). If two grammars contain
anisomorphic rules as mentioned under 3., the third grammar may
contain a corresponding robustness rule.$

$ 5. Transfer parts, additions to the system for particular language
pairs, which are in conflict with principle P4.$
$ Additions like this would change Rosetta into a transfer system. Here
transfer system should be understood in a somewhat more general way
than is usually the case. Usually the bi-lingual transfer part
is supposed to be located "between" the SL-oriented analysis part
and the TL-oriented generation part. A more general definition of a
transfer system is: a system consisting of an SL-oriented analysis component
and a TL-oriented generation component, in which the analysis component is
"enriched" with a TL-dependent part and the generation component with
an SL-dependent part. The interface language between analysis and
generation components consists of a general part and an SL-TL
dependent part.$
$c1 Guidelines for the development of Rosetta3
$ For the development of Rosetta3 I propose the following guidelines
with respect to the additions mentioned under 2, 3, 4 and 5 in the
previous section.$

$ ad 2. It is allowed to build analysis components that are a bit
more powerful than the corresponding generation components for
reasons as mentioned before. The documentation should indicate what
these additions are or - even better -: indicate what part has been
eliminated from generation.$
$ Decisions about these additions can be left
to the writer of the part of the grammar in which they occur.$

$ ad 3. Anisomorphic additions to two of the three grammars are allowed if $
$ - their status is indicated in the documentation,$
$ - the amount of effort needed for taking the corresponding
robustness measures in the third grammar is relatively small (cf. ad 4),$
$ - there is some confidence in the correctness of the analysis
for all three languages and therefore in the possibility to
replace the robustness rules in the third grammar by correct rules
in the future.$
$ Decisions about these additions should be made collectively 
by the writers of the
three (sub)grammars.$
$ As the actual writing of the grammar rules is done after setting up
"isomorphic schemes", it may be a bit misleading to speak of additions
in this case. The isomorphic schemes may turn out to be anisomorphic,
when the details are considered. Then a difficult choice has to be
made between trying to improve the scheme, accepting the anisomorphy or not
handling the phenomenon at all. A similar remark can be made for the robustness
measures. $

$ ad 4. Robustness measures as mentioned under 4 may be taken
under the following conditions:$
$ (i) They should 
fit into the existing formal framework. (the only exception may
be the lay-out component)  $
$ (ii) The additions should be clearly separated from the original kernel
both in the documentation and in the implementation (e.g. by changing
the status of the constructed S-tree or D-tree).$
$ (iii) The additions should only enlarge the set of possible translations
and not affect the translations of the kernel.$ 
$ (iv) It should be signalled to the user which translations are produced
by making use of robustness measures and therefore are less reliable.$
$ (v) The amount of effort devoted to robustness measures should be
relatively small.$
$ Robustness measures obeying these conditions may be taken by 
sub-groups or even individuals that are responsible for the relevant 
parts of the system. Robustness measures that do not obey the conditions
should be discussed in a project meeting. (a Rosetta2 example: the measures
to speed up the surface parser after a number of seconds do not obey (iii) )$ 

$ ad 5. Transfer parts should be excluded in the period until 1988.
After finishing the D-E and D-S version we may reconsider the situation
in two respects:$
$ - we may decide to use different dictionaries in D-E and E-D (cf. the
discussion in R0057),$
$ - for "publicity reasons" we may decide to invest some extra effort
in upgrading a Rosetta3 version for one language pair (if we start
immediately with 
the development of Rosetta3+ D-E, the upgrading may be part of this).$

$ In conclusion a few words about the status of Spanish in the 
Rosetta3 phase of the project. These remarks are not made to _create_
an exceptional position for Spanish, but to _signalize_ this position in
order to be aware of the dangers.$
$ Probably Spanish will be the language for which most robustness
measures must be taken, for the following
reasons:$
$ - Among the project members Spanish is the least familiar language of the
three.$  
$ - We have no experience with Spanish in Rosetta.$
$ - Rosetta3 will be demonstrated for Dutch and English,
but hardly for Spanish, because of the dictionaries. It would be
unfortunate if the capabilities of the demonstrated versions were
weaker than necessary because of Spanish (N.B. assuming that this 
weakness is not caused by fundamental problems, but to 
lack of time). $
$ - For Spanish only a generative component is constructed which makes
it tempting to have robustness additions corresponding to anisomorphic
parts in the other grammars.$

$ Especially for Spanish we have to keep in mind the conditions on
robustness measures that were mentioned before, esp. (v).
It should be avoided that the Spanish grammar consists mainly of
robustness rules. In case of lack of time it may be preferable
not to write certain parts of the Spanish grammar at all.$

