I <Neutral,false>
: $IBPERSPROKEY
: $M_PRONOUN1014501 "masculine",
  $M_PRONOUN1014502 "feminine"
: BPERSPRO(
{person:}                                1,
{number:}                                singular,
{gender:}                                omegagender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

a <Consonant,false>
: $AARTKEY
: $M_INDEFARTICLE,
  $M_INDEFARTICLE
: ART(
{definite:}                              indef,
{possnumbers:}                           [ singular],
{posscomas:}                             [ count]
);

a_few <Neutral,false>
: $S_AFEWBDETKEY
: $M_BDET143250
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

a_little <Neutral,false>
: $S_HQ_ALITTLE
: $M_HQ_EENBEETJE,
  $M_HQ_WAT,
  $M_Q150100
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass],
{mood:}                                  nowh,
{thanas:}                                omegacompl,
{hop:}                                   FALSE
);

a_little <Neutral,false>
: $S_ALITTLEBDETKEY
: $M_BDET143250
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

all <Neutral,false>
: $S_ALLBDETKEY
: $M_ALLKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Aquant
);

an <Vowel,false>
: $AARTKEY
: $M_INDEFARTICLE,
  $M_INDEFARTICLE
: ART(
{definite:}                              indef,
{possnumbers:}                           [ singular],
{posscomas:}                             [ count]
);

any <Neutral,false>
{syntquant: What about `any' as translation of `elk',
syntquant: `anyone' for `iedereen' ?? MJS}
: $ANYBDETKEY
: 
: BDET(
{req:}                                   [ negpol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

anybody <Neutral,false>
{req: vgl. someone HS
possnietNP: MJS, 3-10-88}
: $S_PRONOUN10315
: $M_PRONOUN1031701
: INDEFPRO(
{req:}                                   [ negpol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

anybody <Neutral,false>
{NPhead: Probably should get different translation than `every
NPhead: e.g. `willekeurig iemand' of `(iemand) wie ook maar'
req: MJS; should be taken care of in
req: mantics: only with modal or imp}
: $S_PRONOUN10330
: $M_PRONOUN1032101
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

anyone <Neutral,false>
{req: vgl. someone HS
possnietNP: MJS, 3-10-88}
: $S_PRONOUN10316
: $M_PRONOUN1031701
: INDEFPRO(
{req:}                                   [ negpol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

anyone <Neutral,false>
{NPhead: Probably should get different translation than `every
NPhead: e.g. `willekeurig iemand' of `(iemand) wie ook maar'
req: MJS; should be taken care of in
req: mantics: only with modal or imp}
: $S_PRONOUN10330
: $M_PRONOUN1032101
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

anything <Neutral,false>
{possnietNP: MJS, 3-10-88}
: $S_PRONOUN10311
: $M_PRONOUN1031901
: INDEFPRO(
{req:}                                   [ negpol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  FALSE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

anything <Neutral,false>
{req: MJS; see everyone}
: $S_PRONOUN10339
: $M_PRONOUN1033801
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

both <Neutral,true>
: $S_BOTHBDETKEY
: $M_BOTHKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Omegaquant
);

each <Neutral,false>
{NPhead: ????
animate: ?}
: $S_PRONOUN10322
: $M_PRONOUN1032201
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

each <Neutral,false>
: $S_EACHBDETKEY
: $M_EACHKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{posspred:}                              FALSE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Aquant
);

each_one <Neutral,false>
{NPhead: ????
animate: ?}
: $S_PRONOUN10322
: $M_PRONOUN1032201
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

each_other <Neutral,false>
{NPhead: in Dutch: =elkaarkey !!}
: $EACHOTHERKEY
: $M_PRONOUN1029001
: RECIPRO(
{antecedent:}                            noant,
{one:}                                   FALSE
);

each_other's <Neutral,false>
{one: in Dutch: =elkaarskey !!}
: $S_PRONOUN10291
: $M_PRONOUN1029101
: RECIPRO(
{antecedent:}                            noant,
{one:}                                   FALSE
);

eight <Neutral,false>
: $S_EIGHTNUMKEY
: $M_EIGHTNUMKEY
: NUM(
{numbers:}                               [ plural]
);

enough <Neutral,false>
: $S_ENOUGHQKEY
: $M_ENOUGHKEY
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{thanas:}                                tocompl,
{hop:}                                   TRUE
);

every <Neutral,false>
: $S_EVERYBDETKEY
: $M_EVERYKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{posspred:}                              FALSE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Aquant
);

every_one <Neutral,false>
{NPhead: ????
animate: ?}
: $S_PRONOUN10322
: $M_PRONOUN1032201
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

everybody <Neutral,false>
{possnietNP: MJS}
: $S_PRONOUN10321
: $M_PRONOUN1032101
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

everyone <Neutral,false>
{possnietNP: MJS}
: $S_PRONOUN10321
: $M_PRONOUN1032101
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

everything <Neutral,false>
: $S_PRONOUN10338
: $M_PRONOUN1033801
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Aquant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

few <Neutral,true>
: $S_FEWNUMKEY
: $M_WEINIGENUMKEY
: NUM(
{numbers:}                               [ plural]
);

fewer <Neutral,true>
: $S_FEWER_Q_1
: $M_LESSKEY "less"
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{thanas:}                                thancompl,
{hop:}                                   FALSE
);

five <Neutral,true>
: $S_FIVENUMKEY
: $M_FIVENUMKEY
: NUM(
{numbers:}                               [ plural]
);

four <Neutral,true>
: $S_FOURNUMKEY
: $M_FOURNUMKEY
: NUM(
{numbers:}                               [ plural]
);

he <Neutral,true>
: $HEBPERSPROKEY
: $M_PRONOUN1014701,
  $M_PRONOUN1040001 {Dutch: RELANTPRO: degene!}
: BPERSPRO(
{person:}                                3,
{number:}                                singular,
{gender:}                                masculinegender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

herself <Neutral,true>
: $HERSELFREFLPROKEY
: $M_PRONOUN1020302 "vrouwelijk" {Dutch: "zich" fem.},
  $M_PRONOUN1029402 "vrouwelijk" {Dutch: "zichzelf" fem.}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                3,
{gender:}                                femininegender,
{one:}                                   FALSE
);

himself <Neutral,true>
: $HIMSELFREFLPROKEY
: $M_PRONOUN1020301 "mannelijk" {Dutch: "zich" masc.},
  $M_PRONOUN1029401 "mannelijk" {Dutch: "zichzelf" masc.}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                3,
{gender:}                                masculinegender,
{one:}                                   FALSE
);

hundred <Neutral,true>
: $S_NUM18001
: $M_NUM180010
: NUM(
{numbers:}                               [ plural]
);

it <Neutral,false>
{NPhead: niet in woordenboek}
: $ITBPERSPROKEY
: $M_PRONOUN1014901
: BPERSPRO(
{person:}                                3,
{number:}                                singular,
{gender:}                                omegagender,
{animate:}                               omegaAnimate,
{predpos:}                               FALSE,
{NPhead:}                                itNP
);

itself <Neutral,false>
: $ITSELFREFLPROKEY
: $M_PRONOUN1020303 "onzijdig" {Dutch: "zich" neut.},
  $M_PRONOUN1029403 "onzijdig" {Dutch: "zichzelf" neut.}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                3,
{gender:}                                omegagender,
{one:}                                   FALSE
);

less <Neutral,true>
: $S_LESSQKEY
: $M_LESSKEY
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{thanas:}                                thancompl,
{hop:}                                   FALSE
);

little <Neutral,true>
: $S_LITTLEBDETKEY
: $M_BDET143250
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

many <Neutral,true>
: $S_MANYBDETKEY
: $M_MANYMUCHKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

many <Neutral,true>
: $S_MANYNUMKEY
: $M_VELENUMKEY
: NUM(
{numbers:}                               [ plural]
);

more <Neutral,true>
: $MOREQKEY
: $M_MOREQKEY
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{thanas:}                                thancompl,
{hop:}                                   FALSE
);

most <Neutral,true>
{posspred: the most}
: $MOSTQKEY
: $M_MOSTQKEY
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              adef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{thanas:}                                ofcompl,
{hop:}                                   FALSE
);

much <Neutral,true>
: $S_MUCHQKEY
: $M_MUCH1QKEY
: Q(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass],
{mood:}                                  nowh,
{thanas:}                                omegacompl,
{hop:}                                   FALSE
);

much <Neutral,true>
: $S_MUCHBDETKEY
: $M_MANYMUCHKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ singular],
{posscomas:}                             [ mass],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

myself <Neutral,true>
: $MYSELFREFLPROKEY
: $M_PRONOUN1020101 {Dutch: "me"},
  $M_PRONOUN1029201 {Dutch: "mijzelf"},
  $M_PRONOUN1029701 {Dutch: "mezelf"}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                1,
{gender:}                                omegagender,
{one:}                                   FALSE
);

nine <Neutral,true>
: $S_NINENUMKEY
: $M_NINENUMKEY
: NUM(
{numbers:}                               [ plural]
);

no <Neutral,true>
{syntquant: added 15-03-89 by MJS}
: $NOBDETKEY
: $M_GEENNONOKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ negpol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

no_one <Neutral,true>
: $NOONEINDEFPROKEY
: $M_PRONOUN1031801
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ negpol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

no-one <Neutral,true>
: $S_PRONOUN10318
: $M_PRONOUN1031801
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ negpol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

nobody <Neutral,true>
: $NOBODYINDEFPROKEY
: $M_PRONOUN1031801
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ negpol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

not <Neutral,true>
: $NOTPROSENTKEY
: $M_NIETNOTNOPROSENT
: PROSENT(
{neg:}                                   TRUE,
{so:}                                    TRUE
);

nothing <Neutral,true>
: $NOTHINGINDEFPROKEY
: $M_PRONOUN1032001
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ negpol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  FALSE,
{possnietNP:}                            FALSE,
{syntquant:}                             Equant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

numerous <Neutral,true>
: $S_NUMEROUSBDETKEY
: $M_NUMEROUSKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              FALSE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

one <Neutral,false>
: $ONEINDEFPROKEY
: $M_PRONOUN1031201 s2 "used in colloquial contexts" {Dutch "je"},
  $M_MEN_BINDEFPRO_2 s1 "generic use: impersonal"
: INDEFPRO(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              def,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            FALSE,
{syntquant:}                             Omegaquant,
{animate:}                               yesanimate,
{NPhead:}                                oneNP
);

one <Neutral,false>
: $S_ONENUMKEY
: $M_ONENUMKEY
: NUM(
{numbers:}                               [ singular]
);

one_another <Neutral,false>
: $ONEANOTHERKEY
: $M_PRONOUN1029001
: RECIPRO(
{antecedent:}                            noant,
{one:}                                   TRUE
);

one_another's <Neutral,false>
: $S_PRONOUN10293
: $M_PRONOUN1029101
: RECIPRO(
{antecedent:}                            noant,
{one:}                                   TRUE
);

oneself <Neutral,false>
: $ONESELFREFLPROKEY
: $M_PRONOUN1034501 "generiek reflexief" {Dutch: "je" generic},
  $M_PRONOUN1034502 "generiek reflexief" {Dutch: "jezelf" generic},
  $M_PRONOUN1020305 "van `men'" {Dutch: "zich" van "men"},
  $M_PRONOUN1029405 "van `men'" {Dutch: "zichzelf" van "men"}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                3,
{gender:}                                omegagender,
{one:}                                   TRUE
);

ourselves <Neutral,false>
: $OURSELVESREFLPROKEY
: $M_PRONOUN1020401 {Dutch: "ons"},
  $M_PRONOUN1029501 {Dutch: "onszelf"}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                plural,
{person:}                                1,
{gender:}                                omegagender,
{one:}                                   FALSE
);

seven <Neutral,true>
: $S_SEVENNUMKEY
: $M_SEVENNUMKEY
: NUM(
{numbers:}                               [ plural]
);

several <Neutral,true>
: $S_SEVERAL_NUM_1
: $M_VERSCHILLENDE_NUM_1 "more than one"
: NUM(
{numbers:}                               [ plural]
);

she <Neutral,true>
: $SHEBPERSPROKEY
: $M_PRONOUN1014801 "vrouwelijk persoon"
: BPERSPRO(
{person:}                                3,
{number:}                                singular,
{gender:}                                femininegender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

six <Neutral,true>
: $S_SIXNUMKEY
: $M_SIXNUMKEY
: NUM(
{numbers:}                               [ plural]
);

so <Neutral,true>
: $SOPROSENTKEY
: $M_WELSOSIPROSENT
: PROSENT(
{neg:}                                   FALSE,
{so:}                                    TRUE
);

some <Neutral,true>
: $S_SOME1BDETKEY
: $M_SOMMIGEKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              adef,
{posspred:}                              FALSE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Omegaquant
);

some <Neutral,true>
{possnietnp: ?? perhaps `not + some' - `no' MJS}
: $S_SOME2BDETKET
: $M_ENKELEKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural],
{posscomas:}                             [ count],
{mood:}                                  nowh,
{possnietnp:}                            FALSE,
{syntquant:}                             Equant
);

somebody <Neutral,true>
{req: vgl. anybody and someone}
: $SOMEBODYINDEFPROKEY
: $M_PRONOUN1031701
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            TRUE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

someone <Neutral,true>
{req: vgl. anyone and somebody}
: $SOMEONEINDEFPROKEY
: $M_PRONOUN1031701
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  TRUE,
{possnietNP:}                            TRUE,
{syntquant:}                             Equant,
{animate:}                               yesanimate,
{NPhead:}                                otherNP
);

something <Neutral,true>
: $SOMETHINGINDEFPROKEY
: $M_PRONOUN1031901
: INDEFPRO(
{req:}                                   [ pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{number:}                                singular,
{poss:}                                  FALSE,
{possnietNP:}                            TRUE,
{syntquant:}                             Equant,
{animate:}                               noanimate,
{NPhead:}                                otherNP
);

ten <Neutral,true>
: $S_TENNUMKEY
: $M_TENNUMKEY
: NUM(
{numbers:}                               [ plural]
);

that <Neutral,true>
: $THATRELPROKEY
: $M_PRONOUN1040401,
  $M_PRONOUN1040501
: RELPRO(

);

that <Neutral,true>
: $THATDEMPROKEY
: $M_PRONOUN1033001
: DEMPRO(
{number:}                                singular
);

that <Neutral,true>
: $THATDEMADJKEY
: $M_DEMADJ1461101
: DEMADJ(
{number:}                                singular
);

the <Neutral,true>
: $THEARTKEY
: $M_DEFARTICLE
: ART(
{definite:}                              def,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count]
);

themselves <Neutral,true>
: $THEMSELVESREFLPROKEY
: $M_PRONOUN1020304 "meervoud" {Dutch: "zich" plur.},
  $M_PRONOUN1029404 "meervoud" {Dutch: "zich" plur.}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                plural,
{person:}                                3,
{gender:}                                omegagender,
{one:}                                   FALSE
);

these <Neutral,true>
: $THESEDEMPROKEY
: $M_PRONOUN1033401
: DEMPRO(
{number:}                                plural
);

these <Neutral,true>
: $THESEDEMADJKEY
: $M_DEMADJ1461001
: DEMADJ(
{number:}                                plural
);

they <Neutral,true>
: $THEYBPRSPRKEY
: $M_PRONOUN1015101 "masculine",
  $M_PRONOUN1015102 "feminine"
: BPERSPRO(
{person:}                                3,
{number:}                                plural,
{gender:}                                omegagender,
{animate:}                               omegaAnimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

they <Neutral,true>
: $THEYGENBPRSPRKEY
: $M_PRONOUN1031301 "generic use: people in general" {Dutch "ze"},
  $M_MEN_BINDEFPRO_1 "generic use: impersonal",
  $M_PRONOUN1031601 "generic use"
: BPERSPRO(
{person:}                                3,
{number:}                                plural,
{gender:}                                omegagender,
{animate:}                               omegaAnimate,
{predpos:}                               TRUE,
{NPhead:}                                theyNP
);

this <Neutral,true>
: $THISDEMPROKEY
: $M_PRONOUN1033701
: DEMPRO(
{number:}                                singular
);

this <Neutral,true>
: $THISDEMADJKEY
: $M_DEMADJ1461001
: DEMADJ(
{number:}                                singular
);

those <Neutral,true>
: $THOSEDEMPROKEY
: $M_PRONOUN1033301,
  $M_PRONOUN1040101 {Dutch: RELANTPRO: degenen!}
: DEMPRO(
{number:}                                plural
);

those <Neutral,true>
: $THOSEDEMADJKEY
: $M_DEMADJ1461101
: DEMADJ(
{number:}                                plural
);

three <Neutral,true>
: $S_THREENUMKEY
: $M_THREENUMKEY
: NUM(
{numbers:}                               [ plural]
);

twenty <Neutral,true>
: $S_TWENTY_NUM_1
: $M_TWINTIG_NUM_1 "20 <cardinal>"
: NUM(
{numbers:}                               [ plural]
);

two <Neutral,true>
: $S_TWONUMKEY
: $M_TWONUMKEY
: NUM(
{numbers:}                               [ plural]
);

we <Neutral,true>
: $WEBPERSPROKEY
: $M_PRONOUN1015001 "masculine",
  $M_PRONOUN1015002 "feminine"
: BPERSPRO(
{person:}                                1,
{number:}                                plural,
{gender:}                                omegagender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

what <Neutral,true>
: $WHATBWHPROKEY
: $M_PRONOUN1017501
: BWHPRO(
{animate:}                               noanimate,
{poss:}                                  FALSE,
{whcase:}                                FALSE,
{number:}                                singular,
{sexes:}                                 [ ]
);

what <Neutral,true>
: $S_WHAT_BDET_1
: $M_WHAT_BDET_1 "which or what type of"
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  wh,
{possnietnp:}                            FALSE,
{syntquant:}                             Omegaquant
);

which <Neutral,true>
: $WHICHRELPROKEY
: $M_PRONOUN1040401,
  $M_PRONOUN1040501
: RELPRO(

);

which <Neutral,true>
: $S_WHICHBDETKEY
: $M_WHICHKEY
: BDET(
{req:}                                   [ omegapol, negpol, pospol],
{env:}                                   [ omegapol, negpol, pospol],
{definite:}                              indef,
{posspred:}                              TRUE,
{possnumbers:}                           [ plural, singular],
{posscomas:}                             [ mass, count],
{mood:}                                  wh,
{possnietnp:}                            FALSE,
{syntquant:}                             Omegaquant
);

who <Neutral,true>
: $WHORELPROKEY
: $M_PRONOUN1040401,
  $M_PRONOUN1040501
: RELPRO(

);

who <Neutral,true>
: $S_PRONOUN10008
: $M_PRONOUN1033501 "vrouwelijk enkelvoud" {fem. sg.}
: BWHPRO(
{animate:}                               yesanimate,
{poss:}                                  TRUE,
{whcase:}                                TRUE,
{number:}                                singular,
{sexes:}                                 [ feminine]
);

who <Neutral,true>
: $WHOBWHPROKEY
: $M_PRONOUN1015201 "mannelijk enkelvoud" {masc. sg.}
: BWHPRO(
{animate:}                               yesanimate,
{poss:}                                  TRUE,
{whcase:}                                TRUE,
{number:}                                singular,
{sexes:}                                 [ masculine]
);

who <Neutral,true>
: $S_PRONOUN10010M
: $M_PRONOUN1033601_MASC "mannelijk meervoud" {plur.}
: BWHPRO(
{animate:}                               yesanimate,
{poss:}                                  TRUE,
{whcase:}                                TRUE,
{number:}                                plural,
{sexes:}                                 [ masculine]
);

who <Neutral,true>
: $S_PRONOUN10010F
: $M_PRONOUN1033601_FEM "vrouwelijk meervoud" {plur.}
: BWHPRO(
{animate:}                               yesanimate,
{poss:}                                  TRUE,
{whcase:}                                TRUE,
{number:}                                plural,
{sexes:}                                 [ feminine]
);

you <Neutral,true>
: $YOUSGBPERSPROKEY
: $M_PRONOUN1014601 "masculine singular" {Dutch: "jij"},
  $M_PRONOUN1014602 "feminine singular" {Dutch: "jij"},
  $M_PRONOUN1060901 "polite masculine singular" {Dutch: "u"},
  $M_PRONOUN1060902 "polite feminine singular" {Dutch: "u"},
  $M_PRONOUN1031401 {Dutch: "gij" ...only in generation!!}
: BPERSPRO(
{person:}                                2,
{number:}                                singular,
{gender:}                                omegagender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

you <Neutral,true>
: $YOUPLBPERSPROKEY
: $M_PRONOUN1015301 "masculine plural" {Dutch: "jullie"},
  $M_PRONOUN1015302 "feminine plural" {Dutch: "jullie"},
  $M_PRONOUN1060903 "polite masculine plural" {Dutch: "u"},
  $M_PRONOUN1060904 "polite feminine plural" {Dutch: "u"},
  $M_PRONOUN1031401 {Dutch: "gij" ...only in generation!!}
: BPERSPRO(
{person:}                                2,
{number:}                                plural,
{gender:}                                omegagender,
{animate:}                               yesanimate,
{predpos:}                               TRUE,
{NPhead:}                                persproNP
);

yourself <Neutral,true>
: $YOURSELFREFLPROKEY
: $M_PRONOUN1020201 "niet generiek reflexief enkelvoud" {Dutch: "je"},
  $M_PRONOUN1029301 "niet generiek reflexief enkelvoud" {Dutch: "jezelf"},
  $M_PRONOUN1020601 "enkelvoud" {Dutch: "u"},
  $M_PRONOUN1029601 "enkelvoud" {Dutch: "uzelf"},
  $M_PRONOUN1020306 "van `u', enkelvoud" {Dutch: "zich"},
  $M_PRONOUN1029406 "van `u', enkelvoud" {Dutch: "zichzelf"}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                singular,
{person:}                                2,
{gender:}                                omegagender,
{one:}                                   FALSE
);

yourselves <Neutral,true>
{number: OR: omeganumber ?????? HS}
: $YOURSELVESREFLPROKEY
: $M_PRONOUN1020602 "meervoud" {Dutch: "u" plur.},
  $M_PRONOUN1029602 "meervoud" {Dutch: "uzelf" plur.},
  $M_PRONOUN1020202 "niet generiek reflexief meervoud" {Dutch: "je" plur.},
  $M_PRONOUN1029302 "niet generiek reflexief meervoud" {Dutch: "jezelf" plur.},
  $M_PRONOUN1020307 "van `u', meervoud" {Dutch: "zich", mv. van "u"},
  $M_PRONOUN1029407 "van `u', meervoud" {Dutch: "zichzelf", mv. van "u"}
: REFLPRO(
{antecedent:}                            noant,
{number:}                                plural,
{person:}                                2,
{gender:}                                omegagender,
{one:}                                   FALSE
);

zero <Neutral,true>
: $S_ZERONUMKEY
: $M_ZERONUMKEY
: NUM(
{numbers:}                               [ plural]
);

