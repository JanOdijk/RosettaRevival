DUTCH 15
&
\newpage
\begin{verbatim}
%
% TRANSFORMATION SVA0
< m1:I1::CLAUSE{CLAUSErec1}[mu1]
>

< m :I1::CLAUSE{CLAUSErec1}[mu1]
>

   MATCHCONDITIONS
      <
       I1: CLAUSErec1.finiteness = infinite
      >

      COMP
         <
          C1: true
          A1: @
         >
      DECOMP
         <
          C1: true
          A1: @
         >


&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] SVA0
\item[* relevant examples:]
x1 x2 kopen $\rightarrow$\\
x1 x2 kopen
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] XPPROPtoClause
\item[* class:] (name of rule, transformation or filter class) TC:SVA
\item[* date of creation:] 7-APR-1987 09:52:29  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To let non finite clauses pass the subject verb agreement TC
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:]--
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] none
\item[\  \ suggested semantics:]
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\

\end{enumerate}
\end{description}



\newpage
\begin{verbatim}
% TRANSFORMATION SVA1

< m1:I1::CLAUSE{CLAUSErec1}
           [ mu1,
             subjrel/T1,
             mu2,
             predrel/VERBP{VERBPrec1}
                 I2:[ mu3,
                      I3:rel1/T2,
                      mu4 
                    ],
             mu5
           ]
>

< m :I1::CLAUSE{CLAUSErec1}
           [ mu1,
             subjrel/T3,
             mu2,
             predrel/VERBP{VERBPrec1}
                 I2:[ mu3,
                      I3:rel1/T4,
                      mu4 
                    ],
             mu5
           ]
>

   MATCHCONDITIONS
      <
       I1: CLAUSErec1.finiteness = finite
       I2: RIGHTTOLEFT
       I3: rel1 IN [head, progauxrel, auxrel]
      >

<

   SUBRULE        (* NPVAR, bareV, partV *)
      <
       T1:NPVAR{NPVARrec1}
       T2:I4::VERB{VERBrec1}[mu6]
      >
      < 
       T3:NPVAR{NPVARrec1}
       T4:I5::VERB{VERBrec2}[mu6]
      >

      MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV]
       I5: VERBrec2.status IN [bareV, partV]
      >

      COMP
         <
          C1: VERBrec1 =
                  {
                   number   : omeganumber 
                   persons  : []
                  }
          A1: VERBrec2 := VERBrec1;
              VERBrec2 :=
                  {
                   number   : NPVARrec1.number
                   persons  : [NPVARrec1.person]
                  }
         >
      DECOMP
         <
          C1: VERBrec2 =
                  {
                   number   :  NPVARrec1.number 
                   persons  NI NPVARrec1.person 
                  }
          A1: VERBrec1 := VERBrec2;
              VERBrec1 :=
                  {
                   number   : omeganumber
                   persons  : []
                  }
         >



   SUBRULE       (* NPVAR, auxV,VV*)
      <
       T1:NPVAR{NPVARrec1}
       T2:I4::VERB{VERBrec1}
              [ rel2/ I5::VERB{VERBrec2}[mu6],
                mu7
              ]
      >
      < 
       T3:NPVAR{NPVARrec1}
       T4:I6::VERB{VERBrec3}
              [ rel2/I7::VERB{VERBrec4}[mu6],
                mu7 
              ]
      >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [auxV, VV]
       I5: VERBrec2.status = bareV
       I6: VERBrec3.status IN [auxV, VV]
       I7: VERBrec4.status = bareV
      >

      COMP
         <
          C1: VERBrec1 =
                  {
                   number    : omeganumber
                   persons   : []
                  }                         AND
              VERBrec2 =
                  {
                   number    : omeganumber
                   persons   : []
                  }    
          A1: VERBrec3 := VERBrec1;
              VERBrec3 := 
                  {
                    number   : NPVARrec1.number
                    persons  : [NPVARrec1.person]
                  };
              VERBrec4 := VERBrec2;
              VERBrec4 := 
                  {
                    number   : NPVARrec1.number
                    persons  : [NPVARrec1.person]
                  }
         >
      DECOMP
         <
          C1: VERBrec3 =
                  { number    :  NPVARrec1.number   
                    persons   NI NPVARrec1.person 
                  }                                AND
              VERBrec4 =
                  { number    :  NPVARrec1.number   
                    persons   NI NPVARrec1.person 
                  }                               
          A1: VERBrec1 := VERBrec3;
              VERBrec1 :=
                  { 
                   number  : omeganumber
                   persons : []
                  };
              VERBrec2 := VERBrec4;
              VERBrec2 :=
                  { 
                   number  : omeganumber
                   persons : []
                  }
         >



   SUBRULE     (* CNVAR, [bareV, partV] *)
      <
       T1:CNVAR{CNVARrec1}
       T2:I4::VERB{VERBrec1}[mu6]
      >
      < 
       T3:CNVAR{CNVARrec1}
       T4:I5::VERB{VERBrec2}[mu6]
      >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [bareV, partV]
       I5: VERBrec2.status IN [bareV, partV]
      >

      COMP
         <
          C1: VERBrec1 = 
                  { 
                   number  : omeganumber
                   persons : []
                  }
              C11: singular IN CNVARrec1.numbers
              A11: VERBrec2 := VERBrec1;
                   VERBrec2 :=
                      { 
                        number  : singular
                        persons : [3]
                      }
              C12: plural IN CNVARrec1.numbers
              A11: VERBrec2 := VERBrec1;
                   VERBrec2 :=
                      { 
                        number  : plural
                        persons : [3]
                      }
          A1: @
         >
      DECOMP
         <
          C1: true
              C11: (singular IN CNVARrec1.numbers) AND
                   VERBrec2 =
                     { 
                      number  :  singular
                      persons NI 3
                     }
              A11: VERBrec1 := VERBrec2;
              C12: (plural IN CNVARrec1.numbers) AND
                   VERBrec2 =
                     { 
                      number  :  plural
                      persons NI 3
                     }
              A12: VERBrec1 := VERBrec2;
           A1: VERBrec1 :=
                 { 
                  number  : omeganumber
                  persons : []
                 }
         >


   SUBRULE    (* CNVAR, auxV-VV *)
   <
       T1:CNVAR{CNVARrec1}
       T2:I4::VERB{VERBrec1}
              [ rel2/ I5::VERB{VERBrec2}[mu6],
                mu7
              ]
      >
      < 
       T3:CNVAR{CNVARrec1}
       T4:I6::VERB{VERBrec3}
              [ rel2/I7::VERB{VERBrec4}[mu6],
                mu7 
              ]
      >

   MATCHCONDITIONS
      <
       I4: VERBrec1.status IN [auxV, VV]
       I5: VERBrec2.status = bareV
       I6: VERBrec3.status IN [auxV, VV]
       I7: VERBrec4.status = bareV
      >

      COMP
         <
          C1: VERBrec1 =
                  {
                   number    : omeganumber
                   persons   : []
                  }                         AND
              VERBrec2 =
                  {
                   number    : omeganumber
                   persons   : []
                  }    
                C11: singular IN CNVARrec1.numbers
		A11: VERBrec3 := VERBrec1;
		     VERBrec3 := 
			{
			  number   : singular
			  persons  : [3]
			};
		    VERBrec4 := VERBrec2;
		    VERBrec4 := 
			{
			  number   : singular
			  persons  : [3]
			}
                C12: plural IN CNVARrec1.numbers
		A12: VERBrec3 := VERBrec1;
		     VERBrec3 := 
			{
			  number   : plural
			  persons  : [3]
			};
		    VERBrec4 := VERBrec2;
		    VERBrec4 := 
			{
			  number   : plural
			  persons  : [3]
			}
          A1: @
         >
      DECOMP  
         <
          C1: true
             C11: singular IN CNVARrec1.numbers      AND
                  VERBrec3 =
                    { number    :  singular
                      persons   NI 3
                    }                                AND
                  VERBrec4 =
                    { number    :  singular
                      persons   NI 3
                    }                               
             A11: VERBrec1 := VERBrec3;
                  VERBrec2 := VERBrec4;
             C12: plural IN CNVARrec1.numbers      AND
                  VERBrec3 =
                    { number    :  plural
                      persons   NI 3
                    }                                AND
                  VERBrec4 =
                    { number    :  plural
                      persons   NI 3
                    }                               
             A12: VERBrec1 := VERBrec3;
                  VERBrec2 := VERBrec4;
          A1: VERBrec1 :=
                  { 
                   number  : omeganumber
                   persons : []
                  };
              VERBrec2 :=
                  { 
                   number  : omeganumber
                   persons : []
                  }
         >


   SUBRULE    (* specialNP, [bareV, partV] *)
      <
       T1:I4::NP{NPrec1}[mu6]
       T2:I5::VERB{VERBrec1}[mu7]
      >
      < 
       T3:I6::NP{NPrec2}[mu6]
       T4:I7::VERB{VERBrec2}[mu7]
      >

   MATCHCONDITIONS
      <
       I4: NPrec1.NPhead IN [ ditNP, datNP, hetNP, ecNP]
       I5: VERBrec1.status IN [bareV, partV]
       I6: NPrec2.NPhead IN [ ditNP, datNP, hetNP, ecNP ]
       I7: VERBrec2.status IN [bareV, partV]
      >

      COMP
         <
          C1: VERBrec1 =
                  { 
                   number  :  omeganumber
                   persons :  []
                  }
          A1: VERBrec2 := VERBrec1;
              VERBrec2 := 
                  {
                    number  :  NPrec1.number
                    persons :  [NPrec1.person]
                  };
               NPrec2 := NPrec1;
               NPrec2.number := singular
         >
      DECOMP
         <
          C1: NPrec2.number = singular
          A1: VERBrec1 := VERBrec2;
              VERBrec1 :=
                  {
                   number  : omeganumber
                   persons : []
                  };
              NPrec1 := NPrec2;
              NPrec1.number := VERBrec2.number
         >


   SUBRULE    (* specialNP, auxV,VV *)
      <
       T1:I4::NP{NPrec1}[mu6]
       T2:I5::VERB{VERBrec1}
              [ rel2/I6::VERB{VERBrec2}[mu7],
                mu8 
              ]
      >
      < 
       T3:I7::NP{NPrec2}[mu6]
       T4:I8::VERB{VERBrec3}
              [ rel2/I9::VERB{VERBrec4}[mu7],
                mu8 
              ]
      >

   MATCHCONDITIONS
      <
       I4: NPrec1.NPhead IN [ ditNP, datNP, hetNP, ecNP ]
       I5: VERBrec1.status IN [auxV, VV]
       I6: VERBrec2.status = bareV
       I7: NPrec2.NPhead IN [ ditNP, datNP, hetNP, ecNP ]
       I8: VERBrec3.status IN [auxV, VV]
       I9: VERBrec4.status = bareV
      >

      COMP
         <
          C1: VERBrec1 =
                  { 
                    number  : omeganumber
                    persons : []
                  }                       AND
              VERBrec2 =
                  { 
                    number  : omeganumber
                    persons : []
                  }                     
          A1: VERBrec3 := VERBrec1;
              VERBrec3 :=
                  {
                   number  :  NPrec1.number
                   persons :  [NPrec1.person] 
                  };
              VERBrec4 := VERBrec2;
              VERBrec4 :=
                  {
                   number  :  NPrec1.number
                   persons :  [NPrec1.person] 
                  };
              NPrec2 := NPrec1;
              NPrec2.number := singular
         >
      DECOMP
         <
          C1: NPrec2.number = singular
          A1: VERBrec1 := VERBrec3;
              VERBrec1 :=
                  { 
                    number  : omeganumber
                    persons : []
                  };
              VERBrec2 := VERBrec4;
              VERBrec2 :=
                  { 
                    number  : omeganumber
                    persons : []
                  };
              NPrec1 := NPrec2;
              NPrec1.number := VERBrec3.number
         >


   SUBRULE  (* normalNP, [bareV, partV] *)
      <
       T1: I4::NP{NPrec1}[mu6]
       T2: I5::VERB{VERBrec1}[mu7]
      >
      < 
       T3: I4::NP{NPrec1}[mu6]
       T4: I6::VERB{VERBrec2}[mu7]
      >

   MATCHCONDITIONS
      <
       I4: NOT (NPrec1.NPhead IN [ ditNP, datNP, hetNP, ecNP] )
       I5: VERBrec1.status IN [bareV, partV]
       I6: VERBrec2.status IN [bareV, partV]
      >

      COMP
         <
          C1: VERBrec1 =
                  { 
                    number  : omeganumber
                    persons : []
                  }                     
          A1: VERBrec2 := VERBrec1;
              VERBrec2 :=
                  { 
                    number  : NPrec1.number
                    persons : [NPrec1.person]
                  }                     
         >
      DECOMP
         <
          C1: VERBrec2 =
                  { 
                    number  :  NPrec1.number
                    persons NI NPrec1.person
                  }                     
          A1: VERBrec1 := VERBrec2;
              VERBrec1 :=
                  { 
                    number  : omeganumber
                    persons : []
                  }                     
         >


   SUBRULE  (* normalNP, auxV,VV *)
      <
       T1:I4::NP{NPrec1}[mu6]
       T2:I5::VERB{VERBrec1}
              [ rel2/I6::VERB{VERBrec2}[mu7],
                mu8 
              ]
      >
      < 
       T3:I4::NP{NPrec1}[mu6]
       T4:I7::VERB{VERBrec3}
              [ rel2/I8::VERB{VERBrec4}[mu7],
                mu8 
              ]
      >

   MATCHCONDITIONS
      <
       I4: NOT (NPrec1.NPhead IN [ ditNP, datNP, hetNP, ecNP] )
       I5: VERBrec1.status IN [ auxV, VV ] 
       I6: VERBrec2.status = bareV
       I7: VERBrec3.status IN [auxV, VV]
       I8: VERBrec4.status = bareV
      >

      COMP
         <
          C1: VERBrec1 =
                  { 
                    number  : omeganumber
                    persons : []
                  }                       AND
              VERBrec2 =
                  { 
                    number  : omeganumber
                    persons : []
                  }                     
          A1: VERBrec3 := VERBrec1;
              VERBrec3 :=
                  { 
                    number  : NPrec1.number
                    persons : [NPrec1.person]
                  };
              VERBrec4 := VERBrec2;
              VERBrec4 :=
                  { 
                    number  : NPrec1.number
                    persons : [NPrec1.person]
                  }                                          
         >
      DECOMP
         <
          C1: VERBrec3 =
                  { 
                    number  :  NPrec1.number
                    persons NI NPrec1.person
                  }                             AND
              VERBrec4 =
                  { 
                    number  :  NPrec1.number
                    persons NI NPrec1.person
                  }                     
          A1: VERBrec1 := VERBrec3;
              VERBrec1 := 
                  { 
                    number  : omeganumber
                    persons : []
                  };
              VERBrec2 := VERBrec4;
              VERBrec2 := 
                  { 
                    number  : omeganumber
                    persons : []
                  }                                          
         >

>

&

\end{verbatim}

\newpage
\begin{description}
\item[* name:] SVA1
\item[* relevant examples:]
Ik kom $\rightarrow$ ik kom\\
jij kom $\rightarrow$ jij komt\\
etc.\\
(de man) die kom $\rightarrow$ (de man) die komt\\
dit het boek ben $\rightarrow$ dit het boek is\\
dit de boeken ben $\rightarrow$ dit de boeken zijn\\
\item[* language:] (Dutch, English, Spanish) Dutch
\item[* kind of rule:] (M-rule, S-rule, Transferrule) M-rule
\item[* subgrammar:] XPPROPTOCLAUSE
\item[* class:] (name of rule, transformation or filter class) TC:SVA
\item[* date of creation:] 6-APR-1987 17:02:15  
\item[* author:] Jan Odijk
\item[* copied from:]--
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] To make the verb agree in person and number with the subject.
If the subject is an NP  containing {\em dit, dat, het } or {\em EC}, then
this NP is made into a singular NP (it may be a plural NP up to this rule).
If the verb is hidden in a verbal complex, then the lowest finite verb and
all higher verbs are marked for person and number. In practice depth is 
maximally 1.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
T1 is for the subject in the input model\\
T2 is for the verb or verbal complex in the input model\\
T3 is for the subject in the output model\\
T4 is for the verb or verbal complex in the output model\\

Match condition I2 gurantees that the relevant verbs assigned to T2/T4 are
the last(rightmost) ones appearing in the structure.

\item[\ \ clarification of the splitting up into subrules:]
There are 8 subrules:
\begin{enumerate}
  \item subject = NPVAR and verbal group is simple
  \item subject = NPVAR and verbal gropup is complex
  \item subject = CNVAR and verbal group is simple
  \item subject = CNVAR and verbal gropup is complex
  \item subject = NP headed by {\em dit, dat, het} or {\em EC} 
                    and verbal group is simple
  \item subject = NP headed by {\em dit, dat, het} or {\em EC} 
                    and verbal gropup is complex
  \item subject = NP not headed by {\em dit, dat, het} or {\em EC} 
                    and verbal group is simple
  \item subject = NP not headed by {\em dit, dat, het} or {\em EC} 
                    and verbal gropup is complex
\end{enumerate}
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]none
The alternatives {\em u bent } vs. {\em u is}, {\em u hebt} vs. {\em u heeft } 
are both generated. The morphology excludes one of these forms in generation.
This is a questionable decision.
The forms loopt, slaat etc are momentarily ambiguous between (a.o.) fourth
person singular and fourth person plural. If this is going to be changed 
(possible, since these forms are never formally distinguished), then the rules
of TC:SVA must be adapted accordingly.
\item[\  \ suggested semantics:] dna
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules:\\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:]
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications:\\
 14-JAN-1988 14:10:00 , JO: Since the attribute number of CNVAR has changed 
into numbers, a change  in the subrules dealing with CNVAR has been made.

 
\end{enumerate}
\end{description}
%%
