DUTCH 72
(* Rfinpastsuperdeixisspec moved to RC-superdeixis2 *)
&
\newpage
\begin{verbatim}
%
% RULE Rfinpresentsuperdeixis
< m1:CLAUSE{CLAUSErec1}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I3:rel1/VERB{VERBrec1}[head/T2]
                   ],
            mu5
           ] 
>

< m :CLAUSE{CLAUSErec2}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I4:rel1/VERB{VERBrec2}[head/T2]
                   ],
            mu5
           ] 

>
   MATCHCONDITIONS
      <
       I1: QUOTE_temprefnotfound(mu1)
       I2: QUOTE_temprefnotfound(mu2)
       m1: CLAUSErec1.deixis = omegadeixis AND
           CLAUSErec1.finiteness = finite
       I3: VERBrec1.tense = omegatense
       m : CLAUSErec2.finiteness = finite AND
           CLAUSErec2.deixis = omegadeixis
       I4: VERBrec2.tense = presenttense


      >
<
   SUBRULE (* 1 *)
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >

<
   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1: true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1: (ADVPVARrec1.class = reference) AND
              (ADVPVARrec1.retro = false) AND
              ((ADVPVARrec1.deixis = omegadeixis) OR
               (ADVPVARrec1.deixis = futuredeixis)
              )

      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;

         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            ((PREPPVARrec1.deixis = omegadeixis) OR
             (PREPPVARrec1.deixis = futuredeixis)
            ) 
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;
         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>

   MATCHCONDITIONS
      <
       sig1: (SENTENCErec1.conjclass = reference) AND
             (SENTENCErec1.conjretro = false) AND
             ((SENTENCErec1.conjdeixis = omegadeixis) OR
              (SENTENCErec1.conjdeixis = futuredeixis)
             )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;
         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>

   SUBRULE (* 2 *)
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >

<
   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;

         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1: (ADVPVARrec1.class = reference) AND
              (ADVPVARrec1.retro = false) AND
              ((ADVPVARrec1.deixis = omegadeixis) OR
               (ADVPVARrec1.deixis = futuredeixis)
              )

      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;

         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            ((PREPPVARrec1.deixis = omegadeixis) OR
             (PREPPVARrec1.deixis = futuredeixis)
            ) 
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;
         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>

   MATCHCONDITIONS
      <
       sig1: (SENTENCErec1.conjclass = reference) AND
             (SENTENCErec1.conjretro = false) AND
             ((SENTENCErec1.conjdeixis = omegadeixis) OR
              (SENTENCErec1.conjdeixis = futuredeixis)
             )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := presentdeixis;
             
             C12:(CLAUSErec1.superdeixis = presentdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := presenttense;
         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = presentdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = presentdeixis)
              A12: CLAUSErec1 := CLAUSErec2;
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>
>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rfinpresentsuperdeixis
\item[* relevant examples:] Hij zegt (dat Jan slaapt)
                            Hij zegt (dat hij om 3 uur komt)
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] Deixis rules
\item[* date of creation:] 19-FEB-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Rfinpresentdeixis
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 19/05/89\ \ \ \ \ author: Lisette Appelo\\
Added condition on futuredeixis adverbial 
\item date: 09/01/90\ \ \ \ \ author: Lisette Appelo\\
Splitting into two subrules  to be able to refer to key of main verb. The 
abstract irrealis modals should be excluded.
\item date: ../../..\ \ \ \ \ author:
\item date: ../../..\ \ \ \ \ author:
\end{enumerate}
\item[* task:] The relation between Rs and S is simultanuous: PRESENT.
               This rule is for a finite dependent clause.
               The most right verb in the clause gets a present tense.
               The deixis 
value of the possible reference adverbial is checked for 
               omega.
               The clause is marked for present superdeixis.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] The splitting into
subrules corresponds to the different categories of the variables for the 
reference adverbials and the not occurrence of a reference adverbial. 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:]
\item[\  \ suggested semantics:] function application (see task)
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: finiteness transformations, rules that introduce the 
reference adverbial \\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: The superdeixis value also may be presentdeixis in the case 
this sentence is a sentence with {\em graag}\\

\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% RULE Rfinpastsuperdeixis1
< m1:CLAUSE{CLAUSErec1}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I3:rel1/VERB{VERBrec1}[head/T2]
                   ],
            mu5
           ] 
>

< m :CLAUSE{CLAUSErec2}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I4:rel1/VERB{VERBrec2}[head/T2]
                   ],
            mu5
           ] 

>
   MATCHCONDITIONS
      <
       I1: QUOTE_temprefnotfound(mu1)
       I2: QUOTE_temprefnotfound(mu2)
       m1: ((CLAUSErec1.aspect = imperfective) OR
            (CLAUSErec1.aspect = habitual) OR
            ((CLAUSErec1.aspect = perfective) AND
             ((CLAUSErec1.aktionsarts * [accomplishment, achievement] <> []) OR
              ((CLAUSErec1.aktionsarts * [activity, stative] <> []) AND
               (NOT (QUOTE_tempdurnotfound(mu2)) OR
                NOT (QUOTE_tempretronotfound(mu2))
               )
              )
             )
            )
           ) AND
           (CLAUSErec1.deixis = omegadeixis) AND
           (CLAUSErec1.finiteness = finite)
       I3: (VERBrec1.tense = omegatense) 

       m2: ((CLAUSErec2.aspect = imperfective) OR
            (CLAUSErec2.aspect = habitual) OR
            ((CLAUSErec2.aspect = perfective) AND
             ((CLAUSErec2.aktionsarts * [accomplishment, achievement] <> []) OR
              ((CLAUSErec2.aktionsarts * [activity, stative] <> []) AND
               (NOT (QUOTE_tempdurnotfound(mu2)) OR
                NOT (QUOTE_tempretronotfound(mu2))
               )
              )
             )
            )
           ) AND
           (CLAUSErec2.finiteness = finite) AND
           (CLAUSErec2.deixis = omegadeixis)
       I4: (VERBrec2.tense = pasttense)

         
      >
<
   SUBRULE (* 1 *)
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >

<
   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11: CLAUSErec2 := CLAUSErec1;
                  CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                              (NOT (QUOTE_tempretronotfound(mu2)))
                             ) 
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;
             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(ADVPVARrec1.class = reference) AND
            (ADVPVARrec1.retro = false) AND
            ((ADVPVARrec1.deixis = omegadeixis) OR
             (ADVPVARrec1.deixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                              (NOT (QUOTE_tempretronotfound(mu2))) 
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                              (NOT (QUOTE_tempretronotfound(mu2))) 
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            ((PREPPVARrec1.deixis = omegadeixis) OR
             (PREPPVARrec1.deixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1: true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>

   MATCHCONDITIONS
      <
       sig1:(SENTENCErec1.conjclass = reference) AND
            (SENTENCErec1.conjretro = false) AND
            ((SENTENCErec1.conjdeixis = omegadeixis) OR
             (SENTENCErec1.conjdeixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR 
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>
   SUBRULE (* 2 *)
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >
<
   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11: CLAUSErec2 := CLAUSErec1;
                  CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;
             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(ADVPVARrec1.class = reference) AND
            (ADVPVARrec1.retro = false) AND
            ((ADVPVARrec1.deixis = omegadeixis) OR
             (ADVPVARrec1.deixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>


   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            ((PREPPVARrec1.deixis = omegadeixis) OR
             (PREPPVARrec1.deixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>

   MATCHCONDITIONS
      <
       sig1:(SENTENCErec1.conjclass = reference) AND
            (SENTENCErec1.conjretro = false) AND
            ((SENTENCErec1.conjdeixis = omegadeixis) OR
             (SENTENCErec1.conjdeixis = futuredeixis)
            )
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            ((NOT (QUOTE_tempdurnotfound(mu2))) OR
                             (NOT (QUOTE_tempretronotfound(mu2))) OR
                             (VERBrec2.subc = modalverb)
                            )
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             ((NOT (QUOTE_tempretronotfound(mu2))) OR
                              (NOT (QUOTE_tempdurnotfound(mu2)))
                             )
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>
>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rfinpastsuperdeixis1
\item[* relevant examples:] Hij zei (dat Jan sliep)
                            Hij zei (dat hij om 3 uur kwam)
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] Deixis rules
\item[* date of creation:] 19-FEB-1988 
\item[* author:] Lisette Appelo
\item[* copied from:] Rfinpresentsuperdeixis
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 9/11/88\ \ \ \ \ author: Lisette Appelo 
\item date: 14/11/88\ \ \ \ \ author: Lisette Appelo
\item date: 18/05/89\ \ \ \ \ author: Lisette Appelo
\item date: 19/05/89\ \ \ \ \ author: Lisette Appelo
\item date: 09/01/90\ \ \ \ \ author: Lisette Appelo\\
Splitting into two subrules to be able to refer to the key.
\item date: 10/01/90\ \ \ \ \ author: Lisette Appelo\\
Added condition on retro adverbial in combination with activity or stative 
aktionsart to avoid crash of {\em hij zei dat hij had gezwommen}
\end{enumerate}
\item[* task:] The relation between Rs and S is before: PAST.
               This rule is for a finite dependent clause.
               The most right verb in the clause gets a past tense.
               The deixis 
value of the possible reference adverbial is checked for 
               omega.
               The clause is marked for past superdeixis.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] The splitting into
subrules corresponds to the different categories of the variables for the 
reference adverbials and the not occurrence of a reference adverbial. 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] In analysis a choice is 
made for the efficiency set of aktionsart  values. In generation this is not 
necessary as aktionsart has only one value there. The efficiency set is for 
purposes of analysis.
\item[\  \ suggested semantics:] function application (see task)
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: finiteness transformations, rules that introduce the 
reference adverbial \\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:]\mbox{}
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc 53
\item[\ \ remarks:]\mbox{}
\begin{enumerate}
\item problems:\\

\item modifications: The superdeixis value also may be presentdeixis in the case 
this sentence is a sentence with {\em graag}\\
9/11/88: Added conditions on aspect and Aktionsart to prevent too many 
translations or paraphrases for Rosetta3. This condition should be an 
expression of preference.\\
14/11/88: Extended the condition on Aktionsart  with a condition for active or 
stative Aktionsart in combination with a durative adverbial: {\em dat hij drie 
uur zwom} has a perfective interpretation, but {\em dat hij zwom} not.\\
Also added the assinments of Aktionsart in analysis.\\
17/5/89: The rule Rfinpastsuperdeixis has been split up into two rules 
Rfinpastsuperdeixis1 and Rfinpastsuperdeixis2. This rule is the old one and 
corresponds to Lpastsuperdeixis.\\
19/5/89: Added condition on futuredeixis adverbial.\\
\end{enumerate}
\end{description}

\newpage
\begin{verbatim}
% RULE Rfinpastsuperdeixis2
< m1:CLAUSE{CLAUSErec1}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I3:rel1/VERB{VERBrec1}[head/T2]
                   ],
            mu5
           ] 
>

< m :CLAUSE{CLAUSErec2}
           [I1:mu1,
            sig1,
            I2:mu2,
            predrel/VERBP{VERBPrec1}
                   [mu3,
                    I4:rel1/VERB{VERBrec2}[head/T2]
                   ],
            mu5
           ] 

>
   MATCHCONDITIONS
      <
       I1: QUOTE_temprefnotfound(mu1)
       I2: QUOTE_temprefnotfound(mu2)
       m1: ((CLAUSErec1.aspect = imperfective) OR
            (CLAUSErec1.aspect = habitual) OR
            ((CLAUSErec1.aspect = perfective) AND
             ((CLAUSErec1.aktionsarts * [accomplishment, achievement] <> []) OR
              ((CLAUSErec1.aktionsarts * [activity, stative] <> []) AND
               (NOT (QUOTE_tempdurnotfound(mu2)))
              )
             )
            )
           ) AND
           (CLAUSErec1.deixis = omegadeixis) AND
           (CLAUSErec1.finiteness = finite)

       m : ((CLAUSErec2.aspect = imperfective) OR
            (CLAUSErec2.aspect = habitual) OR
            ((CLAUSErec2.aspect = perfective) AND
             ((CLAUSErec2.aktionsarts * [accomplishment, achievement] <> []) OR
              ((CLAUSErec2.aktionsarts * [activity, stative] <> []) AND
               (NOT (QUOTE_tempdurnotfound(mu2)))
              )
             )
            )
           ) AND
           (CLAUSErec2.finiteness = finite) AND
           (CLAUSErec2.deixis = omegadeixis)
       I3: (VERBrec1.tense = omegatense) 
       I4: (VERBrec2.tense = pasttense) 


      >

<
   SUBRULE (* 1 *)
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >
      <T2: SUBVERB{SUBVERBrec1}[I9:head/BVERB(KEY1){BVERBrec1}] >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >

<

   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1:(NOT (QUOTE_tempdurnotfound(mu2))) 

             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:(NOT (QUOTE_tempdurnotfound(mu2))) 
              C11: (CLAUSErec2.superdeixis = pastdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
              A12: @

          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(ADVPVARrec1.class = reference) AND
            (ADVPVARrec1.retro = false) AND
            (ADVPVARrec1.deixis = omegadeixis) 
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            (PREPPVARrec1.deixis = omegadeixis)
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>

   MATCHCONDITIONS
      <
       sig1:(SENTENCErec1.conjclass = reference) AND
            (SENTENCErec1.conjretro = false) AND
            (SENTENCErec1.conjdeixis = omegadeixis)
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>
   SUBRULE (* 2 *)
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >
      <T2: SUBVERB{SUBVERBrec1}
                  [sig2, head/SUBVERB{SUBVERBrec2}
                       [I9:head/BVERB(KEY1){BVERBrec1}]
                  ]
       >

   MATCHCONDITIONS
      <
       I9: KEY1 <> KEY_kanirr1BVERBkey AND
           KEY1 <> KEY_kanirr2BVERBkey AND
           KEY1 <> KEY_moetirr1BVERBkey AND
           KEY1 <> KEY_moetirr2BVERBkey       
      >
<

   SUBRULE
      <sig1: [ ]>
      <sig1: [ ]>

      COMP
         <
          C1:(NOT (QUOTE_tempdurnotfound(mu2))) 
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:(NOT (QUOTE_tempdurnotfound(mu2))) 
              C11: (CLAUSErec2.superdeixis = pastdeixis)
              A11: CLAUSErec1 := CLAUSErec2;
                   CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
              A12: @

          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>
      <sig1: [tempadvrel/ADVPVAR{ADVPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(ADVPVARrec1.class = reference) AND
            (ADVPVARrec1.retro = false) AND
            (ADVPVARrec1.deixis = omegadeixis) 
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;

         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;

         >

   SUBRULE
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>
      <sig1: [tempadvrel/PREPPVAR{PREPPVARrec1}[ ]]>

   MATCHCONDITIONS
      <
       sig1:(PREPPVARrec1.class = reference) AND
            (PREPPVARrec1.retro = false) AND
            (PREPPVARrec1.deixis = omegadeixis)
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >

   SUBRULE
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>
      <sig1: [tempadvrel/SENTENCE{SENTENCErec1}[mu9]]>


   MATCHCONDITIONS
      <
       sig1:(SENTENCErec1.conjclass = reference) AND
            (SENTENCErec1.conjretro = false) AND
            (SENTENCErec1.conjdeixis = omegadeixis)
      >

      COMP
         <
          C1:true
             C11:(CLAUSErec1.superdeixis = omegadeixis)
             A11:CLAUSErec2 := CLAUSErec1;
                 CLAUSErec2.superdeixis := pastdeixis;
             
             C12:(CLAUSErec1.superdeixis = pastdeixis) (* geval graag *)
             A12: CLAUSErec2 := CLAUSErec1;

          A1: VERBrec2 := VERBrec1;
              VERBrec2.tense := pasttense;
         >
      DECOMP
         <
          C1:true
              C11: (CLAUSErec2.superdeixis = pastdeixis)
                 C111: CLAUSErec2.aspect = perfective
                      C1111:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1111: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1112: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1112: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1113: accomplishment IN CLAUSErec2.aktionsarts
                      A1113: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1114: achievement IN CLAUSErec2.aktionsarts
                      A1114: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A111: @
                 C112: CLAUSErec2.aspect IN [imperfective, habitual]
                 A112: CLAUSErec1 := CLAUSErec2;

             A11: CLAUSErec1.superdeixis := omegadeixis;

              C12: (CLAUSErec2.superdeixis = pastdeixis)
                 C121: CLAUSErec2.aspect = perfective
                      C1211:stative IN CLAUSErec2.aktionsarts AND
                            NOT (QUOTE_tempdurnotfound(mu2))
                      A1211: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [stative];
                      C1212: activity IN CLAUSErec2.aktionsarts AND
                             NOT (QUOTE_tempdurnotfound(mu2))
                      A1212: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [activity];
                      C1213: accomplishment IN CLAUSErec2.aktionsarts
                      A1213: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [accomplishment];
                      C1214: achievement IN CLAUSErec2.aktionsarts
                      A1214: CLAUSErec1 := CLAUSErec2;
                             CLAUSErec1.aktionsarts := [achievement];
                 A121: @
                 C122: CLAUSErec2.aspect IN [imperfective, habitual]
                 A122: CLAUSErec1 := CLAUSErec2;

              A12: @
 
          A1: VERBrec1 := VERBrec2;
              VERBrec1.tense := omegatense;
         >
>
>
&

\end{verbatim}
\newpage
\begin{description}
\item[* name:] Rfinpastsuperdeixis2
\item[* relevant examples:] Hij zei (dat hij om 3 uur kwam)
\item[* language:] Dutch
\item[* kind of rule:] M-rule
\item[* subgrammar:] XPPROPtoCLAUSE
\item[* class:] Deixis rules
\item[* date of creation:] 17-MAY-1989 
\item[* author:] Lisette Appelo
\item[* copied from:] Rfinpastsuperdeixis1
\item[* modification:]\mbox{}
\begin{enumerate}
\item date: 23/06/89\ \ \ \ \ author: Lisette Appelo\\
Added first subrule for the case that a reference adverbial is absent, but a 
duration adverbial is present: {\em Hij zei dat hij 4 uur zwom}, in the 
`past-past' interpretation. 
\item date: 09/01/90\ \ \ \ \ author: Lisette Appelo\\
Splitting into two subrules to be able to refer to the key. 
\item date: ../../..\ \ \ \ \ author: 
\item date: ../../..\ \ \ \ \ author: 
\end{enumerate}
\item[* task:] The indirect relation between Rs and S is before: PAST.
               This rule is for a finite dependent clause.
               The most right verb in the clause gets a past tense.
               The deixis 
value of the reference adverbial is checked for 
               omega.
               The clause is marked for past superdeixis.
\item[\ \ strategy:] (also: deviations from accepted proposals)
\item[\ \ rejected alternatives:]
\item[\ \ clarification of variables:]
\item[\ \ clarification of the splitting up into subrules:] The splitting into
subrules corresponds to the different categories of the variables for the 
reference adverbials. 
\item[\ \ clarification of the collapsing of rules:] (e.g. clarification of parameters)
\item[\ \ differences analytical/generative version:] In analysis a choice is 
made for the efficiency set of aktionsart  values. In generation this is not 
necessary as aktionsart has only one value there. The efficiency set is for 
purposes of analysis.
\item[\  \ suggested semantics:] function application (see task)
\item[\ \ presuppositions:]\mbox{}
\begin{enumerate}
\item dictionary:\\

\item rules: finiteness transformations, rules that introduce the 
reference adverbial \\

\end{enumerate}
\item[\ \ consequences in the grammar:]
\item[\ \ translation aspects:] This rule has the same semantics as 
Rfinpastsuperdeixisspec and Rinfinpastsuperdeixisspec.
\begin{enumerate} 
\item within this language:\\

\item in other languages:\\

\end{enumerate}
\item[* relevant literature/documents:] doc 53, 263, 314.
\item[\ \ remarks:]The rule Rfinpastsuperdeixis has been split up into two rules 
Rfinpastsuperdeixis1 and Rfinpastsuperdeixis2. This rule is the new one and 
corresponds to Lpastpastsuperdeixis.

\begin{enumerate}
\item problems:\\

\item modifications: The superdeixis value also may be pastdeixis in the case 
this sentence is a sentence with {\em graag}\\
\end{enumerate}
\end{description}


%
%
