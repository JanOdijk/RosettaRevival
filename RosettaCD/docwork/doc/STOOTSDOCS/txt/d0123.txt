$AC ¨
$PL 274,16
$LD 5
$OP PH=R,SH=S,PN=R,AN=C
$NP 
$UC `
   

            Project ROSETTA : Machine Translation


            Topic     :  Rosetta3.morphology

    ---------------------------------------------------------







         Title        :  Rosetta3 Spanish Morphology, inflection (rules)

         Author       :  Elly van Munster









         Doc.Nr       :  123

         Date         :  20/08/86

         Status       :  concept

         Supersedes   :  

         Distribution :  project

         Clearance    :  project

         Keywords     :  Spanish, inflection, morphology, rules
$fn 7

   ---------------------------------------------------------
    
    Philips Research Laboratories

    Copyright (c) Nederlandse Philips Bedrijven B.V.

$ph Rosetta          Doc.nr: 123                     date:20/08/86
$LD 5
$NP 1
$A1 GLUE-rules.
TYPE  MGLUE2;

{ dividing a word into two segments }

VAR

A    =  [ se,te,me,le,lo,la,os,nos,les,los,las ] ;
B    =  [ se,te,me,os,nos ] ;
C    =  [ te,me,le,lo,la,os,nos,les,los,las ] ;     { is A without "se" }  
D    =  [ se,te,os ] ;
E    =  [ me,te,nos,os ] ;
F    =  [ me,te,le,lo,la,nos,les,los,las ] ;
G    =  [ le,lo,la,les,los,las ] ;
H    =  [ me,nos ] ;
OE   =  [ u, ] ;
MED1 =  [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ] ;
MED2 =  [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ] ;
MED3 =  [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ] ;

TABLE

de   +  el  ::  del ;
a    +  el  ::  al ;

con  +  mi¨'  ::  conmigo ;
con  +  ti  ::  contigo ;
con  +  si¨'  ::  consigo ;  

{ irregular Imperativo-forms; non-composite forms; + 1 clitic }

pon + (A)  ::  pon(A) ;                     { poner }
se¨'  + (A)  ::  se¨'(A)  ;                     { ser }
di  + (A)  ::  di(A)  ;                     { decir }
ven + (A)  ::  ven(A) ;                     { venir }
ten + (A)  ::  ten(A) ;                     { tener }
satisfaz + (A)  ::  satisfaz(A) ;           { satisfacer }

$NP
{ TYPE  MGLUE3; }

{ dividing a word into three segments }

{ irregular Imperativo-forms; non-composite forms; + 2 clitics }

TABLE

pon + (B) + (C)  ::  po¨'n(B)(C) ;              { poner }
se¨'  + (B) + (C)  ::  se¨'(B)(C)  ;              { ser }
di  + (B) + (C)  ::  di¨'(B)(C)  ;              { decir }
ven + (B) + (C)  ::  ve¨'n(B)(C) ;              { venir } 
ten + (B) + (C)  ::  te¨'n(B)(C) ;              { tener }
satisfaz + (B) + (C)  ::  satisfa¨'z(B)(C) ;    { satisfacer } 

$NP
{ TYPE  MGLUE4; }

{ dividing a word into four segments }

{ irregular Imperativo-forms; non-composite forms; + 3 clitics }

TABLE

pon + (D) + (E) + (F)  ::  po¨'n(D)(E)(F) ;            { poner }
se¨'  + (D) + (E) + (F)  ::  se¨'(D)(E)(F)  ;            { ser }
di  + (D) + (E) + (F)  ::  di¨'(D)(E)(F)  ;            { decir }
ven + (D) + (E) + (F)  ::  ve¨'n(D)(E)(F) ;            { venir }
ten + (D) + (E) + (F)  ::  te¨'n(D)(E)(F) ;            { tener }
satisfaz + (D) + (E) + (F)  ::  satisfa¨'z(D)(E)(F) ;  { satisfacer }

$NP
{ TYPE RGLUE2; }

{ dividing a word into two segments }

{ infinitivo; hablar - hablarte }

TABLE

*ar + (A)  ::  *ar(A) ;
*er + (A)  ::  *er(A) ;
*ir + (A)  ::  *ir(A) ;

{ gerundio; hablando - habla¨'ndome }

*ando + (A)  ::  *a¨'ndo(A) ;
*endo + (A)  ::  *e¨'ndo(A) ;

$RL 9
{ regular imperativo } 

{ forms ending on -a; habla/coma - ha¨'blame/co¨'mase }

*a(OE)(MED1)(MED2)(MED3)a + (A)  ::  *a¨'(OE)(MED1)(MED2)(MED3)(A)a ;
*e(OE)(MED1)(MED2)(MED3)a + (A)  ::  *e¨'(OE)(MED1)(MED2)(MED3)(A)a ;
*i(OE)(MED1)(MED2)(MED3)a + (A)  ::  *i¨'(OE)(MED1)(MED2)(MED3)(A)a ;
*o(OE)(MED1)(MED2)(MED3)a + (A)  ::  *o¨'(OE)(MED1)(MED2)(MED3)(A)a ;
*u(OE)(MED1)(MED2)(MED3)a + (A)  ::  *u¨'(OE)(MED1)(MED2)(MED3)(A)a ;
 
$RL 7
{ forms ending on -e; hable/come - ha¨'bleme/co¨'mese }

*a(OE)(MED1)(MED2)(MED3)e + (A)  ::  *e¨'(OE)(MED1)(MED2)(MED3)e(A) ;
*e(OE)(MED1)(MED2)(MED3)e + (A)  ::  *e¨'(OE)(MED1)(MED2)(MED3)e(A) ;
*i(OE)(MED1)(MED2)(MED3)e + (A)  ::  *i¨'(OE)(MED1)(MED2)(MED3)e(A) ;
*o(OE)(MED1)(MED2)(MED3)e + (A)  ::  *o¨'(OE)(MED1)(MED2)(MED3)e(A) ;  
*u(OE)(MED1)(MED2)(MED3)e + (A)  ::  *u¨'(OE)(MED1)(MED2)(MED3)e(A) ;

$RL 4
{ 1st person pl.; hablemos - hable¨'mosle }

*emos + (A)  ::  *e¨'mos(A) ;
*amos + (A)  ::  *a¨'mos(A) ;

$RL 2
*emos + nos  ::  *e¨'monos ;
*amos + nos  ::  *a¨'monos ;

$RL 5
{ 2nd person plural; hablad - habladle }

*ad + (A)  ::  *ad(A) ;
*ed + (A)  ::  *ed(A) ;
*id + (A)  ::  *id(A) ;

$RL 5
{ lavados --> lavaos }

*ad + os  :: *aos ;
*ed + os  :: *eos ;
*id + os  :: *i¨'os ;    { accent! }

$RL 7
{ 3rd person plural; coman - co¨'manlo } 

*a(OE)(MED1)(MED2)(MED3)an + (A)  ::  *a¨'(OE)(MED1)(MED2)(MED3)an(A) ;
*e(OE)(MED1)(MED2)(MED3)an + (A)  ::  *e¨'(OE)(MED1)(MED2)(MED3)an(A) ;
*i(OE)(MED1)(MED2)(MED3)an + (A)  ::  *i¨'(OE)(MED1)(MED2)(MED3)an(A) ;
*o(OE)(MED1)(MED2)(MED3)an + (A)  ::  *o¨'(OE)(MED1)(MED2)(MED3)an(A) ; 
*u(OE)(MED1)(MED2)(MED3)an + (A)  ::  *u¨'(OE)(MED1)(MED2)(MED3)an(A) ;

$RL 7
{ hablen - ha¨'blenle }

*a(OE)(MED1)(MED2)(MED3)en + (A)  ::  *a¨'(OE)(MED1)(MED2)(MED3)en(A) ;
*e(OE)(MED1)(MED2)(MED3)en + (A)  ::  *e¨'(OE)(MED1)(MED2)(MED3)en(A) ;
*i(OE)(MED1)(MED2)(MED3)en + (A)  ::  *i¨'(OE)(MED1)(MED2)(MED3)en(A) ;
*o(OE)(MED1)(MED2)(MED3)en + (A)  ::  *o¨'(OE)(MED1)(MED2)(MED3)en(A) ; 
*u(OE)(MED1)(MED2)(MED3)en + (A)  ::  *u¨'(OE)(MED1)(MED2)(MED3)en(A) ;

$RL 5
{ irregular Imperativo-forms }

*po¨'n + (A)  ::  *po¨'n(A) ;  { composite forms with poner; imponer - impo¨'n }
*ve¨'n + (A)  ::  *ve¨'n(A) ;  { composite forms with venir; 
                                                       convenir - conve¨'n }
*te¨'n + (A)  ::  *te¨'n(A) ;  { composite forms with tener; 
                                                       contener - conte¨'n }
*haz + (A)  ::  *haz(A) ;  { hacer + possible composite forms }
*sal + (A)  ::  *sal(A) ;  { salir + composite forms; sobresal }
*val + (A)  ::  *val(A) ;  { valer + possible composite forms }
*esta¨' + (A) ::  *esta¨'(A) ;  
*este¨' + (A) ::  *este¨'(A) ;  
*de¨' + (A)   ::  *de¨'(A) ;   { dar + possible composite forms }

$NP
{ TYPE  RGLUE3; }

{ dividing a word into three segments }

{ infinitivo; comprar - compra¨'rtelo }

TABLE

*ar + (B) + (C) :: *a¨'r(B)(C) ;
*er + (B) + (C) :: *e¨'r(B)(C) ;
*ir + (B) + (C) :: *i¨'r(B)(C) ;

{ gerundio; comprando - compra¨'ndomelo }

*ando + (B) + (C) :: *a¨'ndo(B)(C) ;
*endo + (B) + (C) :: *e¨'ndo(B)(C) ;

$RL 9
{ Imperativo }

{ forms ending on -a; coma - co¨'mamelo }

*a(OE)(MED1)(MED2)(MED3)a + (B) + (C) :: *a¨'(OE)(MED1)(MED2)(MED3)a(B)(C) ;
*e(OE)(MED1)(MED2)(MED3)a + (B) + (C) :: *e¨'(OE)(MED1)(MED2)(MED3)a(B)(C) ;
*i(OE)(MED1)(MED2)(MED3)a + (B) + (C) :: *i¨'(OE)(MED1)(MED2)(MED3)a(B)(C) ;
*o(OE)(MED1)(MED2)(MED3)a + (B) + (C) :: *o¨'(OE)(MED1)(MED2)(MED3)a(B)(C) ;
*u(OE)(MED1)(MED2)(MED3)a + (B) + (C) :: *u¨'(OE)(MED1)(MED2)(MED3)a(B)(C) ;

$RL 7
{ forms ending on -e; come - co¨'memelo }

*a(OE)(MED1)(MED2)(MED3)e + (B) + (C) :: *a¨'(OE)(MED1)(MED2)(MED3)e(B)(C) ;
*e(OE)(MED1)(MED2)(MED3)e + (B) + (C) :: *e¨'(OE)(MED1)(MED2)(MED3)e(B)(C) ;
*i(OE)(MED1)(MED2)(MED3)e + (B) + (C) :: *i¨'(OE)(MED1)(MED2)(MED3)e(B)(C) ;
*o(OE)(MED1)(MED2)(MED3)e + (B) + (C) :: *o¨'(OE)(MED1)(MED2)(MED3)e(B)(C) ;
*u(OE)(MED1)(MED2)(MED3)e + (B) + (C) :: *u¨'(OE)(MED1)(MED2)(MED3)e(B)(C) ;

$RL 4
{ 1st person pl.; comamos+nos+lo - coma¨'monoslo }

*amos + nos + lo + (G) :: *a¨'monoslo(G) ;
*emos + nos + lo + (G) :: *e¨'monoslo(G) ;

$RL 5
{ 2nd person pl.; recibid - recibi¨'dmelo }

*ad + (B) + (C) :: *a¨'d(B)(C) ;
*ed + (B) + (C) :: *e¨'d(B)(C) ;
*id + (B) + (C) :: *i¨'d(B)(C) ;

$RL 5
{ 2nd person pl.; comed+os+lo --> come¨'oslo }

*ad + os + (F) :: *a¨'os(F) ;
*ed + os + (F) :: *e¨'os(F) ;
*id + os + (F) :: *i¨'os(F) ;

$RL 7
{ 3rd person pl. ending on -an; co¨'manmelo }

*a(OE)(MED1)(MED2)(MED3)an+(B)+(C) :: *a¨'(OE)(MED1)(MED2)(MED3)an(B)(C) ;
*e(OE)(MED1)(MED2)(MED3)an+(B)+(C) :: *e¨'(OE)(MED1)(MED2)(MED3)an(B)(C) ;
*i(OE)(MED1)(MED2)(MED3)an+(B)+(C) :: *i¨'(OE)(MED1)(MED2)(MED3)an(B)(C) ;
*o(OE)(MED1)(MED2)(MED3)an+(B)+(C) :: *o¨'(OE)(MED1)(MED2)(MED3)an(B)(C) ;
*u(OE)(MED1)(MED2)(MED3)an+(B)+(C) :: *u¨'(OE)(MED1)(MED2)(MED3)an(B)(C) ;

$RL 7
{ 3rd person pl. ending on -en; cele¨'brenmelo }

*a(OE)(MED1)(MED2)(MED3)en+(B)+(C) :: *a¨'(OE)(MED1)(MED2)(MED3)en(B)(C) ;
*e(OE)(MED1)(MED2)(MED3)en+(B)+(C) :: *e¨'(OE)(MED1)(MED2)(MED3)en(B)(C) ;
*i(OE)(MED1)(MED2)(MED3)en+(B)+(C) :: *i¨'(OE)(MED1)(MED2)(MED3)en(B)(C) ;
*o(OE)(MED1)(MED2)(MED3)en+(B)+(C) :: *o¨'(OE)(MED1)(MED2)(MED3)en(B)(C) ;
*u(OE)(MED1)(MED2)(MED3)en+(B)+(C) :: *u¨'(OE)(MED1)(MED2)(MED3)en(B)(C) ;

$RL 4
{ 1st person pl. + se; compremos - compre¨'moselo }

*amos + se + (C) :: *a¨'mose(C) ;
*emos + se + (C) :: *e¨'mose(C) ;

$RL 5
{ irregular Imperativo-forms }

*po¨'n +  (B) + (C) :: *po¨'n(B)(C) ;
*haz +  (B) + (C) :: *haz(B)(C) ;
*sal +  (B) + (C) :: *sal(B)(C) ;
*val +  (B) + (C) :: *val(B)(C) ;
*esta¨' + (B) + (C) :: *esta¨'(B)(C) ;
*este¨' + (B) + (C) :: *este¨'(B)(C) ;
*de¨'   + (B) + (C) :: *de¨'(B)(C) ;

$NP
{ TYPE  RGLUE4; }

{ dividing a word into four segments }

{ infinitivo; comprar - compra¨'rtemelo }

TABLE

*ar + (D) + (E) + (F)  ::  *a¨'r(D)(E)(F) ;
*er + (D) + (E) + (F)  ::  *e¨'r(D)(E)(F) ;
*ir + (D) + (E) + (F)  ::  *i¨'r(D)(E)(F) ;

$RL 4
{ gerundio; comprando - compra¨'ndosemelo } 

*ando + (D) + (E) + (F)  ::  *a¨'ndo(D)(E)(F) ;
*endo + (D) + (E) + (F)  ::  *e¨'ndo(D)(E)(F) ;

$RL 9
{ Imperativo }

{ forms ending on -a; coma - co¨'masemelo }

*a(OE)(MED1)(MED2)(MED3)a+(D)+(E)+(F)::*a¨'(OE)(MED1)(MED2)(MED3)a(D)(E)(F) ;
*e(OE)(MED1)(MED2)(MED3)a+(D)+(E)+(F)::*e¨'(OE)(MED1)(MED2)(MED3)a(D)(E)(F) ;
*i(OE)(MED1)(MED2)(MED3)a+(D)+(E)+(F)::*i¨'(OE)(MED1)(MED2)(MED3)a(D)(E)(F) ;
*o(OE)(MED1)(MED2)(MED3)a+(D)+(E)+(F)::*o¨'(OE)(MED1)(MED2)(MED3)a(D)(E)(F) ;
*u(OE)(MED1)(MED2)(MED3)a+(D)+(E)+(F)::*u¨'(OE)(MED1)(MED2)(MED3)a(D)(E)(F) ;

$RL 7
{ forms ending on -e; recibe - reci¨'besemelo }

*a(OE)(MED1)(MED2)(MED3)e+(D)+(E)+(F)::*a¨'(OE)(MED1)(MED2)(MED3)e(D)(E)(F) ;
*e(OE)(MED1)(MED2)(MED3)e+(D)+(E)+(F)::*e¨'(OE)(MED1)(MED2)(MED3)e(D)(E)(F) ;
*i(OE)(MED1)(MED2)(MED3)e+(D)+(E)+(F)::*i¨'(OE)(MED1)(MED2)(MED3)e(D)(E)(F) ;
*o(OE)(MED1)(MED2)(MED3)e+(D)+(E)+(F)::*o¨'(OE)(MED1)(MED2)(MED3)e(D)(E)(F) ;
*u(OE)(MED1)(MED2)(MED3)e+(D)+(E)+(F)::*u¨'(OE)(MED1)(MED2)(MED3)e(D)(E)(F) ;

$RL 4
{ 1st person pl.; demos - de¨'mostemelo }

*emos + (D) + (E) + (F)  ::  *e¨'mos(D)(E)(F) ;
*amos + (D) + (E) + (F)  ::  *a¨'mos(D)(E)(F) ;

$RL 4
{ 1st person pl. + se; demos - de¨'mosemelo }

*amos + se + (E) + (F)  ::  *a¨'mose(E)(F) ;
*emos + se + (E) + (F)  ::  *e¨'mose(E)(F) ;

$RL 5
{ 2nd person pl. } 

*ad + (D) + (E) + (F)  ::  *a¨'d(D)(E)(F) ;
*ed + (D) + (E) + (F)  ::  *e¨'d(D)(E)(F) ;
*id + (D) + (E) + (F)  ::  *i¨'d(D)(E)(F) ;

$RL 3
*ad + os + (H) + (G)  ::  *a¨'os(H)(G) ;
*ed + os + (H) + (G)  ::  *e¨'os(H)(G) ;
*id + os + (H) + (G)  ::  *i¨'os(H)(G) ;

$RL 5
{ irregular Imperativo-forms }

*po¨'n  + (D) + (E) + (F)  ::  *po¨'n(D)(E)(F) ;
*haz  + (D) + (E) + (F)  ::  *haz(D)(E)(F) ; 
*sal  + (D) + (E) + (F)  ::  *sal(D)(E)(F) ;
*val  + (D) + (E) + (F)  ::  *val(D)(E)(F) ;
*esta¨' + (D) + (E) + (F)  ::  *esta¨'(D)(E)(F) ;
*este¨' + (D) + (E) + (F)  ::  *este¨'(D)(E)(F) ;
*de¨'   + (D) + (E) + (F)  ::  *de¨'(D)(E)(F) ;

$A1 Segmentation-rules.
TYPE SUFFIX;

VAR

KLINK = [ a,e,i,o ]

TABLE

{ short imperativo 2nd ps.sg. }

sal       +  SFKirrImperatSg  :: sal ;          { 12    #30 }
sobresal  +  SFKirrImperatSg  :: sobresal ;     { 12 }
val       +  SFKirrImperatSg  :: val ;          { 11    #30 }
equival   +  SFKirrImperatSg  :: equival ;      { 11 }
pon       +  SFKirrImperatSg  :: pon ;          { 15    #37 }
antepon   +  SFKirrImperatSg  :: antepon ;      { 15 }   
compon    +  SFKirrImperatSg  :: compon ;       { 15 }
contrapon +  SFKirrImperatSg  :: contrapon ;    { 15 }
depon     +  SFKirrImperatSg  :: depon ;        { 15 }
descompon +  SFKirrImperatSg  :: descompon ;    { 15 }
dispon    +  SFKirrImperatSg  :: dispon ;       { 15 }
expon     +  SFKirrImperatSg  :: expon ;        { 15 }
impon     +  SFKirrImperatSg  :: impon ;        { 15 }
indispon  +  SFKirrImperatSg  :: indispon ;     { 15 }
interpon  +  SFKirrImperatSg  :: interpon ;     { 15 }
opon      +  SFKirrImperatSg  :: opon ;         { 15 }
pospon    +  SFKirrImperatSg  :: pospon ;       { 15 }
predispon +  SFKirrImperatSg  :: predispon ;    { 15 }
presupon  +  SFKirrImperatSg  :: presupon ;     { 15 }
propon    +  SFKirrImperatSg  :: propon ;       { 15 }
recompon  +  SFKirrImperatSg  :: recompon ;     { 15 }
repon     +  SFKirrImperatSg  :: repon ;        { 15 }
sobrepon  +  SFKirrImperatSg  :: sobrepon ;     { 15 }
supon     +  SFKirrImperatSg  :: supon ;        { 15 }
superpon  +  SFKirrImperatSg  :: superpon ;     { 15 }
traspon   +  SFKirrImperatSg  :: traspon ;      { 15 }
yuxtapon  +  SFKirrImperatSg  :: yuxtapon ;     { 15 }
ten       +  SFKirrImperatSg  :: ten ;          { 16    #43 }
aten      +  SFKirrImperatSg  :: aten ;         { 16 } 
conten    +  SFKirrImperatSg  :: conten ;       { 16 } 
deten     +  SFKirrImperatSg  :: deten ;        { 16 } 
entreten  +  SFKirrImperatSg  :: entreten ;     { 16 } 
manten    +  SFKirrImperatSg  :: manten ;       { 16 } 
obten     +  SFKirrImperatSg  :: obten ;        { 16 } 
reten     +  SFKirrImperatSg  :: reten ;        { 16 } 
sosten    +  SFKirrImperatSg  :: sosten ;       { 16 } 
ven       +  SFKirrImperatSg  :: ven ;          { 17    #45 }
adven     +  SFKirrImperatSg  :: adven ;        { 17 } 
conven    +  SFKirrImperatSg  :: conven ;       { 17 } 
contraven +  SFKirrImperatSg  :: contraven ;    { 17 } 
deven     +  SFKirrImperatSg  :: deven ;        { 17 } 
interven  +  SFKirrImperatSg  :: interven ;     { 17 } 
preven    +  SFKirrImperatSg  :: preven ;       { 17 } 
proven    +  SFKirrImperatSg  :: proven ;       { 17 } 
sobreven  +  SFKirrImperatSg  :: sobreven ;     { 17 } 
subven    +  SFKirrImperatSg  :: subven ;       { 17 } 


{ "strong" Ptc.pasado }

romp     +  SFKirrPtcPasMascSg  ::  roto ;        { 4   #2 }
romp     +  SFKirrPtcPasMascPl  ::  rotos ;       { 4 }
romp     +  SFKirrPtcPasFemSg   ::  rota ;        { 4 }
romp     +  SFKirrPtcPasFemPl   ::  rotas ;       { 4 }

prend    +  SFKirrPtcPasMascSg  ::  preso ;       { 4 }
prend    +  SFKirrPtcPasMascPl  ::  presos ;      { 4 }
prend    +  SFKirrPtcPasFemSg   ::  presa ;       { 4 }
prend    +  SFKirrPtcPasFemPl   ::  presas ;      { 4 }

solv     +  SFKirrPtcPasMascSg  ::  suelto ;      { 4   #3 }
solv     +  SFKirrPtcPasMascPl  ::  sueltos ;     { 4 }
solv     +  SFKirrPtcPasFemSg   ::  suelta ;      { 4 }
solv     +  SFKirrPtcPasFemPl   ::  sueltas ;     { 4 }

absolv   +  SFKirrPtcPasMascSg  ::  absuelto ;    { 4 }
absolv   +  SFKirrPtcPasMascPl  ::  absueltos ;   { 4 }
absolv   +  SFKirrPtcPasFemSg   ::  absuelta ;    { 4 }
absolv   +  SFKirrPtcPasFemPl   ::  absueltas ;   { 4 }

volv     +  SFKirrPtcPasMascSg  ::  vuelto ;      { 4 }
volv     +  SFKirrPtcPasMascPl  ::  vueltos ;     { 4 }
volv     +  SFKirrPtcPasFemSg   ::  vuelta ;      { 4 }
volv     +  SFKirrPtcPasFemPl   ::  vueltas ;     { 4 } 

devolv   +  SFKirrPtcPasMascSg  ::  devuelto ;    { 4 }
devolv   +  SFKirrPtcPasMascPl  ::  devueltos ;   { 4 }
devolv   +  SFKirrPtcPasFemSg   ::  devuelta ;    { 4 }
devolv   +  SFKirrPtcPasFemPl   ::  devueltas ;   { 4 } 

disolv   +  SFKirrPtcPasMascSg  ::  disuelto ;    { 4 }
disolv   +  SFKirrPtcPasMascPl  ::  disueltos ;   { 4 }
disolv   +  SFKirrPtcPasFemSg   ::  disuelta ;    { 4 }
disolv   +  SFKirrPtcPasFemPl   ::  disueltas ;   { 4 } 

envolv   +  SFKirrPtcPasMascSg  ::  envuelto ;    { 4 }
envolv   +  SFKirrPtcPasMascPl  ::  envueltos ;   { 4 }
envolv   +  SFKirrPtcPasFemSg   ::  envuelta ;    { 4 }
envolv   +  SFKirrPtcPasFemPl   ::  envueltas ;   { 4 } 

v        +  SFKirrPtcPasMascSg  ::  visto ;       { 4   #18 } 
v        +  SFKirrPtcPasMascPl  ::  vistos ;      { 4 }
v        +  SFKirrPtcPasFemSg   ::  vista ;       { 4 }
v        +  SFKirrPtcPasFemPl   ::  vistas ;      { 4 }

prev     +  SFKirrPtcPasMascSg  ::  previsto ;    { 4 }
prev     +  SFKirrPtcPasMascPl  ::  previstos ;   { 4 }
prev     +  SFKirrPtcPasFemSg   ::  prevista ;    { 4 }
prev     +  SFKirrPtcPasFemPl   ::  previstas ;   { 4 }

prove    +  SFKirrPtcPasMascSg  ::  provisto ;    { 4   #17 } 
prove    +  SFKirrPtcPasMascPl  ::  provistos ;   { 4 }
prove    +  SFKirrPtcPasFemSg   ::  provista ;    { 4 }
prove    +  SFKirrPtcPasFemPl   ::  provistas ;   { 4 }

abr      +  SFKirrPtcPasMascSg  ::  abierto ;     { 5   #2  }
abr      +  SFKirrPtcPasMascPl  ::  abiertos ;    { 5 }
abr      +  SFKirrPtcPasFemSg   ::  abierta ;     { 5 }
abr      +  SFKirrPtcPasFemPl   ::  abiertas ;    { 5 }

cubr     +  SFKirrPtcPasMascSg  ::  cubierto ;    { 5 }
cubr     +  SFKirrPtcPasMascPl  ::  cubiertos ;   { 5 }
cubr     +  SFKirrPtcPasFemSg   ::  cubierta ;    { 5 }
cubr     +  SFKirrPtcPasFemPl   ::  cubiertas ;   { 5 } 

desabr   +  SFKirrPtcPasMascSg  ::  desabierto ;  { 5 }
desabr   +  SFKirrPtcPasMascPl  ::  desabiertos ; { 5 }
desabr   +  SFKirrPtcPasFemSg   ::  desabierta ;  { 5 }
desabr   +  SFKirrPtcPasFemPl   ::  desabiertas ; { 5 } 

encubr   +  SFKirrPtcPasMascSg  ::  encubierto ;  { 5 }
encubr   +  SFKirrPtcPasMascPl  ::  encubiertos ; { 5 }
encubr   +  SFKirrPtcPasFemSg   ::  encubierta ;  { 5 }
encubr   +  SFKirrPtcPasFemPl   ::  encubiertas ; { 5 } 

escrib   +  SFKirrPtcPasMascSg  ::  escrito ;     { 5 }
escrib   +  SFKirrPtcPasMascPl  ::  escritos ;    { 5 }
escrib   +  SFKirrPtcPasFemSg   ::  escrita ;     { 5 }
escrib   +  SFKirrPtcPasFemPl   ::  escritas ;    { 5 } 

fre      +  SFKirrPtcPasMascSg  ::  frito ;       { 5 }
fre      +  SFKirrPtcPasMascPl  ::  fritos ;      { 5 }
fre      +  SFKirrPtcPasFemSg   ::  frita ;       { 5 }
fre      +  SFKirrPtcPasFemPl   ::  fritas ;      { 5 } 

imprim   +  SFKirrPtcPasMascSg  ::  impreso ;     { 5 ; eventueel imprimido } 
imprim   +  SFKirrPtcPasMascPl  ::  impresos ;    { 5 }
imprim   +  SFKirrPtcPasFemSg   ::  impresa ;     { 5 }
imprim   +  SFKirrPtcPasFemPl   ::  impresas ;    { 5 }

suscrib  +  SFKirrPtcPasMascSg  ::  suscrito ;    { 5 }
suscrib  +  SFKirrPtcPasMascPl  ::  suscritos ;   { 5 }
suscrib  +  SFKirrPtcPasFemSg   ::  suscrita ;    { 5 }
suscrib  +  SFKirrPtcPasFemPl   ::  suscritas ;   { 5 } 

solt     +  SFKirrPtcPasMascSg  ::  suelto ;      { 6 }
solt     +  SFKirrPtcPasMascPl  ::  sueltos ;     { 6 }
solt     +  SFKirrPtcPasFemSg   ::  suelta ;      { 6 }
solt     +  SFKirrPtcPasFemPl   ::  sueltas ;     { 6 } 

despert  +  SFKirrPtcPasMascSg  ::  despierto ;   { 6 }
despert  +  SFKirrPtcPasMascPl  ::  despiertos ;  { 6 }
despert  +  SFKirrPtcPasFemSg   ::  despierta ;   { 6 }
despert  +  SFKirrPtcPasFemPl   ::  despiertas ;  { 6 } 



{ irregular 1st ps.sg.Pres.Ind. }

sab      +  SFKirr1psSgInd ::  se¨' ;         { 14   #42 }


{ irregular infinitivo }

prove    +  SFKirrInf      ::  proveer ;    { 18   #18 }


{ regular verb-endings }

*    +    SFKo         ::     *o ;
*    +    SFKas        ::     *as ;
*    +    SFKa         ::     *a ;
*    +    SFKamos      ::     *amos ;
*    +    SFKa1is      ::     *a¨'is ;
*    +    SFKan        ::     *an ;
*    +    SFKaba       ::     *aba ;
*    +    SFKabas      ::     *abas ;
*    +    SFKa1bamos   ::     *a¨'bamos ;
*    +    SFKabais     ::     *abais ;
*    +    SFKaban      ::     *aban ;
*    +    SFKe1        ::     *e¨' ;
*    +    SFKaste      ::     *aste ;
*    +    SFKo1        ::     *o¨' ;
*    +    SFKasteis    ::     *asteis ;
*    +    SFKaron      ::     *aron ;
*    +    SFKare1      ::     *are¨' ;
*    +    SFKara1s     ::     *ara¨'s ;
*    +    SFKara1      ::     *ara¨' ;
*    +    SFKaremos    ::     *aremos ;
*    +    SFKare1is    ::     *are¨'is ;
*    +    SFKara1n     ::     *ara¨'n ;
*    +    SFKari1a     ::     *ari¨'a ;
*    +    SFKari1as    ::     *ari¨'as ;
*    +    SFKari1amo   ::     *ari¨'amos ;
*    +    SFKari1ais   ::     *ari¨'ais ;
*    +    SFKari1an    ::     *ari¨'an ;
*    +    SFKad        ::     *ad ;
*    +    SFKando      ::     *ando ;
*    +    SFKado       ::     *ado ;
*    +    SFKe         ::     *e ;
*    +    SFKes        ::     *es ;
*    +    SFKen        ::     *en ;
*    +    SFKara       ::     *ara ;
*    +    SFKaras      ::     *aras ;
*    +    SFKa1ramos   ::     *a¨'ramos ;
*    +    SFKarais     ::     *arais ;
*    +    SFKaran      ::     *aran ;
*    +    SFKase       ::     *ase ;
*    +    SFKases      ::     *ases ;
*    +    SFKa1semos   ::     *a¨'semos ;
*    +    SFKaseis     ::     *aseis ;
*    +    SFKasen      ::     *asen ;
*    +    SFKi1a       ::     *i¨'a ;
*    +    SFKi1as      ::     *i¨'as ;
*    +    SFKi1amos    ::     *i¨'amos ;
*    +    SFKi1ais     ::     *i¨'ais ;
*    +    SFKi1an      ::     *i¨'an ;
*    +    SFKi1        ::     *i¨' ;
*    +    SFKiste      ::     *iste ;
*    +    SFKio1       ::     *io¨' ;
*    +    SFKisteis    ::     *isteis ;
*    +    SFKieron     ::     *ieron ;
*    +    SFKere1      ::     *ere¨' ;
*    +    SFKera1s     ::     *era¨'s ;
*    +    SFKera1      ::     *era¨' ;
*    +    SFKeremos    ::     *eremos ;
*    +    SFKere1is    ::     *ere¨'is ;
*    +    SFKera1n     ::     *era¨'n ;
*    +    SFKeri1a     ::     *eri¨'a ;
*    +    SFKeri1as    ::     *eri¨'as ;
*    +    SFKeri1amos  ::     *eri¨'amos ;
*    +    SFKeri1ais   ::     *eri¨'ais ;
*    +    SFKeri1an    ::     *eri¨'an ;
*    +    SFKed        ::     *ed ;
*    +    SFKiera      ::     *iera ;
*    +    SFKieras     ::     *ieras ;
*    +    SFKie1ramos  ::     *ie¨'ramos ;
*    +    SFKierais    ::     *ierais ;
*    +    SFKieran     ::     *ieran ;
*    +    SFKiese      ::     *iese ;
*    +    SFKieses     ::     *ieses ;
*    +    SFKie1semos  ::     *ie¨'semos ;
*    +    SFKieseis    ::     *ieseis ;
*    +    SFKiesen     ::     *iesen ;
*    +    SFKiendo     ::     *iendo ;
*    +    SFKido       ::     *ido ;
*    +    SFKimos      ::     *imos ;
*    +    SFKi1s       ::     *i¨'s ;
*    +    SFKire1      ::     *ire¨' ; 
*    +    SFKira1s     ::     *ira¨'s ;
*    +    SFKira1      ::     *ira¨' ;
*    +    SFKiremos    ::     *iremos ;
*    +    SFKire1is    ::     *ire¨'is ;
*    +    SFKira1n     ::     *ira¨'n ;
*    +    SFKiri1a     ::     *iri¨'a ;
*    +    SFKiri1as    ::     *iri¨'as ;
*    +    SFKiri1amos  ::     *iri¨'amos ;
*    +    SFKiri1ais   ::     *iri¨'ais ;
*    +    SFKiri1an    ::     *iri¨'an ;
*    +    SFKid        ::     *id ;
*    +    SFKar        ::     *ar ;
*    +    SFKer        ::     *er ;
*    +    SFKir        ::     *ir ;

{ irregular verb-endings }

{ strong PD-endings are not included below, since they all occur in
  the regular list.                                                   }

{ irregular futuro-endings }

*    +    SFKre1       ::     *re¨' ;
*    +    SFKra1s      ::     *ra¨'s ;
*    +    SFKra1       ::     *ra¨' ;
*    +    SFKremos     ::     *remos ;
*    +    SFKre1is     ::     *re¨'is ;
*    +    SFKra1n      ::     *ra¨'n ;

*    +    SFKdre1      ::     *dre¨' ;
*    +    SFKdra1s     ::     *dra¨'s ;
*    +    SFKdra1      ::     *dra¨' ;
*    +    SFKdremos    ::     *dremos ;
*    +    SFKdre1is    ::     *dre¨'is ;
*    +    SFKdra1n     ::     *dra¨'n ;

$NP

{ general spellingrules }

{ after n¨~ the unstressed i of the verb-ending is deleted: 
                   *rin¨~io¨' --> rin¨~o¨'                                 }

*n¨~  +  SFKio1        ::  *n¨~o¨' ;
*n¨~  +  SFKieron      ::  *n¨~eron ;
*n¨~  +  SFKiera       ::  *n¨~era ;
*n¨~  +  SFKieras      ::  *n¨~eras ;
*n¨~  +  SFKie1ramos   ::  *n¨~e¨'ramos ;
*n¨~  +  SFKierais     ::  *n¨~erais ;
*n¨~  +  SFKieran      ::  *n¨~eran ;
*n¨~  +  SFKiese       ::  *n¨~ese ;
*n¨~  +  SFKieses      ::  *n¨~eses ;
*n¨~  +  SFKie1semos   ::  *n¨~e¨'semos ;
*n¨~  +  SFKieseis     ::  *n¨~eseis ;
*n¨~  +  SFKiesen      ::  *n¨~esen ;
*n¨~  +  SFKiendo      ::  *n¨~endo ;


{ after ll the unstressed i of the verb-ending is deleted: 
                     *mullio¨' --> mullo¨'                        }

*ll  +  SFKio1       ::  *o¨' ;
*ll  +  SFKieron     ::  *eron ;
*ll  +  SFKiera      ::  *era ;
*ll  +  SFKieras     ::  *eras ;
*ll  +  SFKie1ramos  ::  *e¨'ramos ;
*ll  +  SFKierais    ::  *erais ;
*ll  +  SFKieran     ::  *eran ;
*ll  +  SFKiese      ::  *ese ;
*ll  +  SFKieses     ::  *eses ;
*ll  +  SFKie1semos  ::  *e¨'semos ;
*ll  +  SFKieseis    ::  *eseis ;
*ll  +  SFKiesen     ::  *esen ;
*ll  +  SFKiendo     ::  *endo ;


{ after y the unstressed i of the verb-ending is deleted: leyio¨' --> leyo¨' }

*y   +  SFKio1       ::  *yo¨' ;
*y   +  SFKieron     ::  *yeron ;
*y   +  SFKiera      ::  *yera ;
*y   +  SFKieras     ::  *yeras ;
*y   +  SFKie1ramos  ::  *ye¨'ramos ;
*y   +  SFKierais    ::  *yerais ;
*y   +  SFKieran     ::  *yeran ;
*y   +  SFKiese      ::  *yese ;
*y   +  SFKieses     ::  *yeses ;
*y   +  SFKie1semos  ::  *ye¨'semos ;
*y   +  SFKieseis    ::  *yeseis ;
*y   +  SFKiesen     ::  *yesen ;
*y   +  SFKiendo     ::  *yendo ;


{ If the stem is ending on a strong vowel, an accent is placed on the
  unstressed initial i of the verb-ending: re+imos --> rei¨'mos            } 

*(KLINK) + SFKimos    ::  *(KLINK)i¨'mos ;
*(KLINK) + SFKiste    ::  *(KLINK)i¨'ste ;
*(KLINK) + SFKisteis  ::  *(KLINK)i¨'steis ;
*(KLINK) + SFKido     ::  *(KLINK)i¨'do ;
*(KLINK) + SFKir      ::  *(KLINK)i¨'r ;

{ NB. I assume rei¨'r/oi¨'r bear an accent too, although this isn't necessary }


{ reir: allomorf ri¨' + io¨' --> rio¨' }

*i¨'  +  SFKio1    ::  *io¨'  ;


{ verbs ending on -ar:                                                     } 
{ stem on g + V-ending starting with e --> u-inclusion: lleg + e --> llegue¨'}
{  i.e.:  before e/i : gu                                                  }
{         before a/o : g                                                   }

*g   +  SFKe      ::  *gue ;
*g   +  SFKes     ::  *gues ;
*g   +  SFKemos   ::  *guemos ;
*g   +  SFKe1is   ::  *gue¨'is ;
*g   +  SFKen     ::  *guen ;
*g   +  SFKe1     ::  *gue¨' ;


{ verbs ending on -er/-ir:                                            }
{ stem ending on gu + V-ending starting with o/a --> the u is deleted }
{ distingu + o --> distingo                                           }  
{ i.e.:   before e/i : gu                                             }
{         before a/o : g                                              }

*gu  +  SFKo      ::  *go ;
*gu  +  SFKa      ::  *ga ;
*gu  +  SFKas     ::  *gas ;
*gu  +  SFKamos   ::  *gamos ;
*gu  +  SFKa1is   ::  *ga¨'is ;
*gu  +  SFKan     ::  *gan ;


{ verbs ending on -er/-ir:                                           }
{ stem ending on g + V-ending starting with a/o --> g turns into j   }
{ cog + amos --> cojamos                                             }
{ dus:   before e/i : g                                              }
{        before a/o : j                                              }

*g  +  SFKo      ::  *jo ;
*g  +  SFKa      ::  *ja ;
*g  +  SFKas     ::  *jas ;
*g  +  SFKamos   ::  *jamos ;
*g  +  SFKa1is   ::  *ja¨'is ;
*g  +  SFKan     ::  *jan ;


{ verbs ending on -ar:                                              }
{ stem ending on z + ending starting with e/i --> z turns into c    }
{ cruz + e --> cruce                                                }
{ i.e.:  before a/o : z                                             }
{        before e/i : c                                             }

*z   +   SFKe      ::  *ce ;
*z   +   SFKes     ::  *ces ;
*z   +   SFKemos   ::  *cemos ;
*z   +   SFKe1is   ::  *ce¨'is ;
*z   +   SFKen     ::  *cen ;


{ verbs ending on -er/-ir:                                         }
{ stem ending on c + ending starting with a/o --> c turns into z   }
{ venc + o --> venzo                                               }
{ i.e.:    before e/i : c                                          }
{          before a/o : z                                          }

*c   +  SFKo       ::  *zo ;
*c   +  SFKa       ::  *za ;
*c   +  SFKas      ::  *zas ;
*c   +  SFKamos    ::  *zamos ;
*c   +  SFKa1is    ::  *za¨'is ;
*c   +  SFKan      ::  *zan ;


{ verbs ending on -ar:                                                  }
{ stem ending on c + V-ending starting with e --> c turns into qu       }
{ busc + e --> busque                                                   }
{ i.e.:   before a/o : c                                                }
{         before e   : qu                                               }
{ NB. V-ending starting with i doesn't occur with verbs ending on -ar!! }

*c    +  SFKe        ::  *que ;
*c    +  SFKes       ::  *ques ;
*c    +  SFKemos     ::  *quemos ;
*c    +  SFKe1is     ::  *que¨'is ;
*c    +  SFKen       ::  *quen ;
*c    +  SFKe1       ::  *que¨' ;


{ ------------------------------------  end V }

{ Comparativo Adj and Adv }
{ ATTRIBUTE:  irrComp ( si,no ) }

bueno    +   SFKirrCompar     ::  mejor ;      { Adj }
malo     +   SFKirrCompar     ::  peor ;       { Adj }

grande   +   SFKirrCompar     ::  mayor ;      { Adj }
pequen¨~o  +   SFKirrCompar     ::  menor ;      { Adj }

viejo    +   SFKirrCompar     ::  mayor ;      { Adj }
joven    +   SFKirrCompar     ::  menor ;      { Adj }

mal      +   SFKirrCompar     ::  peor ;       { Adv }
bien     +   SFKirrCompar     ::  mejor ;      { Adv }
mucho    +   SFKirrCompar     ::  ma¨'s ;        { Adv }
poco     +   SFKirrCompar     ::  menor ;      { Adv }

{------------------------------}

{ Interrogative pronouns }

quie¨'n    +   SFKirrPL    ::  quie¨'nes ;
cua¨'l     +   SFKirrPL    ::  cua¨'les ;
que¨'      +   SFKirrPL    ::  que¨' ;

{ cua¨'nto has flexion for gender and plural, using SFKregFEM / SFKregPL } 
{ attribute "femforma" with values yes/no                              }

{------------------------------}

{ Relative pronouns and adjectives are all included in the lexicon:
       RELPRO:   quien 
                 quienes
                 
                 el que
                 la que
                 los que
                 las que

                 el cual
                 la cual
                 los cuales
                 las cuales

       RELADJ:   cuyo   (concordgenero: mascul
                         concordnumero: sing  )
                 cuya   (femin,sing)
                 cuyos  (mascul,plur)
                 cuyas  (femin,plur)                                     }

{---------------------------}

{ demonstrative adjectives } 

ese    +   SFKfemDEMADJsg   ::  esa ;
ese    +   SFKmascDEMADJpl  ::  esos ;
ese    +   SFKfemDEMADJpl   ::  esas ;

este   +   SFKfemDEMADJsg   ::  esta ;
este   +   SFKmascDEMADJpl  ::  estos ;
este   +   SFKfemDEMADJpl   ::  estas ;

aquel  +   SFKfemDEMADJsg   ::  aquella ;
aquel  +   SFKmascDEMADJpl  ::  aquellos ;
aquel  +   SFKfemDEMADJpl   ::  aquellas ;


{ demonstrative pronouns }

e¨'se    +   SFKfemDEMPROsg   ::  e¨'sa ;
e¨'se    +   SFKmascDEMPROpl  ::  e¨'sos ;
e¨'se    +   SFKfemDEMPROpl   ::  e¨'sas ;

e¨'ste   +   SFKfemDEMPROsg   ::  e¨'sta ;
e¨'ste   +   SFKmascDEMPROpl  ::  e¨'stos ;
e¨'ste   +   SFKfemDEMPROpl   ::  e¨'stas ;

aque¨'l  +   SFKfemDEMPROsg   ::  aque¨'lla ;
aque¨'l  +   SFKmascDEMPROpl  ::  aque¨'llos ;
aque¨'l  +   SFKfemDEMPROpl   ::  aque¨'llas ;

$NP
TYPE RSUFFIX;

VAR

KLINK  = [ a,e,i,o,u ] 

MED    = [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z ]

MEDnoZ = [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x ]     { all consonants except z }

MED1   = [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ]

MED2   = [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ]

MED3   = [ b,c,d,f,g,j,l,m,n,n¨~,p,q,r,s,t,v,x,z, ]

NS     = [ n,s ]

ME     = [ b,c,d,f,g,j,l,m,n¨~,p,q,r,t,v,x,z, ] { all consonants except n/s }

SE   = [ i,u ]


TABLE

{ pluralformation; Suffixkeys:  SFKregPL
                                SFKirrPL
                                SFKextranPL                    }

{ NOUN/ADJ ending on a vowel (not y!!) or a stressed e¨' :  + -s }

*e¨'        +   SFKregPL    ::    *e¨'s ;                 { cafe¨'s }
*(KLINK)  +   SFKregPL    ::    *(KLINK)s ;           { rosas; hermosos }


{ ZN/ADJ ending on consonant or on y :  + -es }
{ ZN/ADJ ending om z: -ces                    }

*(MEDnoZ) +   SFKregPL   ::    *(MEDnoZ)es ;         { pieles; fieles }
*y        +   SFKregPL   ::    *yes ;                { reyes }
*z        +   SFKregPL   ::    *ces ;                { rai¨'z-rai¨'ces }


{ ZN/ADJ ending on stressed vowel, except e¨' : -s or -es } 

*a¨'        +   SFKregPL    ::    *a¨'s ;       { sora¨'s/sora¨'es }
*a¨'        +   SFKregPL   ::     *a¨'es ;

*i¨'        +   SFKregPL    ::    *i¨'s ;       { jabali¨'s/jabali¨'es }
*i¨'        +   SFKregPL   ::     *i¨'es ;

*o¨'        +   SFKregPL    ::    *o¨'s ;       { domino¨'/domino¨'es }
*o¨'        +   SFKregPL   ::     *o¨'es ;

*u¨'        +   SFKregPL    ::    *u¨'s ;       { menu¨'s/menu¨'es }
*u¨'        +   SFKregPL   ::     *u¨'es ;

{ It could be decided to choose either -s or -es for generation }


{ but: }

papa¨'      +   SFKirrPL   ::   papa¨'s ;
mama¨'      +   SFKirrPL   ::   mama¨'s ;

{Exception: NOUN on s or x in an unstressed syllable is in het plural
           similar to the singular form:  crisis - crisis / lunes - lunes   
           This is indicated in the lexicon by the ATTRIBUTE-value "sincambio")
           of the Attribute "plural".
           The Lextree-rules don't add a SFK.                                 }


{ Loanwords have pluralformation with -s;  jersey - jerseys                  
  In many cases the final consonant is omitted and -s or -es added for plural:
                       cabare¨' (<cabaret)       - cabare¨'s
                       chale¨' (<chalet)         - chale¨'s
                       hipe¨'rbato (<hiperbaton) - hipe¨'rbatos
                       lor (<lord)             - lores
  
  -s can also be used in cases where this leads to unusual consonantclusters;
  Sometimes -es is also correct:   co¨'ctel:  co¨'cte`ls` - co¨'cteles
                                   sue¨'ter:  sue¨'te`rs` - sue¨'teres
                                   gol:     go`ls`    - goles
                                   film:    fil`ms`   - filmes          

  sometimes it isn't:              club:         clubs   (*clubes)
                                   con¨~ac:        con¨~acs
                                   frac:         fracs
                                   kindergarten: kindergartens               }

*     +    SFKextranPL     ::   *s ;

{ --> For generation I assume that all loanwords take -s for pluralformation }
{ ATTRIBUTE:  plural (value: "extran")                                       }


{ Family-names don't take a plural suffix:
                               los Lo¨'pez                                     }


{ Stress is usually maintained in the plural word; consequently an accent
  can appear or disappear:                                          

  words ending on a stressed vowel + n/s loose their accent: 
                                                      holgaza¨'n - holgazanes  
                                                      estacio¨'n - estaciones  }

*a¨'(NS)    +   SFKregPL    ::    *a(NS)es ;
*e¨'(NS)    +   SFKregPL    ::    *e(NS)es ;
*i¨'(NS)    +   SFKregPL    ::    *i(NS)es ;
*o¨'(NS)    +   SFKregPL    ::    *o(NS)es ;
*u¨'(NS)    +   SFKregPL    ::    *u(NS)es ;


{ in cases where an accent must be added the rule is more complex:
                    joven - jo¨'venes                                          }

*a(MED1)(MED2)(MED3)(KLINK)(NS)+SFKregPL 
                                    ::*a¨'(MED1)(MED2)(MED3)(KLINK)(NS)es;
*e(MED1)(MED2)(MED3)(KLINK)(NS)+SFKregPL 
                                    ::*e¨'(MED1)(MED2)(MED3)(KLINK)(NS)es;
*i(MED1)(MED2)(MED3)(KLINK)(NS)+SFKregPL 
                                    ::*i¨'(MED1)(MED2)(MED3)(KLINK)(NS)es;
*o(MED1)(MED2)(MED3)(KLINK)(NS)+SFKregPL 
                                    ::*o¨'(MED1)(MED2)(MED3)(KLINK)(NS)es;
*u(MED1)(MED2)(MED3)(KLINK)(NS)+SFKregPL
                                    ::*u¨'(MED1)(MED2)(MED3)(KLINK)(NS)es;


{ exceptions: cases where the accent changes in the pronounciation.         }

cara¨'cter   +   SFKirrPL    ::  caracteres ;
re¨'gimen    +   SFKirrPL    ::  regi¨'menes ;
espe¨'cimen  +   SFKirrPL    ::  especi¨'menes ;

{---------------------------------------------}

{ ADJs with shortened forms }

bueno        +   SFKapocope   ::  buen ;
malo         +   SFKapocope   ::  mal ;
primero      +   SFKapocope   ::  primer ;
tercero      +   SFKapocope   ::  tercer ;
postrero     +   SFKapocope   ::  postrer ;
uno          +   SFKapocope   ::  un ;
alguno       +   SFKapocope   ::  algu¨'n ; {also frequently before fem.nouns}
ninguno      +   SFKapocope   ::  ningu¨'n ; { starting on a stressed a !!   }
Santo        +   SFKapocope   ::  San ; { before masc.`names`; except      }
                                        {  Toma¨'s, Toribio, Domingo         }
ciento       +   SFKapocope   ::  cien ;
 
grande       +   SFKapocope   ::  gran ;
cualquiera   +   SFKapocope   ::  cualquier ;

{----------------------------------}

{ ADJ: masc -->  fem }

*o    +   SFKregFEM    ::   *a ;   { guapo-guapa }
*a    +   SFKregFEM    ::   *a ;   { comunista-comunista }

{ NB. comunista/comunista  - "sincambio" }

*a¨'(NS)    +   SFKregFEM    ::    *a(NS)a ;  { holgaza¨'n - holgazana }
*e¨'(NS)    +   SFKregFEM    ::    *e(NS)a ;
*i¨'(NS)    +   SFKregFEM    ::    *i(NS)a ;
*o¨'(NS)    +   SFKregFEM    ::    *o(NS)a ;
*u¨'(NS)    +   SFKregFEM    ::    *u(NS)a ;


{ in cases where an accent must be added the rule is more complex }
{                EXAMPLE ?????  ( *jo¨'vena --> jo¨'ven )             }

*a(MED1)(MED2)(MED3)(KLINK)(NS) + SFKregFEM 
                                    :: *a¨'(MED1)(MED2)(MED3)(KLINK)(NS)a ;
*e(MED1)(MED2)(MED3)(KLINK)(NS) + SFKregFEM 
                                    :: *e¨'(MED1)(MED2)(MED3)(KLINK)(NS)a ;
*i(MED1)(MED2)(MED3)(KLINK)(NS) + SFKregFEM 
                                    :: *i¨'(MED1)(MED2)(MED3)(KLINK)(NS)a ;
*o(MED1)(MED2)(MED3)(KLINK)(NS) + SFKregFEM 
                                    :: *o¨'(MED1)(MED2)(MED3)(KLINK)(NS)a ;
*u(MED1)(MED2)(MED3)(KLINK)(NS) + SFKregFEM 
                                    :: *u¨'(MED1)(MED2)(MED3)(KLINK)(NS)a ;


{ It must be marked in the lexicon if an ADJ ending on a consonant undergoes 
  a morphological change or not:  feliz - feliz (*felica)
                                  trabajador - trabajadora                   }

$NP
TYPE FREEFIX;

{ allomorphs with diphtongization: e --> ie / o --> ue }
{    or with an accent on the end-i/u                  }                    

absolv    +  SFKdiftong    ::  absuelv ;          { 4   #3 }
despert   +  SFKdiftong    ::  despiert ;         { 5'  #4 }
acord     +  SFKdiftong    ::  acuerd ;           { 1   #5 }
acorn     +  SFKdiftong    ::  acuern ;           { 1 }
acost     +  SFKdiftong    ::  acuest ;           { 1 }
almorz    +  SFKdiftong    ::  almuerz ;          { 1 }
apost     +  SFKdiftong    ::  apuest ;           { 1 }
aprob     +  SFKdiftong    ::  aprueb ;           { 1 }
asol      +  SFKdiftong    ::  asuel ;            { 1 }
atron     +  SFKdiftong    ::  atruen ;           { 1 }
avergonz  +  SFKdiftong    ::  averguenz ;        { 1 }
col       +  SFKdiftong    ::  cuel ;             { 1 }
colg      +  SFKdiftong    ::  cuelg ;            { 1 }
comprob   +  SFKdiftong    ::  comprueb ;         { 1 }
concord   +  SFKdiftong    ::  concuerd ;         { 1 }
consol    +  SFKdiftong    ::  consuel ;          { 1 }
cont      +  SFKdiftong    ::  cuent ;            { 1 }
cost      +  SFKdiftong    ::  cuest ;            { 1 }
degoll    +  SFKdiftong    ::  deguell ;          { 1 }
derroc    +  SFKdiftong    ::  derruec ;          { 1 }
descont   +  SFKdiftong    ::  descuent ;         { 1 }
desoll    +  SFKdiftong    ::  desuell ;          { 1 }
encontr   +  SFKdiftong    ::  encuentr ;         { 1 }
engros    +  SFKdiftong    ::  engrues ;          { 1 }
esforz    +  SFKdiftong    ::  esfuerz ;          { 1 }
forz      +  SFKdiftong    ::  fuerz ;            { 1 }
mostr     +  SFKdiftong    ::  muestr ;           { 1 }
pobl      +  SFKdiftong    ::  puebl ;            { 1 }
prob      +  SFKdiftong    ::  prueb ;            { 1 }
record    +  SFKdiftong    ::  recuerd ;          { 1 }
reforz    +  SFKdiftong    ::  refuerz ;          { 1 }
renov     +  SFKdiftong    ::  renuev ;           { 1 }
reson     +  SFKdiftong    ::  resuen ;           { 1 }
revolc    +  SFKdiftong    ::  revuelc ;          { 1 }
rog       +  SFKdiftong    ::  rueg ;             { 1 }
sold      +  SFKdiftong    ::  sueld ;            { 1 }
son       +  SFKdiftong    ::  suen ;             { 1 }
son¨~       +  SFKdiftong    ::  suen¨~ ;             { 1 }
troc      +  SFKdiftong    ::  truec ;            { 1 }
tron      +  SFKdiftong    ::  truen ;            { 1 ; defectivo }
vol       +  SFKdiftong    ::  vuel ;             { 1 }
volc      +  SFKdiftong    ::  vuelc ;            { 1 }
dol       +  SFKdiftong    ::  duel ;             { 2   #5 }
coc       +  SFKdiftong    ::  cuec ;             { 2 }
escoc     +  SFKdiftong    ::  escuec ;           { 2 }
llov      +  SFKdiftong    ::  lluev ;            { 2 ; defectivo }
mord      +  SFKdiftong    ::  muerd ;            { 2 }
mov       +  SFKdiftong    ::  muev ;             { 2 }
recoc     +  SFKdiftong    ::  recuec ;           { 2 }
sol       +  SFKdiftong    ::  suel ;             { 2 }
torc      +  SFKdiftong    ::  tuerc ;            { 2 }
acert     +  SFKdiftong    ::  aciert ;           { 1   #6 }
alent     +  SFKdiftong    ::  alient ;           { 1 }
apacent   +  SFKdiftong    ::  apacient ;         { 1 }
apret     +  SFKdiftong    ::  apriet ;           { 1 }
arrend    +  SFKdiftong    ::  arriend ;          { 1 }
aterr     +  SFKdiftong    ::  atierr ;           { 1 }
atraves   +  SFKdiftong    ::  atravies ;         { 1 }
calent    +  SFKdiftong    ::  calient ;          { 1 }
ceg       +  SFKdiftong    ::  cieg ;             { 1 }
cerr      +  SFKdiftong    ::  cierr ;            { 1 }
comenz    +  SFKdiftong    ::  comienz ;          { 1 }
concert   +  SFKdiftong    ::  conciert ;         { 1 }
confes    +  SFKdiftong    ::  confies ;          { 1 }
deneg     +  SFKdiftong    ::  denieg ;           { 1 }
desalent  +  SFKdiftong    ::  desalient ;        { 1 }
desconcert+  SFKdiftong    ::  desconciert ;      { 1 }
desenterr +  SFKdiftong    ::  desentierr ;       { 1 }
desterr   +  SFKdiftong    ::  destierr ;         { 1 }
empez     +  SFKdiftong    ::  empiez ;           { 1 }
encerr    +  SFKdiftong    ::  encierr ;          { 1 }
encomend  +  SFKdiftong    ::  encomiend ;        { 1 }
enmend    +  SFKdiftong    ::  enmiend ;          { 1 }
enterr    +  SFKdiftong    ::  entierr ;          { 1 }
freg      +  SFKdiftong    ::  frieg ;            { 1 }
gobern    +  SFKdiftong    ::  gobiern ;          { 1 }
hel       +  SFKdiftong    ::  hiel ;             { 1 ; defectivo }
merend    +  SFKdiftong    ::  meriend ;          { 1 }
neg       +  SFKdiftong    ::  nieg ;             { 1 }
nev       +  SFKdiftong    ::  niev ;             { 1 ; defectivo }
pleg      +  SFKdiftong    ::  plieg ;            { 1 }
quebr     +  SFKdiftong    ::  quiebr ;           { 1 }
recalent  +  SFKdiftong    ::  recalient ;        { 1 }
leg       +  SFKdiftong    ::  lieg ;             { 1 }
remend    +  SFKdiftong    ::  remiend ;          { 1 }
revent    +  SFKdiftong    ::  revient ;          { 1 }
seg       +  SFKdiftong    ::  sieg ;             { 1 }
sembr     +  SFKdiftong    ::  siembr ;           { 1 }
sent      +  SFKdiftong    ::  sient ;            { 1 }
serr      +  SFKdiftong    ::  sierr ;            { 1 }
tembl     +  SFKdiftong    ::  tiembl ;           { 1 }
tropez    +  SFKdiftong    ::  tropiez ;          { 1 }
vent      +  SFKdiftong    ::  vient ;            { 1 ; defectivo }
ascend    +  SFKdiftong    ::  asciend ;          { 2   #6 }
atend     +  SFKdiftong    ::  atiend ;           { 2 }
cern      +  SFKdiftong    ::  ciern ;            { 2 }
condescend+  SFKdiftong    ::  condesciend ;      { 2 }
defend    +  SFKdiftong    ::  defiend ;          { 2 }
descend   +  SFKdiftong    ::  desciend ;         { 2 }
encend    +  SFKdiftong    ::  enciend ;          { 2 }
extend    +  SFKdiftong    ::  extiend ;          { 2 }
tend      +  SFKdiftong    ::  tiend ;            { 2 }
cern      +  SFKdiftong    ::  ciern ;            { 3   #6 }
concern   +  SFKdiftong    ::  conciern ;         { 3 ; defectivo }
discern   +  SFKdiftong    ::  disciern ;         { 3 }
sent      +  SFKdiftong    ::  sient ;            { 3   #7 }
adquer    +  SFKdiftong    ::  adquier ;          { 3   #8 }
ampli     +  SFKdiftong    ::  ampli¨' ;            { 1   #11 }
atavi     +  SFKdiftong    ::  atavi¨' ;           { 1 } 
chirri    +  SFKdiftong    ::  chirri¨' ;           { 1 }
confi     +  SFKdiftong    ::  confi¨' ;            { 1 } 
contrari  +  SFKdiftong    ::  contrari¨' ;         { 1 }
cri       +  SFKdiftong    ::  cri¨' ;              { 1 }
desafi    +  SFKdiftong    ::  desafi¨' ;           { 1 }
desconfi  +  SFKdiftong    ::  desconfi¨' ;         { 1 }
desvi     +  SFKdiftong    ::  desvi¨' ;            { 1 }
enfri     +  SFKdiftong    ::  enfri¨' ;            { 1 }
envi      +  SFKdiftong    ::  envi¨' ;             { 1 }
espi      +  SFKdiftong    ::  espi¨' ;             { 1 }
esqui     +  SFKdiftong    ::  esqui¨' ;            { 1 }
exceptu   +  SFKdiftong    ::  exceptu¨' ;          { 1 }
fi        +  SFKdiftong    ::  fi¨' ;               { 1 }
fotografi +  SFKdiftong    ::  fotografi¨' ;        { 1 }
gui       +  SFKdiftong    ::  gui¨' ;              { 1 }
li        +  SFKdiftong    ::  li¨' ;               { 1 }
pi        +  SFKdiftong    ::  pi¨' ;               { 1 }
roci      +  SFKdiftong    ::  roci¨' ;             { 1 }
telegrafi +  SFKdiftong    ::  telegrafi¨' ;        { 1 }
vaci      +  SFKdiftong    ::  vaci¨' ;             { 1 }
vari      +  SFKdiftong    ::  vari¨' ;             { 1 }
dorm      +  SFKdiftong    ::  duerm ;            { 3   #28 }
mor       +  SFKdiftong    ::  muer ;             { 5   #29 }
ergu      +  SFKdiftong    ::  yergu ;            { 3   #31 }
err       +  SFKdiftong    ::  yerr ;             { 1   #32 }
jug       +  SFKdiftong    ::  jueg ;             { 1   #33 }
ol        +  SFKdiftong    ::  huel ;             { 2   #34 }
pod       +  SFKdiftong    ::  pued ;             { 12  #35 }
quer      +  SFKdiftong    ::  quier ;            { 12  #38 }
re        +  SFKdiftong    ::  ri¨' ;               { 3   #39 }
reun      +  SFKdiftong    ::  reu¨'n ;             { 3   #50 }


{ allomorphs in which the consonant before the V-ending changes }  

agradec   +  SFKirrMedek   ::  agradezc ;         { 2 ; #9 }
aparec    +  SFKirrMedek   ::  aparezc ;          { 2 }
complac   +  SFKirrMedek   ::  complazc ;         { 2 }
conoc     +  SFKirrMedek   ::  conozc ;           { 2 }
crec      +  SFKirrMedek   ::  crezc ;            { 2 }
desaparec +  SFKirrMedek   ::  desaparezc ;       { 2 }
desconoc  +  SFKirrMedek   ::  desconozc ;        { 2 }
envejec   +  SFKirrMedek   ::  envejezc ;         { 2 }
establec  +  SFKirrMedek   ::  establezc ;        { 2 }
favorec   +  SFKirrMedek   ::  favorezc ;         { 2 }
merec     +  SFKirrMedek   ::  merezc ;           { 2 }
nac       +  SFKirrMedek   ::  nazc ;             { 2 }
obedec    +  SFKirrMedek   ::  obedezc ;          { 2 }
ofrec     +  SFKirrMedek   ::  ofrezc ;           { 2 }
pac       +  SFKirrMedek   ::  pazc ;             { 2 }
parec     +  SFKirrMedek   ::  parezc ;           { 2 ; defectivo }
pertenec  +  SFKirrMedek   ::  pertenezc ;        { 2 }
plac      +  SFKirrMedek   ::  plazc ;            { 2 ; defectivo }
reconoc   +  SFKirrMedek   ::  reconozc ;         { 2 }
renac     +  SFKirrMedek   ::  renazc ;           { 2 }
yac       +  SFKirrMedek   ::  yazg ;             { 2 ; eventueel yazc/yag }
aduc      +  SFKirrMedek   ::  aduzc ;            { 3   #9  }
balbuc    +  SFKirrMedek   ::  balbuzc ;          { 3 ; defectivo }
deduc     +  SFKirrMedek   ::  deduzc ;           { 3 }
desluc    +  SFKirrMedek   ::  desluzc ;          { 3 }
entreluc  +  SFKirrMedek   ::  entreluzc ;        { 3 }
induc     +  SFKirrMedek   ::  induzc ;           { 3 }
luc       +  SFKirrMedek   ::  luzc ;             { 3 }
reluc     +  SFKirrMedek   ::  reluzc ;           { 3 }
seduc     +  SFKirrMedek   ::  seduzc ;           { 3 }
trasluc   +  SFKirrMedek   ::  trasluzc ;         { 3 }
as        +  SFKirrMedek   ::  asg ;              { 3   #13 }
cab       +  SFKirrMedek   ::  quep ;             { 9   #16 ; ab/ep! }
conduc    +  SFKirrMedek   ::  conduzc ;          { 3   #17 }
introduc  +  SFKirrMedek   ::  introduzc ;        { 3 }
produc    +  SFKirrMedek   ::  produzc ;          { 3 }
reduc     +  SFKirrMedek   ::  reduzc ;           { 3 }
traduc    +  SFKirrMedek   ::  traduzc ;          { 3 }
ca        +  SFKirrMedek   ::  caig ;             { 2   #20 }
o         +  SFKirrMedek   ::  oig ;              { 3   #22 }
bendec    +  SFKirrMedek   ::  bendig ;           { 3   #25 }
maldec    +  SFKirrMedek   ::  maldig ;           { 3 }
val       +  SFKirrMedek   ::  valg ;             { 10  #30 }
equival   +  SFKirrMedek   ::  equival ;          { 10 }
sal       +  SFKirrMedek   ::  salg ;             { 11  #30 }
sobresal  +  SFKirrMedek   ::  sobresalg ;        { 11 }
pon       +  SFKirrMedek   ::  pong ;             { 14  #37 }
antepon   +  SFKirrMedek   ::  antepong ;         { 14 }
compon    +  SFKirrMedek   ::  compong ;          { 14 }
contrapon +  SFKirrMedek   ::  contrapong ;       { 14 }
depon     +  SFKirrMedek   ::  depong ;           { 14 }
descompon +  SFKirrMedek   ::  descompong ;       { 14 }
dispon    +  SFKirrMedek   ::  dispong ;          { 14 }
expon     +  SFKirrMedek   ::  expong ;           { 14 }
impon     +  SFKirrMedek   ::  impong ;           { 14 }
indispon  +  SFKirrMedek   ::  indispong ;        { 14 }
interpon  +  SFKirrMedek   ::  interpong ;        { 14 }
opon      +  SFKirrMedek   ::  opong ;            { 14 }
predispon +  SFKirrMedek   ::  predispong ;       { 14 }
presupon  +  SFKirrMedek   ::  presupong ;        { 14 }
propon    +  SFKirrMedek   ::  propong ;          { 14 }
recompon  +  SFKirrMedek   ::  recompong ;        { 14 }
repon     +  SFKirrMedek   ::  repong ;           { 14 }
sobrepon  +  SFKirrMedek   ::  sobrepong ;        { 14 }
supon     +  SFKirrMedek   ::  supong ;           { 14 }
superpon  +  SFKirrMedek   ::  superpong ;        { 14 }
traspon   +  SFKirrMedek   ::  traspong ;         { 14 }
yuxtapon  +  SFKirrMedek   ::  yuxtapong ;        { 14 }
ten       +  SFKirrMedek   ::  teng ;             { 15  #43 }
aten      +  SFKirrMedek   ::  ateng ;            { 15 }
conten    +  SFKirrMedek   ::  conteng ;          { 15 }
deten     +  SFKirrMedek   ::  deteng ;           { 15 }
entreten  +  SFKirrMedek   ::  entreteng ;        { 15 }
manten    +  SFKirrMedek   ::  manteng ;          { 15 }
obten     +  SFKirrMedek   ::  obteng ;           { 15 }
reten     +  SFKirrMedek   ::  reteng ;           { 15 }
sosten    +  SFKirrMedek   ::  sosteng ;          { 15 }
tra       +  SFKirrMedek   ::  traig ;            { 7   #44 }
ven       +  SFKirrMedek   ::  veng ;             { 16  #45 }
adven     +  SFKirrMedek   ::  adveng ;           { 16 }
conven    +  SFKirrMedek   ::  conveng ;          { 16 }
contraven +  SFKirrMedek   ::  contraveng ;       { 16 }
deven     +  SFKirrMedek   ::  deveng ;           { 16 }
interven  +  SFKirrMedek   ::  interveng ;        { 16 }
preven    +  SFKirrMedek   ::  preveng ;          { 16 }
proven    +  SFKirrMedek   ::  proveng ;          { 16 }
sobreven  +  SFKirrMedek   ::  sobreveng ;        { 16 }
subven    +  SFKirrMedek   ::  subveng ;          { 16 }


{ "strong" forms }

and       +  SFKsterk      ::  anduv ;            { 6   #12 } 
cab       +  SFKsterk      ::  cup ;              { 9   #16 }
bendec    +  SFKsterk      ::  bendij ;           { 3   #25 }
pon       +  SFKsterk      ::  pus ;              { 14  #37 }
quer      +  SFKsterk      ::  quis ;             { 12  #38 }
sab       +  SFKsterk      ::  sup ;              { 13  #42 }
ten       +  SFKsterk      ::  tuv ;              { 15  #43 }
tra       +  SFKsterk      ::  traj ;             { 7   #44 }


{ allomorphs with vowel change or y-insertion; the verbs with
  SFKeiouHalf have diphtongization too in certain forms.       }

adher     +  SFKeiouHalf   ::  adhir ;            { 3   #7  }
advert    +  SFKeiouHalf   ::  advirt ;           { 3 }
arrepent  +  SFKeiouHalf   ::  arrepint ;         { 3 }
confer    +  SFKeiouHalf   ::  confir ;           { 3 }
convert   +  SFKeiouHalf   ::  convirt ;          { 3 }
her       +  SFKeiouHalf   ::  hir ;              { 3 }
ment      +  SFKeiouHalf   ::  mint ;             { 3 }
prefer    +  SFKeiouHalf   ::  prefir ;           { 3 }
refer     +  SFKeiouHalf   ::  refir ;            { 3 }
sent      +  SFKeiouHalf   ::  sint ;             { 3 }
suger     +  SFKeiouHalf   ::  sugir ;            { 3 }
dorm      +  SFKeiouHalf   ::  durm ;             { 3   #28 }
mor       +  SFKeiouHalf   ::  mur ;              { 3   #29 }
ergu      +  SFKeiouHalf   ::  irgu ;             { 3   #31 }


{ allomorphs with vowelchange; verbs with SFKeiouHeel never have
  diphtongization, in contrast with the SFKeiouHalf-Verbs         }

aflu      +  SFKeiouHeel   ::  afluy ;            { 3   #10 ; y-inlassing! }
argu      +  SFKeiouHeel   ::  arguy ;            { 3 }
atribu    +  SFKeiouHeel   ::  atribuy ;          { 3 } 
conclu    +  SFKeiouHeel   ::  concluy ;          { 3 } 
conflu    +  SFKeiouHeel   ::  confluy ;          { 3 } 
constitu  +  SFKeiouHeel   ::  constituy ;        { 3 } 
constru   +  SFKeiouHeel   ::  construy ;         { 3 } 
contribu  +  SFKeiouHeel   ::  contribuy ;        { 3 } 
derru     +  SFKeiouHeel   ::  derruy ;           { 3 } 
destitu   +  SFKeiouHeel   ::  destituy ;         { 3 } 
destru    +  SFKeiouHeel   ::  destruy ;          { 3 } 
dilu      +  SFKeiouHeel   ::  diluy ;            { 3 } 
disminu   +  SFKeiouHeel   ::  disminuy ;         { 3 } 
distribu  +  SFKeiouHeel   ::  distribuy ;        { 3 } 
exclu     +  SFKeiouHeel   ::  excluy ;           { 3 } 
flu       +  SFKeiouHeel   ::  fluy ;             { 3 } 
hu        +  SFKeiouHeel   ::  huy ;              { 3 } 
inclu     +  SFKeiouHeel   ::  incluy ;           { 3 } 
influ     +  SFKeiouHeel   ::  influy ;           { 3 } 
inmiscu   +  SFKeiouHeel   ::  inmiscuy ;         { 3 } 
institu   +  SFKeiouHeel   ::  instituy ;         { 3 } 
instru    +  SFKeiouHeel   ::  instruy ;          { 3 } 
intu      +  SFKeiouHeel   ::  intuy ;            { 3 } 
obstru    +  SFKeiouHeel   ::  obstruy ;          { 3 }
reclu     +  SFKeiouHeel   ::  recluy ;           { 3 } 
reconstru +  SFKeiouHeel   ::  reconstruy ;       { 3 } 
rehu      +  SFKeiouHeel   ::  rehuy ;            { 3 } 
restitu   +  SFKeiouHeel   ::  restituy ;         { 3 } 
retribu   +  SFKeiouHeel   ::  retribuy ;         { 3 } 
consegu   +  SFKeiouHeel   ::  consigu ;          { 3   #27 }
correg    +  SFKeiouHeel   ::  corrig ;           { 3 } 
derret    +  SFKeiouHeel   ::  derrit ;           { 3 } 
desped    +  SFKeiouHeel   ::  despid ;           { 3 } 
eleg      +  SFKeiouHeel   ::  elig ;             { 3 } 
imped     +  SFKeiouHeel   ::  impid ;            { 3 } 
med       +  SFKeiouHeel   ::  mid ;              { 3 } 
ped       +  SFKeiouHeel   ::  pid ;              { 3 }
persegu   +  SFKeiouHeel   ::  persigu ;          { 3 } 
rend      +  SFKeiouHeel   ::  rind ;             { 3 } 
repet     +  SFKeiouHeel   ::  repit ;            { 3 } 
segu      +  SFKeiouHeel   ::  sigu ;             { 3 } 
serv      +  SFKeiouHeel   ::  sirv ;             { 3 } 
transgred +  SFKeiouHeel   ::  transgrid ;        { 3 } 
vest      +  SFKeiouHeel   ::  vist ;             { 3 } 
podr      +  SFKeiouHeel   ::  pudr ;             { 3   #36 }
ren¨~       +  SFKeiouHeel   ::  rin¨~ ;              { 3   #40 }
cen¨~       +  SFKeiouHeel   ::  cin¨~ ;              { 3 }
hen¨~       +  SFKeiouHeel   ::  hin¨~ ;              { 3 }
ten¨~       +  SFKeiouHeel   ::  ten¨~ ;              { 3 }


{ allomorphs with y-insertion; not in Present tense }

ca        +  SFKyMinPres   ::  cay ;              { 2   #20 }
cre       +  SFKyMinPres   ::  crey ;             { 2   #21 }
le        +  SFKyMinPres   ::  ley ;              { 2 }
pose      +  SFKyMinPres   ::  posey ;            { 2 }


{ allomorphs with vowelchange, especially in PD and Gerundio }

pod       +  SFKeiouPD     ::  pud ;              { 12  #35 }
ven       +  SFKeiouPD     ::  vin ;              { 16  #45 } 
adven     +  SFKeiouPD     ::  advin ;            { 16 } 
conven    +  SFKeiouPD     ::  convin ;           { 16 } 
contraven +  SFKeiouPD     ::  contravin ;        { 16 } 
deven     +  SFKeiouPD     ::  devin ;            { 16 } 
interven  +  SFKeiouPD     ::  intervin ;         { 16 } 
preven    +  SFKeiouPD     ::  previn ;           { 16 } 
proven    +  SFKeiouPD     ::  provin ;           { 16 } 
sobreven  +  SFKeiouPD     ::  sobrevin ;         { 16 } 
subven    +  SFKeiouPD     ::  subvin ;           { 16 } 


{ allomorph with umlaut on the u, namely before V-endings starting with e }

averigu   +  SFKumlaut     ::  averigu¨" ;          { 1   #15 }


{ ver en proveer have a similar conjugation, except for the infinitive }

v         +  SFKve         ::  ve ;               { 4   #18 }
prov      +  SFKve         ::  prove ;            { 4 }


{ allomorph with y-insertion, also in Present tense (compare leer/caer) }

o         +  SFKyinPres    ::  oy ;               { 3   #22 }


{ ben-/maldecir treated as regular V, in contrast with decir/contradecir/ }
{ predecir/desdecir.                                                      }

bendec    +  SFKbendic     ::  bendic ;           { 3   #25 }
maldec    +  SFKbendic     ::  maldic ;           { 3 }


{ allomorph of saber }

sab       +  SFKsepa       ::  sep ;              { 13  #42 }



{ irregular verbs }

{ NB. The following verbs have been taken together:           }
{                                                             }
{      1st ps.sg.subj.pres.                                   }
{      3rd ps.sg.subj.pres.      SFK1Sg3SubjPres              }
{      3rd ps.sg.imperativo (!)                               }
{                                                             }
{      1st ps.sg.imperfecto                                   }
{      3rd ps.sg.imperfecto      SFK1Sg3Imperf                }
{                                                             }
{      1st ps.sg.condicional                                  }
{      3rd ps.sg.condicional     SFK1Sg3Cond                  }
{                                                             }
{      1st ps.sg.subj.pasado     SFK1Sg3SubjPas               }
{      3rd ps.sg.subj.pasado     SFK1Sg3SubjPasa              }
{                                                             }
{      1st ps.pl.subj.presente   SFK1PlSubjPres               }
{      1st ps.pl.imperativo                                   }
{                                                             }
{      3rd ps.pl.subj.presente   SFK3PlSubjPres               }
{      3rd ps.pl.imperativo                                   }
{                                                             }
{   ( For the Imperativo 3rd ps. sg/pl and the 1st ps.pl.     }
{     the Subj. is used! )                                    }
  
                                                                        


{ dar } 

dar     +    SFK1SgIndPres        ::   doy ;
dar     +    SFK2SgIndPres        ::   das ;
dar     +    SFK3SgIndPres        ::   da ;
dar     +    SFK1PlIndPres        ::   damos ;
dar     +    SFK2PlIndPres        ::   dais ;
dar     +    SFK3PlIndPres        ::   dan ;
dar     +    SFK1Sg3SubjPres      ::   de¨' ;
dar     +    SFK2SgSubjPres       ::   des ;
dar     +    SFK1PlSubjPres       ::   demos ;
dar     +    SFK2PlSubjPres       ::   deis ;
dar     +    SFK3PlSubjPres       ::   den ;
dar     +    SFK1Sg3Imperf        ::   daba ;
dar     +    SFK2SgImperf         ::   dabas ;
dar     +    SFK1PlImperf         ::   da¨'bamos ;
dar     +    SFK2PlImperf         ::   dabais ;
dar     +    SFK3PlImperf         ::   daban ;
dar     +    SFK1SgPD             ::   di ;
dar     +    SFK2SgPD             ::   diste ;
dar     +    SFK3SgPD             ::   dio¨' ;
dar     +    SFK1PlPD             ::   dimos ;
dar     +    SFK2PlPD             ::   disteis ;
dar     +    SFK3PlPD             ::   dieron ;
dar     +    SFK1SgFut            ::   dare¨' ;
dar     +    SFK2SgFut            ::   dara¨'s ;
dar     +    SFK3SgFut            ::   dara¨' ;
dar     +    SFK1PlFut            ::   daremos ;
dar     +    SFK2PlFut            ::   dare¨'is ;
dar     +    SFK3PlFut            ::   dara¨'n ;
dar     +    SFK1Sg3Cond          ::   dari¨'a ;
dar     +    SFK2SgCond           ::   dari¨'as ;
dar     +    SFK1PlCond           ::   dari¨'amos ;
dar     +    SFK2PlCond           ::   dari¨'ais ;
dar     +    SFK3PlCond           ::   dari¨'an ;
dar     +    SFKsgImperat         ::   da ;
dar     +    SFKplImperat         ::   dad ;
dar     +    SFK1Sg3SubjPas       ::   diera ;
dar     +    SFK2SgSubjPas        ::   dieras ;
dar     +    SFK1PlSubjPas        ::   die¨'ramos ;
dar     +    SFK2PlSubjPas        ::   dierais ;
dar     +    SFK3PlSubjPas        ::   dieran ;
dar     +    SFK1Sg3SubjPasa      ::   diese ;
dar     +    SFK2SgSubjPasa       ::   dieses ;
dar     +    SFK1PlSubjPasa       ::   die¨'semos ;
dar     +    SFK2PlSubjPasa       ::   dieseis ;
dar     +    SFK3PlSubjPasa       ::   diesen ;
dar     +    SFKgerundio          ::   dando ;
dar     +    SFKPtcPasMascSg      ::   dado ;
dar     +    SFKPtcPasMascPl      ::   dados ;
dar     +    SFKPtcPasFemSg       ::   dada ;
dar     +    SFKPtcPasFemPl       ::   dadas ;


{ decir }

decir   +    SFK1SgIndPres        ::   digo ;
decir   +    SFK2SgIndPres        ::   dices ;
decir   +    SFK3SgIndPres        ::   dice ;
decir   +    SFK1PlIndPres        ::   decimos ;
decir   +    SFK2PlIndPres        ::   deci¨'s ;
decir   +    SFK3PlIndPres        ::   dicen ;
decir   +    SFK1Sg3SubjPres      ::   diga ;
decir   +    SFK2SgSubjPres       ::   digas ;
decir   +    SFK1PlSubjPres       ::   digamos ;
decir   +    SFK2PlSubjPres       ::   diga¨'is ;
decir   +    SFK3PlSubjPres       ::   digan ;
decir   +    SFK1Sg3Imperf        ::   deci¨'a ;
decir   +    SFK2SgImperf         ::   deci¨'as ;
decir   +    SFK1PlImperf         ::   deci¨'amos ;
decir   +    SFK2PlImperf         ::   deci¨'ais ;
decir   +    SFK3PlImperf         ::   deci¨'an ;
decir   +    SFK1SgPD             ::   dije ;
decir   +    SFK2SgPD             ::   dijiste ;
decir   +    SFK3SgPD             ::   dijo ;
decir   +    SFK1PlPD             ::   dijimos ;
decir   +    SFK2PlPD             ::   dijisteis ;
decir   +    SFK3PlPD             ::   dijeron ;
decir   +    SFK1SgFut            ::   dire¨' ;
decir   +    SFK2SgFut            ::   dira¨'s ;
decir   +    SFK3SgFut            ::   dira¨' ;
decir   +    SFK1PlFut            ::   diremos ;
decir   +    SFK2PlFut            ::   dire¨'is ;
decir   +    SFK3PlFut            ::   dira¨'n ;
decir   +    SFK1Sg3Cond          ::   diri¨'a ;
decir   +    SFK2SgCond           ::   diri¨'as ;
decir   +    SFK1PlCond           ::   diri¨'amos ;
decir   +    SFK2PlCond           ::   diri¨'ais ;
decir   +    SFK3PlCond           ::   diri¨'an ;
decir   +    SFKsgImperat         ::   di ;
decir   +    SFKplImperat         ::   decid ;
decir   +    SFK1Sg3SubjPas       ::   dijera ;
decir   +    SFK2SgSubjPas        ::   dijeras ;
decir   +    SFK1PlSubjPas        ::   dije¨'ramos ;
decir   +    SFK2PlSubjPas        ::   dijerais ;
decir   +    SFK3PlSubjPas        ::   dijeran ;
decir   +    SFK1Sg3SubjPasa      ::   dijese ;
decir   +    SFK2SgSubjPasa       ::   dijeses ;
decir   +    SFK1PlSubjPasa       ::   dije¨'semos ;
decir   +    SFK2PlSubjPasa       ::   dijeseis ;
decir   +    SFK3PlSubjPasa       ::   dijesen ;
decir   +    SFKgerundio          ::   diciendo ;
decir   +    SFKPtcPasMascSg      ::   dicho ;
decir   +    SFKPtcPasMascPl      ::   dichos ;
decir   +    SFKPtcPasFemSg       ::   dicha ;
decir   +    SFKPtcPasFemPl       ::   dichas ;


{ desdecir }

desdecir   +    SFK1SgIndPres        ::   desdigo ;
desdecir   +    SFK2SgIndPres        ::   desdices ;
desdecir   +    SFK3SgIndPres        ::   desdice ;
desdecir   +    SFK1PlIndPres        ::   desdecimos ;
desdecir   +    SFK2PlIndPres        ::   desdeci¨'s ;
desdecir   +    SFK3PlIndPres        ::   desdicen ;
desdecir   +    SFK1Sg3SubjPres      ::   desdiga ;
desdecir   +    SFK2SgSubjPres       ::   desdigas ;
desdecir   +    SFK1PlSubjPres       ::   desdigamos ;
desdecir   +    SFK2PlSubjPres       ::   desdiga¨'is ;
desdecir   +    SFK3PlSubjPres       ::   desdigan ;
desdecir   +    SFK1Sg3Imperf        ::   desdeci¨'a ;
desdecir   +    SFK2SgImperf         ::   desdeci¨'as ;
desdecir   +    SFK1PlImperf         ::   desdeci¨'amos ;
desdecir   +    SFK2PlImperf         ::   desdeci¨'ais ;
desdecir   +    SFK3PlImperf         ::   desdeci¨'an ;
desdecir   +    SFK1SgPD             ::   desdije ;
desdecir   +    SFK2SgPD             ::   desdijiste ;
desdecir   +    SFK3SgPD             ::   desdijo ;
desdecir   +    SFK1PlPD             ::   desdijimos ;
desdecir   +    SFK2PlPD             ::   desdijisteis ;
desdecir   +    SFK3PlPD             ::   desdijeron ;
desdecir   +    SFK1SgFut            ::   desdire¨' ;
desdecir   +    SFK2SgFut            ::   desdira¨'s ;
desdecir   +    SFK3SgFut            ::   desdira¨' ;
desdecir   +    SFK1PlFut            ::   desdiremos ;
desdecir   +    SFK2PlFut            ::   desdire¨'is ;
desdecir   +    SFK3PlFut            ::   desdira¨'n ;
desdecir   +    SFK1Sg3Cond          ::   desdiri¨'a ;
desdecir   +    SFK2SgCond           ::   desdiri¨'as ;
desdecir   +    SFK1PlCond           ::   desdiri¨'amos ;
desdecir   +    SFK2PlCond           ::   desdiri¨'ais ;
desdecir   +    SFK3PlCond           ::   desdiri¨'an ;
desdecir   +    SFKsgImperat         ::   desdice ;
desdecir   +    SFKplImperat         ::   desdecid ;
desdecir   +    SFK1Sg3SubjPas       ::   desdijera ;
desdecir   +    SFK2SgSubjPas        ::   desdijeras ;
desdecir   +    SFK1PlSubjPas        ::   desdije¨'ramos ;
desdecir   +    SFK2PlSubjPas        ::   desdijerais ;
desdecir   +    SFK3PlSubjPas        ::   desdijeran ;
desdecir   +    SFK1Sg3SubjPasa      ::   desdijese ;
desdecir   +    SFK2SgSubjPasa       ::   desdijeses ;
desdecir   +    SFK1PlSubjPasa       ::   desdije¨'semos ;
desdecir   +    SFK2PlSubjPasa       ::   desdijeseis ;
desdecir   +    SFK3PlSubjPasa       ::   desdijesen ;
desdecir   +    SFKgerundio          ::   desdiciendo ;
desdecir   +    SFKPtcPasMascSg      ::   desdicho ;
desdecir   +    SFKPtcPasMascPl      ::   desdichos ;
desdecir   +    SFKPtcPasFemSg       ::   desdicha ;
desdecir   +    SFKPtcPasFemPl       ::   desdichas ;


{ predecir }

predecir   +    SFK1SgIndPres        ::   predigo ;
predecir   +    SFK2SgIndPres        ::   predices ;
predecir   +    SFK3SgIndPres        ::   predice ;
predecir   +    SFK1PlIndPres        ::   predecimos ;
predecir   +    SFK2PlIndPres        ::   predeci¨'s ;
predecir   +    SFK3PlIndPres        ::   predicen ;
predecir   +    SFK1Sg3SubjPres      ::   prediga ;
predecir   +    SFK2SgSubjPres       ::   predigas ;
predecir   +    SFK1PlSubjPres       ::   predigamos ;
predecir   +    SFK2PlSubjPres       ::   prediga¨'is ;
predecir   +    SFK3PlSubjPres       ::   predigan ;
predecir   +    SFK1Sg3Imperf        ::   predeci¨'a ;
predecir   +    SFK2SgImperf         ::   predeci¨'as ;
predecir   +    SFK1PlImperf         ::   predeci¨'amos ;
predecir   +    SFK2PlImperf         ::   predeci¨'ais ;
predecir   +    SFK3PlImperf         ::   predeci¨'an ;
predecir   +    SFK1SgPD             ::   predije ;
predecir   +    SFK2SgPD             ::   predijiste ;
predecir   +    SFK3SgPD             ::   predijo ;
predecir   +    SFK1PlPD             ::   predijimos ;
predecir   +    SFK2PlPD             ::   predijisteis ;
predecir   +    SFK3PlPD             ::   predijeron ;
predecir   +    SFK1SgFut            ::   predire¨' ;
predecir   +    SFK2SgFut            ::   predira¨'s ;
predecir   +    SFK3SgFut            ::   predira¨' ;
predecir   +    SFK1PlFut            ::   prediremos ;
predecir   +    SFK2PlFut            ::   predire¨'is ;
predecir   +    SFK3PlFut            ::   predira¨'n ;
predecir   +    SFK1Sg3Cond          ::   prediri¨'a ;
predecir   +    SFK2SgCond           ::   prediri¨'as ;
predecir   +    SFK1PlCond           ::   prediri¨'amos ;
predecir   +    SFK2PlCond           ::   prediri¨'ais ;
predecir   +    SFK3PlCond           ::   prediri¨'an ;
predecir   +    SFKsgImperat         ::   predice ;
predecir   +    SFKplImperat         ::   predecid ;
predecir   +    SFK1Sg3SubjPas       ::   predijera ;
predecir   +    SFK2SgSubjPas        ::   predijeras ;
predecir   +    SFK1PlSubjPas        ::   predije¨'ramos ;
predecir   +    SFK2PlSubjPas        ::   predijerais ;
predecir   +    SFK3PlSubjPas        ::   predijeran ;
predecir   +    SFK1Sg3SubjPasa      ::   predijese ;
predecir   +    SFK2SgSubjPasa       ::   predijeses ;
predecir   +    SFK1PlSubjPasa       ::   predije¨'semos ;
predecir   +    SFK2PlSubjPasa       ::   predijeseis ;
predecir   +    SFK3PlSubjPasa       ::   predijesen ;
predecir   +    SFKgerundio          ::   prediciendo ;
predecir   +    SFKPtcPasMascSg      ::   predicho ;
predecir   +    SFKPtcPasMascPl      ::   predichos ;
predecir   +    SFKPtcPasFemSg       ::   predicha ;
predecir   +    SFKPtcPasFemPl       ::   predichas ;


{ contradecir }

contradecir  +   SFK1SgIndPres        ::   contradigo ;
contradecir  +   SFK2SgIndPres        ::   contradices ;
contradecir  +   SFK3SgIndPres        ::   contradice ;
contradecir  +   SFK1PlIndPres        ::   contradecimos ;
contradecir  +   SFK2PlIndPres        ::   contradeci¨'s ;
contradecir  +   SFK3PlIndPres        ::   contradicen ;
contradecir  +   SFK1Sg3SubjPres      ::   contradiga ;
contradecir  +   SFK2SgSubjPres       ::   contradigas ;
contradecir  +   SFK1PlSubjPres       ::   contradigamos ;
contradecir  +   SFK2PlSubjPres       ::   contradiga¨'is ;
contradecir  +   SFK3PlSubjPres       ::   contradigan ;
contradecir  +   SFK1Sg3Imperf        ::   contradeci¨'a ;
contradecir  +   SFK2SgImperf         ::   contradeci¨'as ;
contradecir  +   SFK1PlImperf         ::   contradeci¨'amos ;
contradecir  +   SFK2PlImperf         ::   contradeci¨'ais ;
contradecir  +   SFK3PlImperf         ::   contradeci¨'an ;
contradecir  +   SFK1SgPD             ::   contardije ;
contradecir  +   SFK2SgPD             ::   contradijiste ;
contradecir  +   SFK3SgPD             ::   contradijo ;
contradecir  +   SFK1PlPD             ::   contradijimos ;
contradecir  +   SFK2PlPD             ::   contradijisteis ;
contradecir  +   SFK3PlPD             ::   contradijeron ;
contradecir  +   SFK1SgFut            ::   contradire¨' ;
contradecir  +   SFK2SgFut            ::   contradira¨'s ;
contradecir  +   SFK3SgFut            ::   contradira¨' ;
contradecir  +   SFK1PlFut            ::   contradiremos ;
contradecir  +   SFK2PlFut            ::   contradire¨'is ;
contradecir  +   SFK3PlFut            ::   contradira¨'n ;
contradecir  +   SFK1Sg3Cond          ::   contradiri¨'a ;
contradecir  +   SFK2SgCond           ::   contradiri¨'as ;
contradecir  +   SFK1PlCond           ::   contradiri¨'amos ;
contradecir  +   SFK2PlCond           ::   contradiri¨'ais ;
contradecir  +   SFK3PlCond           ::   contradiri¨'an ;
contradecir  +   SFKsgImperat         ::   contradice ;
contradecir  +   SFKplImperat         ::   contradecid ;
contradecir  +   SFK1Sg3SubjPas       ::   contradijera ;
contradecir  +   SFK2SgSubjPas        ::   contradijeras ;
contradecir  +   SFK1PlSubjPas        ::   contradije¨'ramos ;
contradecir  +   SFK2PlSubjPas        ::   contradijerais ;
contradecir  +   SFK3PlSubjPas        ::   contradijeran ;
contradecir  +   SFK1Sg3SubjPasa      ::   contradijese ;
contradecir  +   SFK2SgSubjPasa       ::   contradijeses ;
contradecir  +   SFK1PlSubjPasa       ::   contradije¨'semos ;
contradecir  +   SFK2PlSubjPasa       ::   contradijeseis ;
contradecir  +   SFK3PlSubjPasa       ::   contradijesen ;
contradecir  +   SFKgerundio          ::   contradiciendo ;
contradecir   +  SFKPtcPasMascSg      ::   contradicho ;
contradecir   +  SFKPtcPasMascPl      ::   contradichos ;
contradecir   +  SFKPtcPasFemSg       ::   contradicha ;
contradecir   +  SFKPtcPasFemPl       ::   contradichas ;


{ hacer }

hacer    +    SFK1SgIndPres        ::     hago ;
hacer    +    SFK2SgIndPres        ::     haces ;
hacer    +    SFK3SgIndPres        ::     hace ;
hacer    +    SFK1PlIndPres        ::     hacemos ;
hacer    +    SFK2PlIndPres        ::     hace¨'is ;
hacer    +    SFK3PlIndPres        ::     hacen ;
hacer    +    SFK1Sg3SubjPres      ::     haga ;
hacer    +    SFK2SgSubjPres       ::     hagas ;
hacer    +    SFK1PlSubjPres       ::     hagamos ;
hacer    +    SFK2PlSubjPres       ::     haga¨'is ;
hacer    +    SFK3PlSubjPres       ::     hagan ;
hacer    +    SFK1Sg3Imperf        ::     haci¨'a ;
hacer    +    SFK2SgImperf         ::     haci¨'as ;
hacer    +    SFK1PlImperf         ::     haci¨'amos ;
hacer    +    SFK2PlImperf         ::     haci¨'ais ;
hacer    +    SFK3PlImperf         ::     haci¨'an ;
hacer    +    SFK1SgPD             ::     hice ;
hacer    +    SFK2SgPD             ::     hiciste ;
hacer    +    SFK3SgPD             ::     hizo ;
hacer    +    SFK1PlPD             ::     hicimos ;
hacer    +    SFK2PlPD             ::     hicisteis ;
hacer    +    SFK3PlPD             ::     hicieron ;
hacer    +    SFK1SgFut            ::     hare¨' ;
hacer    +    SFK2SgFut            ::     hara¨'s ;
hacer    +    SFK3SgFut            ::     hara¨' ;
hacer    +    SFK1PlFut            ::     haremos ;
hacer    +    SFK2PlFut            ::     hare¨'is ;
hacer    +    SFK3PlFut            ::     hara¨'n ;
hacer    +    SFK1Sg3Cond          ::     hari¨'a ;
hacer    +    SFK2SgCond           ::     hari¨'as ;
hacer    +    SFK1PlCond           ::     hari¨'amos ;
hacer    +    SFK2PlCond           ::     hari¨'ais ;
hacer    +    SFK3PlCond           ::     hari¨'an ;
hacer    +    SFKsgImperat         ::     haz ;
hacer    +    SFKplImperat         ::     haced ;
hacer    +    SFK1Sg3SubjPas       ::     hiciera ;
hacer    +    SFK2SgSubjPas        ::     hicieras ;
hacer    +    SFK1PlSubjPas        ::     hicie¨'ramos ;
hacer    +    SFK2PlSubjPas        ::     hicierais ;
hacer    +    SFK3PlSubjPas        ::     hicieran ;
hacer    +    SFK1Sg3SubjPasa      ::     hiciese ;
hacer    +    SFK2SgSubjPasa       ::     hicieses ;
hacer    +    SFK1PlSubjPasa       ::     hicie¨'semos ;
hacer    +    SFK2PlSubjPasa       ::     hicieseis ;
hacer    +    SFK3PlSubjPasa       ::     hiciesen ;
hacer    +    SFKgerundio          ::     haciendo ;
hacer    +    SFKPtcPasMascSg      ::     hecho ;
hacer    +    SFKPtcPasMascPl      ::     hechos ;
hacer    +    SFKPtcPasFemSg       ::     hecha ;
hacer    +    SFKPtcPasFemPl       ::     hechas ;
  

{ satisfacer }

satisfacer    +    SFK1SgIndPres        ::     satisfago ;
satisfacer    +    SFK2SgIndPres        ::     satisfaces ;
satisfacer    +    SFK3SgIndPres        ::     satisface ;
satisfacer    +    SFK1PlIndPres        ::     satisfacemos ;
satisfacer    +    SFK2PlIndPres        ::     satisface¨'is ;
satisfacer    +    SFK3PlIndPres        ::     satisfacen ;
satisfacer    +    SFK1Sg3SubjPres      ::     satisfaga ;
satisfacer    +    SFK2SgSubjPres       ::     satisfagas ;
satisfacer    +    SFK1PlSubjPres       ::     satisfagamos ;
satisfacer    +    SFK2PlSubjPres       ::     satisfaga¨'is ;
satisfacer    +    SFK3PlSubjPres       ::     satisfagan ;
satisfacer    +    SFK1Sg3Imperf        ::     satisfaci¨'a ;
satisfacer    +    SFK2SgImperf         ::     satisfaci¨'as ;
satisfacer    +    SFK1PlImperf         ::     satisfaci¨'amos ;
satisfacer    +    SFK2PlImperf         ::     satisfaci¨'ais ;
satisfacer    +    SFK3PlImperf         ::     satisfaci¨'an ;
satisfacer    +    SFK1SgPD             ::     satisfice ;
satisfacer    +    SFK2SgPD             ::     satisficiste ;
satisfacer    +    SFK3SgPD             ::     satisfizo ;
satisfacer    +    SFK1PlPD             ::     satisficimos ;
satisfacer    +    SFK2PlPD             ::     satisficisteis ;
satisfacer    +    SFK3PlPD             ::     satisficieron ;
satisfacer    +    SFK1SgFut            ::     satisfare¨' ;
satisfacer    +    SFK2SgFut            ::     satisfara¨'s ;
satisfacer    +    SFK3SgFut            ::     satisfara¨' ;
satisfacer    +    SFK1PlFut            ::     satisfaremos ;
satisfacer    +    SFK2PlFut            ::     satisfare¨'is ;
satisfacer    +    SFK3PlFut            ::     satisfara¨'n ;
satisfacer    +    SFK1Sg3Cond          ::     satisfari¨'a ;
satisfacer    +    SFK2SgCond           ::     satisfari¨'as ;
satisfacer    +    SFK1PlCond           ::     satisfari¨'amos ;
satisfacer    +    SFK2PlCond           ::     satisfari¨'ais ;
satisfacer    +    SFK3PlCond           ::     satisfari¨'an ;
satisfacer    +    SFKsgImperat         ::     satisfaz ;
satisfacer    +    SFKplImperat         ::     satisfaced ;
satisfacer    +    SFK1Sg3SubjPas       ::     satisficiera ;
satisfacer    +    SFK2SgSubjPas        ::     satisficieras ;
satisfacer    +    SFK1PlSubjPas        ::     satisficie¨'ramos ;
satisfacer    +    SFK2PlSubjPas        ::     satisficierais ;
satisfacer    +    SFK3PlSubjPas        ::     satisficieran ;
satisfacer    +    SFK1Sg3SubjPasa      ::     satisficiese ;
satisfacer    +    SFK2SgSubjPasa       ::     satisficieses ;
satisfacer    +    SFK1PlSubjPasa       ::     satisficie¨'semos ;
satisfacer    +    SFK2PlSubjPasa       ::     satisficieseis ;
satisfacer    +    SFK3PlSubjPasa       ::     satisficiesen ;
satisfacer    +    SFKgerundio          ::     satisfaciendo ;
satisfacer    +    SFKPtcPasMascSg      ::     satisfecho ;
satisfacer    +    SFKPtcPasMascPl      ::     satisfechos ;
satisfacer    +    SFKPtcPasFemSg       ::     satisfecha ;
satisfacer    +    SFKPtcPasFemPl       ::     satisfechas ;


{ haber }

haber    +    SFK1SgIndPres        ::    he ;
haber    +    SFK2SgIndPres        ::    has ;
haber    +    SFK3SgIndPres        ::    ha ;
haber    +    SFK3SgIndPresOnp     ::    hay ;        { inpers.haber }
haber    +    SFK1PlIndPres        ::    habemos ;
haber    +    SFK2PlIndPres        ::    habe¨'is ;
haber    +    SFK3PlIndPres        ::    han ;
haber    +    SFK1Sg3SubjPres      ::    haya ;
haber    +    SFK2SgSubjPres       ::    hayas ;
haber    +    SFK1PlSubjPres       ::    hayamos ;
haber    +    SFK2PlSubjPres       ::    haya¨'is ;
haber    +    SFK3PlSubjPres       ::    hayan ;
haber    +    SFK1Sg3Imperf        ::    habi¨'a ;
haber    +    SFK2SgImperf         ::    habi¨'as ;
haber    +    SFK1PlImperf         ::    habi¨'amos ;
haber    +    SFK2PlImperf         ::    habi¨'ais ;
haber    +    SFK3PlImperf         ::    habi¨'an ;
haber    +    SFK1SgPD             ::    hube ;
haber    +    SFK2SgPD             ::    hubiste ;
haber    +    SFK3SgPD             ::    hubo ;
haber    +    SFK1PlPD             ::    hubimos ;
haber    +    SFK2PlPD             ::    hubisteis ;
haber    +    SFK3PlPD             ::    hubieron ;
haber    +    SFK1SgFut            ::    habre¨' ;
haber    +    SFK2SgFut            ::    habra¨'s ;
haber    +    SFK3SgFut            ::    habra¨' ;
haber    +    SFK1PlFut            ::    habremos ;
haber    +    SFK2PlFut            ::    habre¨'is ;
haber    +    SFK3PlFut            ::    habra¨'n ;
haber    +    SFK1Sg3Cond          ::    habri¨'a ;
haber    +    SFK2SgCond           ::    habri¨'as ;
haber    +    SFK1PlCond           ::    habri¨'amos ;
haber    +    SFK2PlCond           ::    habri¨'ais ;
haber    +    SFK3PlCond           ::    habri¨'an ;
haber    +    SFKsgImperat         ::    ha ;
haber    +    SFKplImperat         ::    habed ;
haber    +    SFK1Sg3SubjPas       ::    hubiera ;
haber    +    SFK2SgSubjPas        ::    hubieras ;
haber    +    SFK1PlSubjPas        ::    hubie¨'ramos ;
haber    +    SFK2PlSubjPas        ::    hubierais ;
haber    +    SFK3PlSubjPas        ::    hubieran ;
haber    +    SFK1Sg3SubjPasa      ::    hubiese ;
haber    +    SFK2SgSubjPasa       ::    hubieses ;
haber    +    SFK1PlSubjPasa       ::    hubie¨'semos ;
haber    +    SFK2PlSubjPasa       ::    hubieseis ;
haber    +    SFK3PlSubjPasa       ::    hubiesen ;
haber    +    SFKgerundio          ::    habiendo ;
haber    +    SFKPtcPasMascSg      ::    habido ;
haber    +    SFKPtcPasMascPl      ::    habidos ;
haber    +    SFKPtcPasFemSg       ::    habida ;
haber    +    SFKPtcPasFemPl       ::    habidas ;


{ ser }

ser     +      SFK1SgIndPres        ::   soy ;
ser     +      SFK2SgIndPres        ::   eres ;
ser     +      SFK3SgIndPres        ::   es ;
ser     +      SFK1PlIndPres        ::   somos ;
ser     +      SFK2PlIndPres        ::   sois ;
ser     +      SFK3PlIndPres        ::   son ;
ser     +      SFK1Sg3SubjPres      ::   sea ;
ser     +      SFK2SgSubjPres       ::   seas ;
ser     +      SFK1PlSubjPres       ::   seamos ;
ser     +      SFK2PlSubjPres       ::   sea¨'is ;
ser     +      SFK3PlSubjPres       ::   sean;
ser     +      SFK1Sg3Imperf        ::   era ;
ser     +      SFK2SgImperf         ::   eras ;
ser     +      SFK1PlImperf         ::   e¨'ramos ;
ser     +      SFK2PlImperf         ::   erais ;
ser     +      SFK3PlImperf         ::   eran ;
ser     +      SFK1SgPD             ::   fui ;
ser     +      SFK2SgPD             ::   fuiste ;
ser     +      SFK3SgPD             ::   fue ;
ser     +      SFK1PlPD             ::   fuimos ;
ser     +      SFK2PlPD             ::   fuisteis ;
ser     +      SFK3PlPD             ::   fueron ;
ser     +      SFK1SgFut            ::   sere¨' ;
ser     +      SFK2SgFut            ::   sera¨'s ;
ser     +      SFK3SgFut            ::   sera¨' ;
ser     +      SFK1PlFut            ::   seremos ;
ser     +      SFK2PlFut            ::   sere¨'is ;
ser     +      SFK3PlFut            ::   sera¨'n ;
ser     +      SFK1Sg3Cond          ::   seri¨'a ;
ser     +      SFK2SgCond           ::   seri¨'as ;
ser     +      SFK1PlCond           ::   seri¨'amos ;
ser     +      SFK2PlCond           ::   seri¨'ais ;
ser     +      SFK3PlCond           ::   seri¨'an ;
ser     +      SFKsgImperat         ::   se¨' ;
ser     +      SFKplImperat         ::   sed ;
ser     +      SFK1Sg3SubjPas       ::   fuera ;
ser     +      SFK2SgSubjPas        ::   fueras ;
ser     +      SFK1PlSubjPas        ::   fue¨'ramos ;
ser     +      SFK2PlSubjPas        ::   fuerais ;
ser     +      SFK3PlSubjPas        ::   fueran ;
ser     +      SFK1Sg3SubjPasa      ::   fuese ;
ser     +      SFK2SgSubjPasa       ::   fueses ;
ser     +      SFK1PlSubjPasa       ::   fue¨'semos ;
ser     +      SFK2PlSubjPasa       ::   fueseis ;
ser     +      SFK3PlSubjPasa       ::   fuesen ;
ser     +      SFKgerundio          ::   siendo ;
ser     +      SFKPtcPasMascSg      ::   sido ;
ser     +      SFKPtcPasMascPl      ::   sidos ;
ser     +      SFKPtcPasFemSg       ::   sida ;
ser     +      SFKPtcPasFemPl       ::   sidas ;


{ estar }

estar    +     SFK1SgIndPres        ::   estoy ;
estar    +     SFK2SgIndPres        ::   esta¨'s ;
estar    +     SFK3SgIndPres        ::   esta¨' ;
estar    +     SFK1PlIndPres        ::   estamos ;
estar    +     SFK2PlIndPres        ::   esta¨'is ;
estar    +     SFK3PlIndPres        ::   esta¨'n ;
estar    +     SFK1Sg3SubjPres      ::   este¨' ;
estar    +     SFK2SgSubjPres       ::   este¨'s ;
estar    +     SFK1PlSubjPres       ::   estemos ;
estar    +     SFK2PlSubjPres       ::   este¨'is ;
estar    +     SFK3PlSubjPres       ::   este¨'n ;
estar    +     SFK1Sg3Imperf        ::   estaba ;
estar    +     SFK2SgImperf         ::   estabas ;
estar    +     SFK1PlImperf         ::   esta¨'bamos ;
estar    +     SFK2PlImperf         ::   estabais ;
estar    +     SFK3PlImperf         ::   estaban ;
estar    +     SFK1SgPD             ::   estuve ;
estar    +     SFK2SgPD             ::   estuviste ;
estar    +     SFK3SgPD             ::   estuvo ;
estar    +     SFK1PlPD             ::   estuvimos ;
estar    +     SFK2PlPD             ::   estuvisteis ;
estar    +     SFK3PlPD             ::   estuvieron ;
estar    +     SFK1SgFut            ::   estare¨' ;
estar    +     SFK2SgFut            ::   estara¨'s ;
estar    +     SFK3SgFut            ::   estara¨' ;
estar    +     SFK1PlFut            ::   estaremos ;
estar    +     SFK2PlFut            ::   estare¨'is ;
estar    +     SFK3PlFut            ::   estara¨'n ;
estar    +     SFK1Sg3Cond          ::   estari¨'a ;
estar    +     SFK2SgCond           ::   estari¨'as ;
estar    +     SFK1PlCond           ::   estari¨'amos ;
estar    +     SFK2PlCond           ::   estari¨'ais ;
estar    +     SFK3PlCond           ::   estari¨'an ;
estar    +     SFKsgImperat         ::   esta¨' ;
estar    +     SFKplImperat         ::   estad ;
estar    +     SFK1Sg3SubjPas       ::   estuviera ;
estar    +     SFK2SgSubjPas        ::   estuvieras ;
estar    +     SFK1PlSubjPas        ::   estuvie¨'ramos ;
estar    +     SFK2PlSubjPas        ::   estuvierais ;
estar    +     SFK3PlSubjPas        ::   estuvieran ;
estar    +     SFK1Sg3SubjPasa      ::   estuviese ;
estar    +     SFK2SgSubjPasa       ::   estuvieses ;
estar    +     SFK1PlSubjPasa       ::   estuvie¨'semos ;
estar    +     SFK2PlSubjPasa       ::   estuvieseis ;
estar    +     SFK3PlSubjPasa       ::   estuviesen ;
estar    +     SFKgerundio          ::   estando ;
estar    +     SFKPtcPasMascSg      ::   estado ;
estar    +     SFKPtcPasMascPl      ::   estados ;
estar    +     SFKPtcPasFemSg       ::   estada ;
estar    +     SFKPtcPasFemPl       ::   estadas ;


{ ir }

ir    +    SFK1SgIndPres        ::     voy ;
ir    +    SFK2SgIndPres        ::     vas ;
ir    +    SFK3SgIndPres        ::     va ;
ir    +    SFK1PlIndPres        ::     vamos ;
ir    +    SFK2PlIndPres        ::     vais ;
ir    +    SFK3PlIndPres        ::     van ;
ir    +    SFK1Sg3SubjPres      ::     vaya ;
ir    +    SFK2SgSubjPres       ::     vayas ;
ir    +    SFK1PlSubjPres       ::     vayamos ;
ir    +    SFK2PlSubjPres       ::     vaya¨'is ;
ir    +    SFK3PlSubjPres       ::     vayan ;
ir    +    SFK1Sg3Imperf        ::     iba ;
ir    +    SFK2SgImperf         ::     ibas ;
ir    +    SFK1PlImperf         ::     i¨'bamos ;
ir    +    SFK2PlImperf         ::     ibais ;
ir    +    SFK3PlImperf         ::     iban ;
ir    +    SFK1SgPD             ::     fui ;
ir    +    SFK2SgPD             ::     fuiste ;
ir    +    SFK3SgPD             ::     fue ;
ir    +    SFK1PlPD             ::     fuimos ;
ir    +    SFK2PlPD             ::     fuisteis ;
ir    +    SFK3PlPD             ::     fueron ;
ir    +    SFK1SgFut            ::     ire¨' ;
ir    +    SFK2SgFut            ::     ira¨'s ;
ir    +    SFK3SgFut            ::     ira¨' ;
ir    +    SFK1PlFut            ::     iremos ;
ir    +    SFK2PlFut            ::     ire¨'is ;
ir    +    SFK3PlFut            ::     ira¨'n ;
ir    +    SFK1Sg3Cond          ::     iri¨'a ;
ir    +    SFK2SgCond           ::     iri¨'as ;
ir    +    SFK1PlCond           ::     iri¨'amos ;
ir    +    SFK2PlCond           ::     iri¨'ais ;
ir    +    SFK3PlCond           ::     iri¨'an ;
ir    +    SFKsgImperat         ::     ve ;
ir    +    SFKplImperat         ::     id ;
ir    +    SFK1Sg3SubjPas       ::     fuera ;
ir    +    SFK2SgSubjPas        ::     fueras ;
ir    +    SFK1PlSubjPas        ::     fue¨'ramos ;
ir    +    SFK2PlSubjPas        ::     fuerais ;
ir    +    SFK3PlSubjPas        ::     fueran ;
ir    +    SFK1Sg3SubjPasa      ::     fuese ;
ir    +    SFK2SgSubjPasa       ::     fueses ;
ir    +    SFK1PlSubjPasa       ::     fue¨'semos ;
ir    +    SFK2PlSubjPasa       ::     fueseis ;
ir    +    SFK3PlSubjPasa       ::     fuesen ;
ir    +    SFKgerundio          ::     yendo ;
ir    +    SFKPtcPasMascSg      ::     ido ;
ir    +    SFKPtcPasMascPl      ::     idos ;
ir    +    SFKPtcPasFemSg       ::     ida ;
ir    +    SFKPtcPasFemPl       ::     idas ;

{--------------------------------end V }

{ clitics; assuming both masc. and fem. forms are included in the lexicon,
  (i.e. BCAT) : 
          yo
          tu¨'
          e¨'l
          ella
          usted
          nosotros
          nosotras
          vosotros
          vosotras
          ellos
          ellas
          ustedes
          ello   (neuter)                                            }

{ direct object clitics }

yo         +   SFKcliticOD    ::  me ;
tu¨'         +   SFKcliticOD    ::  te ;
e¨'l         +   SFKcliticOD    ::  lo ;
e¨'l         +   SFKcliticOD1   ::  le ;
ella       +   SFKcliticOD    ::  la ;
usted      +   SFKcliticODm   ::  le ;
usted      +   SFKcliticODf   ::  la ;
nosotros   +   SFKcliticOD    ::  nos ;
nosotras   +   SFKcliticOD    ::  nos ;
vosotros   +   SFKcliticOD    ::  os ;
vosotras   +   SFKcliticOD    ::  os ;
ellos      +   SFKcliticOD    ::  los ;
ellos      +   SFKcliticOD1   ::  les ;
ellas      +   SFKcliticOD    ::  las ;
ustedes    +   SFKcliticODm   ::  les ;
ustedes    +   SFKcliticODf   ::  las ;
ello       +   SFKcliticOD    ::  lo ;

{ indirect object clitics }
    
yo         +   SFKcliticOI    ::  me ;
tu¨'         +   SFKcliticOI    ::  te ;
e¨'l         +   SFKcliticOI    ::  le ;
ella       +   SFKcliticOI    ::  le ;
usted      +   SFKcliticOI    ::  le ;
nosotros   +   SFKcliticOI    ::  nos ;
nosotras   +   SFKcliticOI    ::  nos ;
vosotros   +   SFKcliticOI    ::  os ;
vosotras   +   SFKcliticOI    ::  os ;
ellos      +   SFKcliticOI    ::  les ;
ellas      +   SFKcliticOI    ::  les ;
ustedes    +   SFKcliticOI    ::  les ;
ello       +   SFKcliticOI    ::  le ;

{ strong pronouns }

yo         +   SFKpronFuerte    ::  mi¨' ;
tu¨'         +   SFKpronFuerte    ::  ti ;
e¨'l         +   SFKpronFuerte    ::  e¨'l ;
ella       +   SFKpronFuerte    ::  ella ;
usted      +   SFKpronFuerte    ::  usted ;
nosotros   +   SFKpronFuerte    ::  nosotras ;
nosotras   +   SFKpronFuerte    ::  nosotras ;
vosotros   +   SFKpronFuerte    ::  vosotros ;
vosotras   +   SFKpronFuerte    ::  vosotras ;
ellos      +   SFKpronFuerte    ::  ellos ;
ellas      +   SFKpronFuerte    ::  ellas ;
ustedes    +   SFKpronFuerte    ::  ustedes ;
ello       +   SFKpronFuerte    ::  ello ;

{ reflexive clitics are BCATs! They are dealt with in the M-grammar }

{ reflexive strong pronouns idem }  

{ possessive pronouns; unstressed forms }
{ Possessive pronouns function as ADJ; therefore the plural is formed by
  adding -s, like other ADJs ending on a vowel.                          }

yo         +   SFKposAdj      ::  mi ;
tu¨'         +   SFKposAdj      ::  tu ;
e¨'l         +   SFKposAdj      ::  su ;
ella       +   SFKposAdj      ::  su ;
usted      +   SFKposAdj      ::  su ;
nosotros   +   SFKposAdj      ::  nuestro ;
nosotras   +   SFKposAdj      ::  nuestra ;
vosotros   +   SFKposAdj      ::  vuestro ;
vosotras   +   SFKposAdj      ::  vuestra ;
ellos      +   SFKposAdj      ::  su ;
ellas      +   SFKposAdj      ::  su ;
ustedes    +   SFKposAdj      ::  su ;

{ possessive pronouns; stressed forms; also functioning as ADJ }

{ masc. }

yo         +   SFKposAdjFuerte    ::  mi¨'o ;
tu¨'         +   SFKposAdjFuerte    ::  tuyo ;
e¨'l         +   SFKposAdjFuerte    ::  suyo ;
usted      +   SFKposAdjFuerte    ::  suyo ;
nosotros   +   SFKposAdjFuerte    ::  nuestro ;
vosotros   +   SFKposAdjFuerte    ::  vuestro ;
ellos      +   SFKposAdjFuerte    ::  suyo ;
ustedes    +   SFKposAdjFuerte    ::  suyo ;


{ I assume that the articles are all included in the lexicon, so no 
  morfological rules have to be written for them.                        }

$A1 Lextree-rules.
TYPE LEXTREE;

{ rules for the `regular endings` }

{ The category ALOVERB (with the same attributes as VERB) has been
  introduced in morphology, in order to make it possible to use the
  rules for regular endings for both the verbs without allomorphs as
  for those with allomorphs. These rules change the category VERB
  into ALOVERB. 
  Later on two types of rules follow, changing ALOVERB into SUBVERB:
   - Rules for forms without stem-change (i.e.not adding a SFK).
     (e.g. despertamos; all infinitives)
   - Those for forms with stem-change, adding a SFK.
     (e.g. despert + `SFKdiftong` + SFKo < despert+SFKo)                  }
  
{ Another possibility would have been to add an extra attribute to the
  VERB. However, a clear disadvantage of this solution would have been 
  that the VERB bears a "superfluous" attribute through the entire syntax.}

{ NB. Since only rules for generation are given, the attributes with 
      omega-value are omitted in the conditions.                          } 

{ Since an accent cannot be used in Pascal declarations, the number 1 is
  put behind a vowel bearing an accent: SFKi¨'a --> SFKi1a                  }

{ Verbs ending on -ar      -->>   [ CONJ1,CONJ6,CONJ7 ]
  Verbs ending on -er      -->>   [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ18 ]
  Verbs ending on -ir      -->>   [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ]        
  Verbs ending on -er/-ir  -->>   [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ]  }

$NP
$RL 31
 { Ptcpas; sg. } 

%PtcpasSG

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:    VERBrec1.forma = PtcPas
  C1:    VERBrec1.numero = singular
    C2:    VERBrec1.genero = masc
      C3:    (VERBrec1.CONJclases * [ CONJ1,CONJ7 ])<>[]  
      A3:    SFCATrec1.key := SFKado                
      C3:    (VERBrec1.CONJclases * [ CONJ2,CONJ8,CONJ10,CONJ11,CONJ13,
                                                        CONJ14,CONJ16 ])<>[]
      A3:    SFCATrec1.key := SFKido                     
    A2:     @
    C2:    VERBrec1.genero = fem
      C3:    (VERBrec1.CONJclases * [ CONJ1,CONJ7 ])<>[]
      A3:    SFCATrec1.key := SFKada
      C3:    (VERBrec1.CONJclases * [ CONJ2,CONJ8,CONJ10,CONJ11,CONJ13,
                                                        CONJ14,CONJ16 ])<>[]
      A3:    SFCATrec1.key := SFKida                      
    A2:     @
  A1:     @
A0:     @
&

$RL 32
 { Ptcpas; pl. } 

%PtcpasPL

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:    VERBrec1.forma = PtcPas
  C1:    VERBrec1.numero = plural
    C2:    VERBrec1.genero = masc
      C3:    (VERBrec1.CONJclases * [ CONJ1,CONJ7 ])<>[]
      A3:    SFCATrec1.key := SFKados
      C3:    (VERBrec1.CONJclases * [ CONJ2,CONJ8,CONJ10,CONJ11,CONJ13,
                                                        CONJ14,CONJ16 ])<>[]
      A3:    SFCATrec1.key := SFKidos                 
    A2:     @
    C2:    VERBrec1.genero = fem
      C3:    (VERBrec1.CONJclases * [ CONJ1,CONJ7 ])<>[]
      A3:    SFCATrec1.key := SFKadas
      C3:    (VERBrec1.CONJclases * [ CONJ2,CONJ8,CONJ10,CONJ11,CONJ13,
                                                        CONJ14,CONJ16 ])<>[]
      A3:    SFCATrec1.key := SFKidas                 
    A2:     @
  A1:     @
A0:     @ 
&

{---------------------------}

$RL 21
 { gerundio } 

%Gerundio

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:  VERBrec1.forma = Gerundio
  C1:    (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
  A1:    SFCATrec1.key := SFKando
  C1:    (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                 CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                 CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
  A1:    SFCATrec1.key := SFKiendo
A0:     @  
&

{---------------------------}


$RL 25
{ `1st ps.sg. all tenses` }

 { PresInd }

%PresIndSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ2,CONJ3,CONJ4,CONJ5,CONJ6,
                                    CONJ7,CONJ8,CONJ9,CONJ10,CONJ11,CONJ12,
                                    CONJ13,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKo    
    A2:    @
  A1:    @
A0:    @  
&

$RL 23
 { PresSubj }

%PresSubjSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKe
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKa
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKaba
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1a
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { PD }

%PDsg1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKe1
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1
      C3:   (VERBrec1.CONJclases * [ CONJ7,CONJ8,CONJ9,CONJ10,CONJ13, 
                                    CONJ14,CONJ15,CONJ16,CONJ17 ])<>[] 
                                                                { "sterk" }
      A3:   SFCATrec1.key := SFKe
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKara
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiera
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPasa }

%SubjPasaSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKase
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiese
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKare1
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKere1
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[] 
      A3:   SFCATrec1.key := SFKire1
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { Condic }

%CondicSG1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1a
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1a
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1a
    A2:    @
  A1:    @
A0:    @
&

{-------------------------}

$RL 25
{ `2nd ps.sg. all tenses` }

 { PresInd }

%PresIndSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKas
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKes
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { PresSubj }

%PresSubjSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKes
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKas
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKabas
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1as
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { PD }

%PDsg2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKaste
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiste
      C3:   (VERBrec1.CONJclases * [ CONJ7,CONJ8,CONJ9,CONJ10,CONJ13, 
                                    CONJ14,CONJ15,CONJ16,CONJ17 ])<>[] 
                                                                   { "sterk" }
      A3:   SFCATrec1.key := SFKiste
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKaras
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKieras
    A2:    @
  A1:    @
A0:    @
&

$RL 24 
 { SubjPasa }

%SubjPasaSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKases
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKieses
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKara1s
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKera1s
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[]
      A3:   SFCATrec1.key := SFKira1s
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Condic }

%CondicSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1as
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1as
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1as
    A2:    @
  A1:    @
A0:    @
&

$RL 26
 { Imperat }

%ImperatSG

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperat
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKa
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,CONJ9,
                                    CONJ10,CONJ13,CONJ14,CONJ15,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKe
    A2:    @
  A1:    @
A0:    @
&

{------------------------}

$RL 25
{ `3rd ps.sg. all tenses` }

 { PresInd }

%PresIndSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKa
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKe
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { PresSubj }

%PresSubjSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKe
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKa
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKaba
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1a
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { PD }

%PDsg3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKo1
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKio1
      C3:   (VERBrec1.CONJclases * [ CONJ7,CONJ8,CONJ9,CONJ10,CONJ13, 
                                    CONJ14,CONJ15,CONJ16,CONJ17 ])<>[] 
                                                                  { "sterk" }
      A3:   SFCATrec1.key := SFKo
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKara
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiera
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPasa }

%SubjPasaSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKase
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiese
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKara1
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKera1
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[]
      A3:   SFCATrec1.key := SFKira1
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { Condic }

%CondicSG3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = singular
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1a
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1a
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1a
    A2:    @
  A1:    @
A0:    @
&

{----------------------}

$RL 27
{ `1st ps.pl. all tenses` }

 { PresInd }

%PresIndPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKamos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKemos
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[]
      A3:   SFCATrec1.key := SFKimos
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { PresSubj }

%PresSubjPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKemos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKamos
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKa1bamos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1amos
    A2:    @
  A1:    @
A0:    @
&

$RL 26
 { PD }

%PDpl1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKamos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ7, 
                                    CONJ8,CONJ9,CONJ10,CONJ11,CONJ12,
                                    CONJ13,CONJ14,CONJ15,CONJ16,
                                    CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKimos              { bevat ook "sterk" }
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKa1ramos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKie1ramos
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPasa }

%SubjPasaPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKa1semos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKie1semos
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKaremos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKeremos
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[]
      A3:   SFCATrec1.key := SFKiremos
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { Condic }

%CondicPL1

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 1
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1amos
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1amos
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1amos
    A2:    @
  A1:    @
A0:    @
&

{---------------------}

$RL 27
{ `2nd ps.pl. all tenses` }

 { PresInd }

%PresIndPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKa1is
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKe1is
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[]
      A3:   SFCATrec1.key := SFKi1s
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { PresSubj }

%PresSubjPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKe1is
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKa1is
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKabais
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1ais
    A2:    @
  A1:    @
A0:    @
&

$RL 26
 { PD }

%PDpl2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKasteis
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ7, 
                                    CONJ8,CONJ9,CONJ10,CONJ11,CONJ12,
                                    CONJ13,CONJ14,CONJ15,CONJ16,
                                    CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKisteis           { bevat ook "sterk" }
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKarais
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKierais
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPasa }

%SubjPasaPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKaseis
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKieseis
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKare1is
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKere1is
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[]
      A3:   SFCATrec1.key := SFKire1is
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Condic }

%CondicPL2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 2
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1ais
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                         CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1ais
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1ais
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Imperat }

%ImperatPL

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperat
  C1:   VERBrec1.numero = plural
    C2:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
    A2:   SFCATrec1.key := SFKad
    C2:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                        CONJ14,CONJ15,CONJ16,CONJ18 ])<>[]
    A2:   SFCATrec1.key := SFKed
    C2:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[]
    A2:   SFCATrec1.key := SFKid
  A1:    @
A0:    @
&

{---------------------}

$RL 25
{ `3rd ps.pl. all tenses` }

 { PresInd }

%PresIndPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
      A3:   SFCATrec1.key := SFKan
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKen
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { PresSubj }

%PresSubjPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresSubj
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKen
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKan
    A2:    @
  A1:    @
A0:    @
&

$RL 23
 { Imperf }

%ImperfPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperf
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKaban
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ8,
                                    CONJ9,CONJ10,CONJ11,CONJ12,CONJ13,
                                    CONJ14,CONJ15,CONJ16,CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKi1an
    A2:    @
  A1:    @
A0:    @
&

$RL 26
 { PD }

%PDpl3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PD
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKaron
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ7, 
                                    CONJ8,CONJ9,CONJ10,CONJ11,CONJ12,
                                    CONJ13,CONJ14,CONJ15,CONJ16,
                                    CONJ17,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKieron          { bevat ook "sterk" }
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPas }

%SubjPasPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPas
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKaran
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKieran
    A2:    @
  A1:    @
A0:    @
&

$RL 24
 { SubjPasa }

%SubjPasaPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = SubjPasa
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6 ])<>[]
      A3:   SFCATrec1.key := SFKasen
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ3,CONJ4,CONJ5,CONJ11, 
                                                      CONJ12,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKiesen
    A2:    @
  A1:    @
A0:    @
&

$RL 25
 { Futuro }

%FuturoPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Futuro
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKara1n
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ18 ])<>[]
      A3:   SFCATrec1.key := SFKera1n
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9 ])<>[]
      A3:   SFCATrec1.key := SFKira1n
    A2:    @
  A1:    @
A0:    @
&

$RL 27
 { Condic }

%CondicPL3

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Condic
  C1:   VERBrec1.numero = plural
    C2:   VERBrec1.persona = 3
      C3:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[] 
      A3:   SFCATrec1.key := SFKari1an
      C3:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,CONJ13,
                                          CONJ14,CONJ15,CONJ16,CONJ18 ])<>[] 
      A3:   SFCATrec1.key := SFKeri1an
      C3:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[] 
      A3:   SFCATrec1.key := SFKiri1an
    A2:    @
  A1:    @
A0:    @
&

{---------------------}

$RL 25
{ infinitivo }

%Infinitivo

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:   VERBrec1.forma = Infinitivo
  C1:   (VERBrec1.CONJclases * [ CONJ1,CONJ6,CONJ7 ])<>[]
  A1:   SFCATrec1.key := SFKar
  C1:   (VERBrec1.CONJclases * [ CONJ2,CONJ4,CONJ8,CONJ10,CONJ11,
                                CONJ13,CONJ14,CONJ15,CONJ16 ])<>[]  
                                                         { proveer not! }
  A1:   SFCATrec1.key := SFKer
  C1:   (VERBrec1.CONJclases * [ CONJ3,CONJ5,CONJ9,CONJ12,CONJ17 ])<>[]
  A1:   SFCATrec1.key := SFKir
A0:    @
&

{---------------------}
{---------------------}

$NP 
{  `irregular verbs (CONJ0); all tenses` }

{ PtcPas. }

%PtcpasIRR

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:     VERBrec1.forma = PtcPas
  C1:     (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.genero = masc
      A3:     SFCATrec1.key := SFKPtcPasMascSg
      C3:     VERBrec1.genero = fem
      A3:     SFCATrec1.key := SFKPtcPasFemSg
    A2:      @
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.genero = fem
      A3:     SFCATrec1.key := SFKPtcPasFemSg
      C3:     VERBrec1.genero = masc
      A3:     SFCATrec1.key := SFKPtcPasFemPl 
    A2:      @
  A1:      @
A0:      @
&

$RL 17
{ Gerundio }

%GerundioIRR

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = Gerundio
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
  A1:   SFCATrec1.key := SFKgerundio
A0:  @
&

$RL 25
{ PresInd; sg. }

%PresIndIRRsg

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = PresInd
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
       C3:   VERBrec1.persona = 1
       A3:   SFCATrec1.key := SFK1SgIndPres
       C3:   VERBrec1.persona = 2
       A3:   SFCATrec1.key := SFK2SgIndPres
       C3:   VERBrec1.persona = 3
       A3:   SFCATrec1.key := SFK3SgIndPres
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ PresInd; pl. }

%PresIndIRRpl

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = PresInd
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlIndPres
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlIndPres
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlIndPres
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ PresSubj; sg. }

%PresSubjIRRsg

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = PresSubj
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1Sg3SubjPres
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgIndPres
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK1Sg3SubjPres
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ PresSubj; pl. }

%PresSubjIRRpl

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = PresSubj
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlSubjPres
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlSubjPres
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlSubjPres
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ Imperf; sg. }

%ImperfIRRsg 

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = Imperf
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1Sg3Imperf
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgImperf
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK1Sg3Imperf
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ Imperf; pl. }

%ImperfIRRpl

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = Imperf
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlImperf
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlImperf
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlImperf
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ PD; sg. }

%PDirrSG

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = PD
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1SgPD
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgPD
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3SgPD
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ PD; pl. }

%PDirrPL

M1: SUBVERB { SUBVERBrec1 }
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = PD
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlPD
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlPD
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlPD
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ SubjPas; sg. }

%SubjPasIRRsg

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = SubjPas
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1Sg3SubjPas
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgSubjPas
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK1Sg3SubjPas
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ SubjPas; pl. }

%SubjPasIRRpl

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = SubjPas
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlSubjPas
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlSubjPas
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlSubjPas
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ SubjPasa; sg. }

%SubjPasaIRRsg

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = SubjPasa
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1Sg3SubjPasa
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgSubjPasa
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK1Sg3SubjPasa
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ SubjPasa; pl. }

%SubjPasaIRRpl

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = SubjPasa
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlSubjPasa
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlSubjPasa
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlSubjpasa
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ Futuro; sg. }

%FuturoIRRsg

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = Futuro
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1SgFut
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgFut
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3SgFut
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ Futuro; pl. }

%FuturoIRRpl

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = Futuro
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlFut
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlFut
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlFut
    A2:  @
  A1:  @
A0:  @
&

$RL 25
{ Condic; sg. }

%CondIRRsg

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = Condic
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1Sg3Cond
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2SgCond
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK1Sg3Cond
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ Condic; pl. }

%CondIRRpl

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp:

C0:  VERBrec1.forma = Condic
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:  VERBrec1.numero = plural
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFK1PlCond
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFK2PlCond
      C3:   VERBrec1.persona = 3
      A3:   SFCATrec1.key := SFK3PlCond
    A2:  @
  A1:  @
A0:  @
&

$RL 23
{ Imperat }

%ImperatIRR

M1: SUBVERB { SUBVERBrec1 } 
M2: SFCAT { SFCATrec1 }

M:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]


decomp: 

C0:  VERBrec1.forma = Imperat
  C1:  (VERBrec1.CONJclases * [ CONJ0 ])<>[]
    C2:   VERBrec1.numero = singular
    A2:   SFCATrec1.key := SFKsgImperat
    C2:   VERBrec1.numero = plural
    A2:   SFCATrec1.key := SFKplImperat
  A1:  @
A0:  @
&

{------------------------------------------------------}


$NP
{ The next rules are needed to make every form without stem-change change
  category:  ALOVERB ---> SUBVERB.                                        }

{ nada/diftong }

%ALOSUBnadadiftong

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = nadaCLASE
A0:     @
C0:    ALOVERBrec1.Aloclase = diftongCLASE
  C1:    ALOVERBrec1.forma = PresInd
    C2:    ALOVERBrec1.numero = plural
      C3:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
      A3:     @
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = PresSubj
    C2:    ALOVERBrec1.numero = plural
      C3:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
      A3:     @
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = Imperat
    C2:    ALOVERBrec1.persona = 2  
      C3:    ALOVERBrec1.numero = plural
      A3:     @
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = Imperf) or
         (ALOVERBrec1.forma = PD) or
         (ALOVERBrec1.forma = SubjPas) or
         (ALOVERBrec1.forma = SubjPasa) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or
         (ALOVERBrec1.forma = Gerundio) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo)
  A1:     @
A0:     @
&

$RL 31
{ irrMedek }

%ALOSUBmedek

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:   ALOVERBrec1.Aloclase = irrMedekCLASE
  C1:   ALOVERBrec1.forma = presInd
    C2:   ALOVERBrec1.numero = plural
    A2:    @
    C2:   ALOVERBrec1.numero = singular
      C3:   (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
      A3:    @
    A2:    @
  A1:    @
  C1:   (ALOVERBrec1.forma = Imperf) or
        (ALOVERBrec1.forma = PD) or
        (ALOVERBrec1.forma = SubjPas) or
        (ALOVERBrec1.forma = SubjPasa) or
        (ALOVERBrec1.forma = Futuro) or
        (ALOVERBrec1.forma = Condic) or  
        (ALOVERBrec1.forma = Imperat) or
        (ALOVERBrec1.forma = Gerundio) or
        (ALOVERBrec1.forma = PtcPas) or
        (ALOVERBrec1.forma = Infinitivo)
  A1:   @
A0:   @      
&

$RL 22
{ sterk }

%ALOSUBsterk

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:   ALOVERBrec1.Aloclase = sterkCLASE
  C1:   (ALOVERBrec1.forma = PresInd) or
        (ALOVERBrec1.forma = PresSubj) or
        (ALOVERBrec1.forma = Imperf) or
        (ALOVERBrec1.forma = Futuro) or
        (ALOVERBrec1.forma = Condic) or
        (ALOVERBrec1.forma = Imperat) or
        (ALOVERBrec1.forma = Gerundio) or
        (ALOVERBrec1.forma = PtcPas) or
        (ALOVERBrec1.forma = Infinitivo) 
  A1:    @
A0:    @
&

$RL 31
{ eiouHalf }

%ALOSUBeiouHalf

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:   ALOVERBrec1.Aloclase = eiouHalfCLASE
  C1:   ALOVERBrec1.forma = PresSubj
    C2:   ALOVERBrec1.numero = singular
    A2:    @
    C2:   ALOVERBrec1.numero = plural
      C3:   ALOVERBrec1.persona = 3
      A3:    @
    A2:    @
  A1:    @
  C1:   ALOVERBrec1.forma = PD
    C2:   (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
    A2:    @
  A1:    @
  C1:   (ALOVERBrec1.forma = PresInd) or
        (ALOVERBrec1.forma = Imperf) or
        (ALOVERBrec1.forma = Futuro) or
        (ALOVERBrec1.forma = Condic) or
        (ALOVERBrec1.forma = Imperat) or
        (ALOVERBrec1.forma = PtcPas) or
        (ALOVERBrec1.forma = Infinitivo) 
  A1:    @
A0:    @
&

$RL 34
{ eiouHeel }

%ALOSUBeiouHeel

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = eiouHeelCLASE
  C1:    ALOVERBrec1.forma = PresInd
    C2:    ALOVERBrec1.numero = plural
      C3:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
      A3:     @
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = PD
    C2:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = Imperat
    C2:    ALOVERBrec1.numero = plural
      C3:    ALOVERBrec1.persona = 2
      A3:     @
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = Imperf) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo)  
  A1:     @
A0:     @      
&

$RL 25
{ yMinPres }

%ALOSUByMinPres

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = yMinPresCLASE
  C1:    ALOVERBrec1.forma = PD
    C2:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = PresInd) or
         (ALOVERBrec1.forma = PresSubj) or
         (ALOVERBrec1.forma = Imperf) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or
         (ALOVERBrec1.forma = Imperat) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo) 
  A1:     @
A0:     @
&

$RL 21
{ eiouPD }

%ALOSUBeiouPD

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:  ALOVERBrec1.Aloclase = eiouPDCLASE
  C1:  (ALOVERBrec1.forma = PresInd) or
       (ALOVERBrec1.forma = PresSubj) or
       (ALOVERBrec1.forma = Imperf) or
       (ALOVERBrec1.forma = Futuro) or
       (ALOVERBrec1.forma = Condic) or
       (ALOVERBrec1.forma = Imperat) or
       (ALOVERBrec1.forma = PtcPas) or
       (ALOVERBrec1.forma = Infinitivo) 
  A1:   @
A0:   @
&

$RL 24
{ umlaut; rule for all tenses, except PresSubj }

%ALOSUBumlaut

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:  ALOVERBrec1.Aloclase = umlautCLASE
  C1:  (ALOVERBrec1.forma = PresInd) or
       (ALOVERBrec1.forma = Imperf) or
       (ALOVERBrec1.forma = PD) or
       (ALOVERBrec1.forma = SubjPas) or
       (ALOVERBrec1.forma = SubjPasa) or
       (ALOVERBrec1.forma = Futuro) or
       (ALOVERBrec1.forma = Condic) or
       (ALOVERBrec1.forma = Imperat) or
       (ALOVERBrec1.forma = Gerundio) or
       (ALOVERBrec1.forma = PtcPas) or
       (ALOVERBrec1.forma = Infinitivo) 
  A1:   @
A0:   @
&

$RL 33
{ ve }

%ALOSUBve

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = veCLASE
  C1:    ALOVERBrec1.forma = PresInd
    C2:    ALOVERBrec1.numero = plural
    A2:     @
    C2:    ALOVERBrec1.numero = singular
      C3:    (ALOVERBrec1.persona = 2) or (ALOVERBrec1.persona = 3)
      A3:     @
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = Imperat
    C2:    ALOVERBrec1.numero = plural
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = PD) or
         (ALOVERBrec1.forma = SubjPas) or
         (ALOVERBrec1.forma = SubjPasa) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or
         (ALOVERBrec1.forma = Gerundio) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo) 
  A1:     @
A0:     @
&

$RL 32
{ yPlusPres }

%ALOSUByPlusPres

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = yPlusPresCLASE
  C1:    ALOVERBrec1.forma = PresInd
    C2:    ALOVERBrec1.persona = 2
    A2:     @
    C2:    ALOVERBrec1.persona = 1
      C3:    ALOVERBrec1.numero = plural
      A3:     @
    A2:     @
  A1:     @
  C1:    ALOVERBrec1.forma = PD
    C2:    (ALOVERBrec1.persona = 1) or (ALOVERBrec1.persona = 2)
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = PresSubj) or
         (ALOVERBrec1.forma = Imperf) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or
         (ALOVERBrec1.forma = Imperat) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo) 
  A1:     @
A0:     @
&

$RL 31
{ bendic }

%ALOSUBbendic

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:    ALOVERBrec1.Aloclase = bendicCLASE
  C1:    ALOVERBrec1.forma = PresInd
    C2:    ALOVERBrec1.persona = 1
    A2:     @
    C2:    ALOVERBrec1.persona = 2
      C3:    ALOVERBrec1.numero = plural
      A3:     @
    A2:     @
  A1:     @
  C1:    (ALOVERBrec1.forma = PresSubj) or
         (ALOVERBrec1.forma = Imperf) or
         (ALOVERBrec1.forma = PD) or
         (ALOVERBrec1.forma = SubjPas) or
         (ALOVERBrec1.forma = SubjPasa) or
         (ALOVERBrec1.forma = Futuro) or
         (ALOVERBrec1.forma = Condic) or 
         (ALOVERBrec1.forma = Imperat) or
         (ALOVERBrec1.forma = PtcPas) or
         (ALOVERBrec1.forma = Infinitivo) 
  A1:     @
A0:     @
&

$RL 27
{ sepa }

%ALOSUBsepa

m1: SUBVERB { SUBVERBrec1 }
m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB {SUBVERBrec1 }]


decomp: 

C0:   ALOVERBrec1.Aloclase = sepaCLASE
  C1:   (ALOVERBrec1.forma = PresInd) or
        (ALOVERBrec1.forma = Imperf) or
        (ALOVERBrec1.forma = PD) or
        (ALOVERBrec1.forma = SubjPas) or
        (ALOVERBrec1.forma = SubjPasa) or
        (ALOVERBrec1.forma = Futuro) or
        (ALOVERBrec1.forma = Condic) or
        (ALOVERBrec1.forma = Imperat) or
        (ALOVERBrec1.forma = Gerundio) or
        (ALOVERBrec1.forma = PtcPas) or
        (ALOVERBrec1.forma = Infinitivo) 
  A1:    @
A0:    @
&

{---------------------------}
{----------------------------}


$NP
{ The following rules apply to forms with stem-change (allomorph/SFK):
                        ALOVERB ---> SUBVERB + SFK                       }


{ PresInd }

{ 2/3sg + 3pl  could be combined }

{ 1st ps.sg. } 

%PresIndALOsg1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PresInd
  C1:    VERBrec1.persona = 1
    C2:    VERBrec1.numero = singular
      C3:    VERBrec1.Aloclase = diftongCLASE
      A3:    SFCATrec1.key := SFKdiftong
      C3:    VERBrec1.Aloclase = irrMedekCLASE
      A3:    SFCATrec1.key := SFKirrMedek
      C3:    VERBrec1.Aloclase = eiouHeelCLASE
      A3:    SFCATrec1.key := SFKeiouHeel    
      C3:    VERBrec1.Aloclase = veCLASE
      A3:    SFCATrec1.key := SFKve
    A2:     @
  A1:     @
A0:     @
&

$RL 27
{ 2nd/3rd ps.sg. }

%PresIndALOsg23

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PresInd
  C1:    (VERBrec1.persona = 2) or (VERBrec1.persona = 3)
    C2:    VERBrec1.numero = singular
      C3:    VERBrec1.Aloclase = diftongCLASE
      A3:    SFCATrec1.key := SFKdiftong
      C3:    VERBrec1.Aloclase = eiouHeelCLASE
      A3:    SFCATrec1.key := SFKeiouHeel
      C3:    VERBrec1.Aloclase = yPlusPresCLASE
      A3:    SFCATrec1.key := SFKyPlusPres  
      C3:    VERBrec1.Aloclase = bendicCLASE
      A3:    SFCATrec1.key := SFKbendic
    A2:     @
  A1:     @
A0:     @
&

$RL 29
{ 3rd ps.pl. }

%PresIndALOpl3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PresInd
  C1:    VERBrec1.persona = 3
    C2:    VERBrec1.numero = plural
      C3:    VERBrec1.Aloclase = diftongCLASE
      A3:    SFCATrec1.key := SFKdiftong
      C3:    VERBrec1.Aloclase = eiouHeelCLASE
      A3:    SFCATrec1.key := SFKeiouHeel
      C3:    VERBrec1.Aloclase = yPlusPresCLASE
      A3:    SFCATrec1.key := SFKyPlusPres  
      C3:    VERBrec1.Aloclase = bendicCLASE
      A3:    SFCATrec1.key := SFKbendic
    A2:     @
  A1:     @
A0:     @
&

{-------------------------}

$RL 33
{ PresSubj }

{ 1/2/3sg + 3pl could be combined }

{ 1st/2nd/3rd ps.sg. }

%PresSubjALOsg123

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PresSubj
  C1:     VERBrec1.numero = singular
    C2:     VERBrec1.Aloclase = diftongCLASE
    A2:     SFCATrec1.key := SFKdiftong
    C2:     VERBrec1.Aloclase = irrMedekCLASE
    A2:     SFCATrec1.key := SFKirrMedek
    C2:     VERBrec1.Aloclase = eiouHeelCLASE
    A2:     SFCATrec1.key := SFKeiouHeel    
    C2:     VERBrec1.Aloclase = umlautCLASE
    A2:     SFCATrec1.key := SFKumlaut
    C2:     VERBrec1.Aloclase = veCLASE
    A2:     SFCATrec1.key := SFKve
    C2:     VERBrec1.Aloclase = sepaCLASE
    A2:     SFCATrec1.key := SFKsepa
  A1:      @
A0:      @
&

$RL 31
{ 1st ps.pl. }

%PresSubjALOpl1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PresSubj
  C1:     VERBrec1.persona = 1
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = irrMedekCLASE
      A3:     SFCATrec1.key := SFKirrMedek
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = umlautCLASE
      A3:     SFCATrec1.key := SFKumlaut
      C3:     VERBrec1.Aloclase = veCLASE
      A3:     SFCATrec1.key := SFKve
      C3:     VERBrec1.Aloclase = sepaCLASE
      A3:     SFCATrec1.key := SFKsepa
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 2nd ps.pl. }

%PresSubjALOpl2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PresSubj
  C1:     VERBrec1.persona = 2
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = irrMedekCLASE
      A3:     SFCATrec1.key := SFKirrMedek
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = umlautCLASE
      A3:     SFCATrec1.key := SFKumlaut
      C3:     VERBrec1.Aloclase = veCLASE
      A3:     SFCATrec1.key := SFKve
      C3:     VERBrec1.Aloclase = sepaCLASE
      A3:     SFCATrec1.key := SFKsepa
    A2:      @
  A1:      @
A0:      @
&

$RL 33
{ 3rd ps.pl. }

%PresSubjALOpl3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PresSubj
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = diftongCLASE
      A3:     SFCATrec1.key := SFKdiftong
      C3:     VERBrec1.Aloclase = irrMedekCLASE
      A3:     SFCATrec1.key := SFKirrMedek
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = umlautCLASE
      A3:     SFCATrec1.key := SFKumlaut
      C3:     VERBrec1.Aloclase = veCLASE
      A3:     SFCATrec1.key := SFKve
      C3:     VERBrec1.Aloclase = sepaCLASE
      A3:     SFCATrec1.key := SFKsepa
    A2:      @
  A1:      @
A0:      @
&

{----------------------}

$RL 24
{ 2nd.ps.sg.Imperat } 

%ImperatALOsg

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = Imperat
  C1:    VERBrec1.numero = singular
    C2:    VERBrec1.Aloclase = diftongCLASE
    A2:    SFCATrec1.key := SFKdiftong
    C2:    VERBrec1.Aloclase = eiouHeelCLASE
    A2:    SFCATrec1.key := SFKeiouHeel
    C2:    VERBrec1.Aloclase = veCLASE
    A2:    SFCATrec1.key := SFKve    
  A1:     @
A0:     @
&

{--------------------}

$RL 35
{ SubjPas }

{ Similar for all tenses and persons }

{ 1st ps.sg. }

%SubjPasALOsg1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 1
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 2nd ps.sg. }

%SubjPasALOsg2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 2
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 3rd ps.sg. }

%SubjPasALOsg3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 1st ps.pl. }

%SubjPasALOpl1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 1
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 2nd ps.pl. }

%SubjPasALOpl2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 2
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 33
{ 3rd ps.pl. }

%SubjPasALOpl3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPas
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

{-------------------}

$RL 33 
{ SubjPasa; similar to SubjPas }

{ 1st ps.sg. }

%SubjPasaALOsg1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPasa
  C1:     VERBrec1.persona = 1
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 2nd ps.sg. }

%SubjPasaALOsg2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPasa
  C1:     VERBrec1.persona = 2
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 3rd ps.sg. }

%SubjPasaALOsg3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPasa
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 1st ps.pl. }

%SubjPasaALOpl1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPasa
  C1:     VERBrec1.persona = 1
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 31
{ 2nd ps.pl. }

%SubjPasaALOpl2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = SubjPasa
  C1:     VERBrec1.persona = 2
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

$RL 33
{ 3rd ps.pl. }

%SubjPasaALOpl3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PresSubj
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
      C3:     VERBrec1.Aloclase = yPlusPresCLASE
      A3:     SFCATrec1.key := SFKyPlusPres
    A2:      @
  A1:      @
A0:      @
&

{---------------------}

$RL 28 
{ PD }

{ 1/2sg + 1/2pl could be combined.  }
{ 3sg + 3pl also.                   }

{ 1st ps.sg. } 

%PDaloSG1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PD
  C1:    VERBrec1.persona = 1
    C2:    VERBrec1.numero = singular
      C3:    VERBrec1.Aloclase = sterkCLASE
      A3:    SFCATrec1.key := SFKsterk
      C3:    VERBrec1.Aloclase = eiouPDCLASE
      A3:    SFCATrec1.key := SFKeiouPD
    A2:     @
  A1:     @
A0:     @
&

$RL 23
{ 2nd ps.sg. } 

%PDaloSG2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PD
  C1:    VERBrec1.persona = 2
    C2:    VERBrec1.numero = singular
      C3:    VERBrec1.Aloclase = sterkCLASE
      A3:    SFCATrec1.key := SFKsterk
      C3:    VERBrec1.Aloclase = eiouPDCLASE
      A3:    SFCATrec1.key := SFKeiouPD
    A2:     @
  A1:     @
A0:     @
&

$RL 29
{ 3rd ps.sg. } 

%PDaloSG3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PD
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = singular
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
    A2:      @
  A1:      @
A0:      @
&

$RL 23
{ 1st ps.pl.} 

%PDaloPL1

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PD
  C1:    VERBrec1.persona = 1
    C2:    VERBrec1.numero = plural
      C3:    VERBrec1.Aloclase = sterkCLASE
      A3:    SFCATrec1.key := SFKsterk
      C3:    VERBrec1.Aloclase = eiouPDCLASE
      A3:    SFCATrec1.key := SFKeiouPD
    A2:     @
  A1:     @
A0:     @
&

$RL 23
{ 2nd ps.pl.} 

%PDaloPL2

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:    VERBrec1.forma = PD
  C1:    VERBrec1.persona = 2
    C2:    VERBrec1.numero = plural
      C3:    VERBrec1.Aloclase = sterkCLASE
      A3:    SFCATrec1.key := SFKsterk
      C3:    VERBrec1.Aloclase = eiouPDCLASE
      A3:    SFCATrec1.key := SFKeiouPD
    A2:     @
  A1:     @
A0:     @
&

$RL 31
{ 3rd ps.pl. } 

%PDaloPL3

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = PD
  C1:     VERBrec1.persona = 3
    C2:     VERBrec1.numero = plural
      C3:     VERBrec1.Aloclase = sterkCLASE
      A3:     SFCATrec1.key := SFKsterk
      C3:     VERBrec1.Aloclase = eiouHalfCLASE
      A3:     SFCATrec1.key := SFKeiouHalf
      C3:     VERBrec1.Aloclase = eiouHeelCLASE
      A3:     SFCATrec1.key := SFKeiouHeel    
      C3:     VERBrec1.Aloclase = yMinPresCLASE
      A3:     SFCATrec1.key := SFKyMinPres
      C3:     VERBrec1.Aloclase = eiouPDCLASE
      A3:     SFCATrec1.key := SFKeiouPD
    A2:      @
  A1:      @
A0:      @
&

{------------------------}

$RL 29
{ gerundio }

%GerundioALO

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:     VERBrec1.forma = Gerundio
  C1:     VERBrec1.Aloclase = eiouHalfCLASE
  A1:     SFCATrec1.key := SFKeiouHalf
  C1:     VERBrec1.Aloclase = eiouHeelCLASE
  A1:     SFCATrec1.key := SFKeiouHeel
  C1:     VERBrec1.Aloclase = yMinPresCLASE
  A1:     SFCATrec1.key := SFKyMinPres   
  C1:     VERBrec1.Aloclase = eiouPDCLASE
  A1:     SFCATrec1.key := SFKeiouPD
  C1:     VERBrec1.Aloclase = yPlusPresCLASE
  A1:     SFCATrec1.key := SFKyPlusPres
  C1:     VERBrec1.Aloclase = bendicCLASE
  A1:     SFCATrec1.key := SFKbendic
A0:      @
&

{-------------------------}

$RL 22
{ Imperfecto }

{ Only `veCLASE`, for all tenses and persons sg. & pl. }

%ImperfALO

m1: SUBVERB { SUBVERBrec1 }
m2: SFCAT { SFCATrec1 }

m:  ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]   


decomp: 

C0:  VERBrec1.forma = Imperf
  C1:  VERBrec1.Aloclase = veCLASE
  A1:  SFCATrec1.key := SFKve
A0:   @
&

{--------------------------}
{--------------------------}

$NP
{ "Irregular" rules, referring to `suffixkeys`. }

{ rule for irregular PtcPas: SFKirrPtcPas }

{ NB. Compare:%IRRPtcPas -->  rule for strong Ptc. for verbs belonging to
                                different Conjugation classes.
                                Segmentation rule in `suffix-table`.
             %PtcpasIRR -->  rule for Ptc. of verbs belonging to CONJ0,
                                i.e. the "true" irregular verbs.            
                                Segmentation rule in `freefix-table`.         }

%IRRPtcpas

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:    VERBrec1.forma = PtcPas
  C1:    (VERBrec1.CONJclases * [ CONJ4,CONJ5,CONJ6,CONJ15,CONJ18 ])<>[]
    C2:    VERBrec1.genero = masc
      C3:    VERBrec1.numero = singular
      A3:    SFCATrec1.key := SFKirrPtcPasMascSg
      C3:    VERBrec1.numero = plural
      A3:    SFCATrec1.key := SFKirrPtcPasMascPl
    A2:     @
    C2:    VERBrec1.genero = fem
      C3:    VERBrec1.numero = singular
      A3:    SFCATrec1.key := SFKirrPtcPasFemSg
      C3:    VERBrec1.numero = plural
      A3:    SFCATrec1.key := SFKirrPtcPasFemPl
    A2:     @
  A1:     @
A0:     @
&      

{---------------------}

$RL 23 
{ rule for irregular 2nd ps.sg.Imperat:  SFKirrImperatSG }

%IRRImperatSG2

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Imperat
  C1:   (VERBrec1.CONJclases * [ CONJ11,CONJ12,CONJ16,CONJ17 ])<>[]
    C2:   VERBrec1.numero = singular
      C3:   VERBrec1.persona = 2
      A3:   SFCATrec1.key := SFKirrImperatSG
    A2:    @
  A1:    @
A0:    @
&

{----------------------}

$RL 23
{ rule for se¨' (< saber):   SFKirr1psSgInd }

%SaberSe

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = PresInd
  C1:   (VERBrec1.CONJclases * [ CONJ14 ])<>[]
    C2:   VERBrec1.numero = singular
      C3:   VERBrec1.persona = 1
      A3:   SFCATrec1.key := SFKirr1psSgInd
    A2:    @
  A1:    @
A0:    @
&

{----------------------}

$RL 19
{ rule for proveer:  SFKirrInf }

%INFproveer

m1: ALOVERB { ALOVERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]
m2: SFCAT { SFCATrec1 }

m:  VERB { VERBrec1 }[ head/SUBVERB { SUBVERBrec1 }]  


decomp: 

C0:   VERBrec1.forma = Infinitivo
  C1:   (VERBrec1.CONJclases * [ CONJ18 ])<>[]
  A1:   SFCATrec1.key := SFKirrInf
A0:    @
&

{-----------------------------------}

$NP
{ one rule to go from SUBVERB to BVERB in generation }

%SUBBASICverb 

m1:  BVERB { BVERBrec1 }
m:   SUBVERB { SUBVERBrec1 }[ head/BVERB { BVERBrec1 }]  


decomp: 

C0:    true
A0:    @ 
&

{------------------------------}
{--------------------------------------------- end VERBs }

$NP

{ lextreerules for `NOUNS` }

{ rules to go from NOUN to SUBNOUN in generation }

{ singular }

%NOUNsg

m1:  SUBNOUN { SUBNOUNrec1 }
m:   NOUN { NOUNrec1 }[ head/SUBNOUN { SUBNOUNrec1 }]


decomp: 

C0:   NOUNrec1.numero = singular
  C1:   NOUNrec1.PLURALforma <> nosingular 
  A1:    @
A0:    @
&


$RL 17 
{ plural without morphological change }

%sincambioNOUNpl

m1:   SUBNOUN { SUBNOUNrec1 }
m:    NOUN { NOUNrec1 }[ head/SUBNOUN { SUBNOUNrec1 }]


decomp: 

C0:    NOUNrec1.numero = plural
  C1:    NOUNrec1.PLURALforma = sincambio
  A1:     @
  C1:    NOUNrec1.PLURALforma = nosingular
  A1:     @
A0:     @
&


$RL 23 
{ plural with morphological change (-s or -es), i.e. with SFK }

%cambioNOUNpl

m1:   SUBNOUN { SUBNOUNrec1 }
m2:   SFCAT { SFCATrec1 }

m:    NOUN { NOUNrec1 }[ head/SUBNOUN { SUBNOUNrec1 }]


decomp: 

C0:    NOUNrec1.numero = plural
  C1:    NOUNrec1.PLURALforma = regular
  A1:    SFCATrec1.key := SFKregPL
  C1:    NOUNrec1.PLURALforma = irregular
  A1:    SFCATrec1.key := SFKirrPL
  C1:    NOUNrec1.PLURALforma = extran
  A1:    SFCATrec1.key := SFKextranPL
A0:     @ 
&

{----------------------}

$RL 17
{ one rule to go from SUBNOUN to BNOUN in generation }
{ this step involves `derivation`.                   }


%SUBBASICnoun

m1:   BNOUN { BNOUNrec1 }
m:    SUBNOUN { SUBNOUNrec1 }[ head/BNOUN { BNOUNrec1 }]


decomp: 

C0:    true
A0:    @
&

{---------------------------- end NOUNs }

$NP
{ lextreerules for `ADJs` }


{ rules to go from ADJ to SUBADJ }

{ singular }

{ without apo¨'cope }
{ feliz, joven, comunista, etc. }
{ these ADJs never change in singular } 

%ADJsgNOCAMBIO

m1:   SUBADJ { SUBADJrec1 }
m:    ADJ { ADJrec1 }[ head/SUBADJ { SUBADJrec1 }]


decomp: 

C0:   ADJrec1.numero = singular
  C1:   ADJrec1.apocope = false
    C2:  ADJrec1.genero = masc 
    A2:   @
    C2:  ADJrec1.genero = fem
      C3:  ADJrec1.FEMforma = nocambio
      A3:   @
    A2:   @
  A1:   @
A0:   @                         
&


$RL 20 
{ ADJs with morph.change for fem.: guapo-guapa / holgaza¨'n-holgazana } 
{ no change of category }

%ADJsgCAMBIOfem

m1:   SUBADJ { SUBADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    ADJ { ADJrec1 }[ head/SUBADJ { SUBADJrec1 }]


decomp: 

C0:   ADJrec1.numero = singular
  C1:   ADJrec1.apocope = false
    C2:  ADJrec1.FEMforma = normal
    A2:  SFCATrec1.key := SFKregFEM
  A1:    @
A0:    @                         
&


$RL 16 
{ ADJs with "apo¨'cope"-forms }
{ In syntax it has to be decided in which cases an ADJ is shortened }

%ApocopeADJ

m1:   SUBADJ { SUBADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    ADJ { ADJrec1 }[ head/SUBADJ { SUBADJrec1 }]


decomp: 

C0:   ADJrec1.apocope = true
A0:   SFCATrec1.key := SFKapocope
&


{---------------------------}


$RL 31 
{ pluralformation; these rules change category: ADJ --> SUBADJ in generation }

{ for apo¨'cope forms see%ApocopeADJ; for plural only ciento --> cien }

{ forms without apo¨'cope }

%ADJpl

m1:   SUBADJ { SUBADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    ADJ { ADJrec1 }[ head/SUBADJ { SUBADJrec1 }]


decomp: 

C0:    ADJrec1.numero = plural
  C1:    ADJrec1.apocope = false
    C2:    ADJrec1.PLURALforma = reg
    A2:    SFCATrec1.key := SFKregPL
    C2:    ADJrec1.PLURALforma = irreg
    A2:    SFCATrec1.key := SFKirrPL
  A1:     @
A0:     @ 
&


{ It is not clear to me yet if there are cases of irregular plural with ADJs }


{----------------------------}


$RL 13
{ irregular comparative; SFKirrCompar }

m1:  SUBADJ { SUBADJrec1 }
m2:  SFCAT { SFCATrec1 }

m:   ADJ { ADJrec1 }[ head/SUBADJ { SUBADJrec1 }] 


C0:    ADJrec1.irrComp = si
A0:    SFCATrec1.key := SFKirrCompar
&

{---------------------}

$RL 18
{ one rule is needed to go from SUBADJ to BADJ in generation, in case
  no derivation rules apply.                                          }


%SUBBASICadj

m1: BADJ { BADJrec1 }
m:  SUBADJ { SUBADJrec1 }[ head/BADJ { BADJrec1 }]


decomp:

C0:  true
A0:   @
&


{---------------------------- end ADJs }


$NP
{ lextreerules for `ADVs` }

{ The ADVs on -`mente`, derived from ADJs, are `derivation` in Rosetta, so 
  the rules are not included in this document for inflection.                }

{ In Spanish the following three possibilities arise:

  1) e.g. - Los nin¨~os duermen `tranquilos`.

     In this case "tranquilos" behaves as a true ADJ, agreeing in 
     number and gender with the subject. I assume this type of
     adverbial (?) function of the ADJ will be handled in the syntax.
 
  2) ADVs derived from an ADJ by adding the suffix -`mente` to the 
     feminine form of the ADJ.
     
        e.g. - Hablo¨' clar`amente`.

     If we consider this type of ADV `derivation` in Rosetta,
     with -mente being a BSUFFIX, an ordering problem can arise:
     in generation this derivation rule will have to preceede inflection,
     namely the feminine forming of the ADJ. However, the normal order is
     (1) inflection - (2) derivation in generation.
     
     The following solutions are possible, in principle:
   (i) The -`mente` form is considered an `inflected` form of the ADJ, not
       changing the category. The ADJ has the attribute "ADVmente" with
       values (true,false). e.g.:
                claramente:  ADJ with "ADVmente = true".

      Furthermore ADJs have an attribute "menteFORMA" (posible,imposible)
      to indicate if the ADJ can take the suffix -mente or not.            

  (ii) Another solution is to consider the -`mente` form `derivation`, but 
       make one rule for the feminine-forming and the addition of -mente.
       This implies that the rule change the category from ADJ to ADV.
       This has as consequence a `doubling` of the rules for feminine-forming.
       We chose for this solution in Rosetta.
       ( see the lextree-rules for `derivation`. )                           }

{-----------------------------}

{ "true" ADVs, i.e. ADVs not derived from an ADJ by adding -mente but included
  as such in the lexicon, never change form. Two rules are needed, one to go 
  from ADV to SUBADV, and one to go from SUBADV to BADV.

  NB. Unless we decide to skip the SUBADV-level since derivation never
      applies to ADVs.                                                       }


$RL 8
%ADVSUBadv

m1:  SUBADV { SUBADVrec1 }
m:   ADV { ADVrec1 } [ head/SUBADV { SUBADVrec1 }]


decomp:

C0:   true
A0:    @
&



$RL 11
%SUBBASICadv

m1:  BADV { BADVrec1 }
m:   SUBADV { SUBADVrec1 } [ head/BADV { BADVrec1 }]


decomp:

C0:   true
A0:    @
&


{---------------------------- end ADV }


$NP
{ lextreerules for personal pronouns }

{ direct object clitics }

%DOclitics

m1:   BPERSPRO { BPERSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    PERSPRO { PERSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }]


decomp: 

C0:    PERSPROrec1.forma = acusCL
  C1:    PERSPROrec1.cortesia = no
  A1:    SFCATrec1.key := SFKcliticOD
  C1:    PERSPROrec1.cortesia = si
    C2:    PERSPROrec1.genero = masc
    A2:    SFCATrec1.key := SFKcliticODm
    C2:    PERSPROrec1.genero = fem
    A2:    SFCATrec1.key := SFKcliticODf
  A1:     @ 
A0:     @
C0:    PERSPROrec1.forma = acusLEcl
A0:    SFCATrec1.key := SFKcliticOD1
&


$RL 15
{ indirect object clitics }

%IOclitics

m1:   BPERSPRO { BPERSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    PERSPRO { PERSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }]


decomp: 

C0:    PERSPROrec1.forma = datCL
A0:    SFCATrec1.key := SFKcliticOI
&


$RL 15
{ strong pronouns after a preposition }

%PrepPronFuerte

m1:   BPERSPRO { BPERSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    PERSPRO { PERSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }]


decomp: 

C0:    PERSPROrec1.forma = PrepFuerte
A0:    SFCATrec1.key := SFKpronFuerte
&


$RL 4
{ reflexive clitics and pronouns are introduced syncategorematically in  }
{ the M-grammar, so they are all included in the lexicon.                }   

{---------------------------}

$RL 17
{ poss.adjectives. Two rules: sing/plur. }

%posADJsg

m1:   BPERSPRO { BPERSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    POSSADJ { POSSADJrec1 }[ head/BPERSPRO { BPERSPROrec1 }] 


decomp: 

C0:   POSSADJrec1.concordnumero = sing
A0:   SFCATrec1.key := SFKposADJ
&

{-------------------------}

$RL 15
%posADJpl

m1:   POSSADJ { POSSADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    POSSADJ { POSSADJrec1 }[ head/BPERSPRO { BPERSPROrec1 }] 


decomp: 

C0:   POSSADJrec1.concordnumero = plur
A0:   SFCATrec1.key := SFKregPL
&

{---------------------------}

$RL 16
{ strong poss.pronouns. Three rules: sing/singFEM/plur. }

%posPROsg

m1:   BPERSPRO { BPERSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    POSSPRO { POSSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }] 


decomp: 

C0:    POSSPROrec1.concordgenero = mascul
  C1:    POSSPROrec1.concordnumero = sing
  A1:    SFCATrec1.key := SFKposAdjFuerte
A0:     @
&


$RL 15
%posPROsgFEM

m1:   BPOSSPRO { BPOSSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    POSSPRO { POSSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }] 


decomp: 

C0:    POSSPROrec1.concordgenero = femin
  C1:    POSSPROrec1.concordnumero = sing
  A1:    SFCATrec1.key := SFKregFem
A0:     @
&


$RL 15
%posPROplur

m1:   BPOSSPRO { BPOSSPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    POSSPRO { POSSPROrec1 }[ head/BPERSPRO { BPERSPROrec1 }] 


decomp: 

C0:    POSSPROrec1.concordnumero = plur
A0:    SFCATrec1.key := SFKregPL
&

{---------------------------}

$RL 27
{ demonstrative adjectives }

%DemAdj

m1:   BDEMADJ { BDEMADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    DEMADJ { DEMADJrec1 }[ head/BDEMADJ { BDEMADJrec1 }] 


decomp: 

C0:    DEMADJrec1.genero = masc
  C1:    DEMADJrec1.numero = singular
  A1:     @
  C1:    DEMADJrec1.numero = plural
  A1:    SFCATrec1.key := SFKmascDEMADJpl
A0:     @
C0:    DEMADJrec1.genero = fem
  C1:    DEMADJrec1.numero = singular
  A1:    SFCATrec1.key := SFKfemDEMADJsg
  C1:    DEMADJrec1.numero = plural
  A1:    SFCATrec1.key := SFKfemDEMADJpl
A0:     @
&

{------------------------------}

$RL 29
{ demonstrative pronouns }

%DemPro

m1:   BDEMPRO { BDEMPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    DEMPRO { DEMPROrec1 }[ head/BDEMPRO { BDEMPROrec1 }] 


decomp: 

C0:    DEMPROrec1.genero = masc
  C1:    DEMPROrec1.numero = singular
  A1:     @
  C1:    DEMPROrec1.numero = plural
  A1:    SFCATrec1.key := SFKmascDEMPROpl
A0:     @
C0:    DEMPROrec1.genero = fem
  C1:    DEMPROrec1.numero = singular
  A1:    SFCATrec1.key := SFKfemDEMPROsg
  C1:    DEMPROrec1.numero = plural
  A1:    SFCATrec1.key := SFKfemDEMPROpl
A0:     @
C0:    DEMPROrec1.genero = neutro
A0:    SFCATrec1.key := SFKneutDEMPRO
&

{-----------------------}

$RL 25
{ Interrogative adjectives } 

%WhADJ

m1:   BWHADJ { BWHADJrec1 }
m2:   SFCAT { SFCATrec1 }

m:    WHADJ { WHADJrec1 }[ head/BWHADJ { BWHADJrec1 }] 


decomp: 

C0:   WHADJrec1.numero = singular
  C1:   WHADJrec1.genero = masc
  A1:    @
  C1:   WHADJrec1.genero = fem
    C2:   WHADJrec1.feminforma = no
    A2:    @
    C2:   WHADJrec1.feminforma = si
    A2:   SFCATrec1.key := SFKregFEM
  A1:    @
A0:     @
&

{-----------------------}

$RL 28 
{ Interrogative pronouns } 

%WhPRO

m1:   BWHPRO { BWHPROrec1 }
m2:   SFCAT { SFCATrec1 }

m:    WHPRO { WHPROrec1 }[ head/BWHPRO { BWHPROrec1 }] 


decomp: 

C0:   WHPROrec1.numero = singular
  C1:   WHPROrec1.genero = masc
  A1:    @
  C1:   WHPROrec1.genero = fem
    C2:   WHPROrec1.feminforma = no
    A2:    @
    C2:   WHPROrec1.feminforma = si
    A2:   SFCATrec1.key := SFKregFEM
  A1:    @
A0:     @
&


{ Relative pronouns are all included in the lexicon }

{-------------------------------------------}


