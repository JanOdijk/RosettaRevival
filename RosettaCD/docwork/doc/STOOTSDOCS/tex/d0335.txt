R0335.tex



\documentstyle{Rosetta}
\setlength{\parindent}{0 in}
\begin{document}
   \RosTopic{Rosetta3.Doc.Linguistics.Dutch}
   \RosTitle{The Dutch CLAUSEtoSENTENCE Subgrammar}
   \RosAuthor{Jan Odijk, Lisette Appelo, Andr\'{e} Schenk}
   \RosDocNr{R0335}
   \RosDate{\today}
   \RosStatus{concept}
   \RosSupersedes{-}
   \RosDistribution{Project}
   \RosClearance{Project}
   \RosKeywords{Mrules, Subgrammars, Syntax, CLAUSEtoSENTENCE}
   \MakeRosTitle


\input{[odijkje.mrules]mrudocdef}
\include{doc:R0335_A}
\include{doc:R0335_B}
\end{document}
ROSETTA.sty
\typeout{Document Style 'Rosetta'. Version 0.4 - released  24-DEC-1987}
% 24-DEC-1987:  Date of copyright notice changed
\def\@ptsize{1}
\@namedef{ds@10pt}{\def\@ptsize{0}}
\@namedef{ds@12pt}{\def\@ptsize{2}} 
\@twosidetrue
\@mparswitchtrue
\def\ds@draft{\overfullrule 5pt} 
\@options
\input art1\@ptsize.sty\relax


\def\labelenumi{\arabic{enumi}.} 
\def\theenumi{\arabic{enumi}} 
\def\labelenumii{(\alph{enumii})}
\def\theenumii{\alph{enumii}}
\def\p@enumii{\theenumi}
\def\labelenumiii{\roman{enumiii}.}
\def\theenumiii{\roman{enumiii}}
\def\p@enumiii{\theenumi(\theenumii)}
\def\labelenumiv{\Alph{enumiv}.}
\def\theenumiv{\Alph{enumiv}} 
\def\p@enumiv{\p@enumiii\theenumiii}
\def\labelitemi{$\bullet$}
\def\labelitemii{\bf --}
\def\labelitemiii{$\ast$}
\def\labelitemiv{$\cdot$}
\def\verse{
   \let\\=\@centercr 
   \list{}{\itemsep\z@ \itemindent -1.5em\listparindent \itemindent 
      \rightmargin\leftmargin\advance\leftmargin 1.5em}
   \item[]}
\let\endverse\endlist
\def\quotation{
   \list{}{\listparindent 1.5em
      \itemindent\listparindent
      \rightmargin\leftmargin \parsep 0pt plus 1pt}\item[]}
\let\endquotation=\endlist
\def\quote{
   \list{}{\rightmargin\leftmargin}\item[]}
\let\endquote=\endlist
\def\descriptionlabel#1{\hspace\labelsep \bf #1}
\def\description{
   \list{}{\labelwidth\z@ \itemindent-\leftmargin
      \let\makelabel\descriptionlabel}}
\let\enddescription\endlist


\def\@begintheorem#1#2{\it \trivlist \item[\hskip \labelsep{\bf #1\ #2}]}
\def\@endtheorem{\endtrivlist}
\def\theequation{\arabic{equation}}
\def\titlepage{
   \@restonecolfalse
   \if@twocolumn\@restonecoltrue\onecolumn
   \else \newpage
   \fi
   \thispagestyle{empty}\c@page\z@}
\def\endtitlepage{\if@restonecol\twocolumn \else \newpage \fi}
\arraycolsep 5pt \tabcolsep 6pt \arrayrulewidth .4pt \doublerulesep 2pt 
\tabbingsep \labelsep 
\skip\@mpfootins = \skip\footins
\fboxsep = 3pt \fboxrule = .4pt 


\newcounter{part}
\newcounter {section}
\newcounter {subsection}[section]
\newcounter {subsubsection}[subsection]
\newcounter {paragraph}[subsubsection]
\newcounter {subparagraph}[paragraph]
\def\thepart{\Roman{part}} \def\thesection {\arabic{section}}
\def\thesubsection {\thesection.\arabic{subsection}}
\def\thesubsubsection {\thesubsection .\arabic{subsubsection}}
\def\theparagraph {\thesubsubsection.\arabic{paragraph}}
\def\thesubparagraph {\theparagraph.\arabic{subparagraph}}


\def\@pnumwidth{1.55em}
\def\@tocrmarg {2.55em}
\def\@dotsep{4.5}
\setcounter{tocdepth}{3}
\def\tableofcontents{\section*{Contents\markboth{}{}}
\@starttoc{toc}}
\def\l@part#1#2{
   \addpenalty{-\@highpenalty}
   \addvspace{2.25em plus 1pt}
   \begingroup
      \@tempdima 3em \parindent \z@ \rightskip \@pnumwidth \parfillskip
      -\@pnumwidth {\large \bf \leavevmode #1\hfil \hbox to\@pnumwidth{\hss #2}}
      \par \nobreak
   \endgroup}
\def\l@section#1#2{
   \addpenalty{-\@highpenalty}
   \addvspace{1.0em plus 1pt}
   \@tempdima 1.5em
   \begingroup
      \parindent \z@ \rightskip \@pnumwidth 
      \parfillskip -\@pnumwidth 
      \bf \leavevmode #1\hfil \hbox to\@pnumwidth{\hss #2}
      \par
   \endgroup}
\def\l@subsection{\@dottedtocline{2}{1.5em}{2.3em}}
\def\l@subsubsection{\@dottedtocline{3}{3.8em}{3.2em}}
\def\l@paragraph{\@dottedtocline{4}{7.0em}{4.1em}}
\def\l@subparagraph{\@dottedtocline{5}{10em}{5em}}
\def\listoffigures{
   \section*{List of Figures\markboth{}{}}
   \@starttoc{lof}}
   \def\l@figure{\@dottedtocline{1}{1.5em}{2.3em}}
   \def\listoftables{\section*{List of Tables\markboth{}{}}
   \@starttoc{lot}}
\let\l@table\l@figure


\def\thebibliography#1{
   \addcontentsline{toc}
   {section}{References}\section*{References\markboth{}{}}
   \list{[\arabic{enumi}]}
        {\settowidth\labelwidth{[#1]}\leftmargin\labelwidth
         \advance\leftmargin\labelsep\usecounter{enumi}}}
\let\endthebibliography=\endlist


\newif\if@restonecol
\def\theindex{
   \@restonecoltrue\if@twocolumn\@restonecolfalse\fi
   \columnseprule \z@
   \columnsep 35pt\twocolumn[\section*{Index}]
   \markboth{}{}
   \thispagestyle{plain}\parindent\z@
   \parskip\z@ plus .3pt\relax
   \let\item\@idxitem}
\def\@idxitem{\par\hangindent 40pt}
\def\subitem{\par\hangindent 40pt \hspace*{20pt}}
\def\subsubitem{\par\hangindent 40pt \hspace*{30pt}}
\def\endtheindex{\if@restonecol\onecolumn\else\clearpage\fi}
\def\indexspace{\par \vskip 10pt plus 5pt minus 3pt\relax}


\def\footnoterule{
   \kern-1\p@ 
   \hrule width .4\columnwidth 
   \kern .6\p@} 
\long\def\@makefntext#1{
   \@setpar{\@@par\@tempdima \hsize 
   \advance\@tempdima-10pt\parshape \@ne 10pt \@tempdima}\par
   \parindent 1em\noindent \hbox to \z@{\hss$^{\@thefnmark}$}#1}


\setcounter{topnumber}{2}
\def\topfraction{.7}
\setcounter{bottomnumber}{1}
\def\bottomfraction{.3}
\setcounter{totalnumber}{3}
\def\textfraction{.2}
\def\floatpagefraction{.5}
\setcounter{dbltopnumber}{2}
\def\dbltopfraction{.7}
\def\dblfloatpagefraction{.5}
\long\def\@makecaption#1#2{
   \vskip 10pt 
   \setbox\@tempboxa\hbox{#1: #2}
   \ifdim \wd\@tempboxa >\hsize \unhbox\@tempboxa\par
   \else \hbox to\hsize{\hfil\box\@tempboxa\hfil} 
   \fi}
\newcounter{figure}
\def\thefigure{\@arabic\c@figure}
\def\fps@figure{tbp}
\def\ftype@figure{1}
\def\ext@figure{lof}
\def\fnum@figure{Figure \thefigure}
\def\figure{\@float{figure}}
\let\endfigure\end@float
\@namedef{figure*}{\@dblfloat{figure}}
\@namedef{endfigure*}{\end@dblfloat}
\newcounter{table}
\def\thetable{\@arabic\c@table}
\def\fps@table{tbp}
\def\ftype@table{2}
\def\ext@table{lot}
\def\fnum@table{Table \thetable}
\def\table{\@float{table}}
\let\endtable\end@float
\@namedef{table*}{\@dblfloat{table}}
\@namedef{endtable*}{\end@dblfloat}


\def\maketitle{
   \par
   \begingroup
      \def\thefootnote{\fnsymbol{footnote}}
      \def\@makefnmark{\hbox to 0pt{$^{\@thefnmark}$\hss}} 
      \if@twocolumn \twocolumn[\@maketitle] 
      \else \newpage \global\@topnum\z@ \@maketitle
      \fi
      \thispagestyle{plain}
      \@thanks
   \endgroup
   \setcounter{footnote}{0}
   \let\maketitle\relax
   \let\@maketitle\relax
   \gdef\@thanks{}
   \gdef\@author{}
   \gdef\@title{}
   \let\thanks\relax}
\def\@maketitle{
   \newpage
   \null
   \vskip 2em
   \begin{center}{\LARGE \@title \par}
      \vskip 1.5em
      {\large \lineskip .5em \begin{tabular}[t]{c}\@author \end{tabular}\par} 
      \vskip 1em {\large \@date}
   \end{center}
   \par
   \vskip 1.5em} 
\def\abstract{
   \if@twocolumn \section*{Abstract}
   \else
      \small 
      \begin{center} {\bf Abstract\vspace{-.5em}\vspace{0pt}} \end{center}
      \quotation 
   \fi}
\def\endabstract{\if@twocolumn\else\endquotation\fi}


\mark{{}{}} 
\if@twoside
   \def\ps@headings{
      \def\@oddfoot{Rosetta Doc. \@RosDocNr\hfil \@RosDate}
      \def\@evenfoot{Rosetta Doc. \@RosDocNr\hfil \@RosDate}
      \def\@evenhead{\rm\thepage\hfil \sl \rightmark}
      \def\@oddhead{\hbox{}\sl \leftmark \hfil\rm\thepage}
      \def\sectionmark##1{\markboth {}{}}
      \def\subsectionmark##1{}}
\else
   \def\ps@headings{
      \def\@oddfoot{Rosetta Doc. \@RosDocNr\hfil \@RosDate}
      \def\@evenfoot{Rosetta Doc. \@RosDocNr\hfil \@RosDate}
      \def\@oddhead{\hbox{}\sl \rightmark \hfil \rm\thepage}
      \def\sectionmark##1{\markboth {}{}}
      \def\subsectionmark##1{}}
\fi
\def\ps@myheadings{
   \def\@oddhead{\hbox{}\sl\@rhead \hfil \rm\thepage}
   \def\@oddfoot{}
   \def\@evenhead{\rm \thepage\hfil\sl\@lhead\hbox{}}
   \def\@evenfoot{}
   \def\sectionmark##1{}
   \def\subsectionmark##1{}}


\def\today{
   \ifcase\month\or January\or February\or March\or April\or May\or June\or
      July\or August\or September\or October\or November\or December
   \fi
   \space\number\day, \number\year}


\ps@plain \pagenumbering{arabic} \onecolumn \if@twoside\else\raggedbottom\fi 




% the Rosetta title page
\newcommand{\MakeRosTitle}{
   \begin{titlepage}
      \begin{large}
	 \begin{figure}[t]
	    \begin{picture}(405,100)(0,0)
	       \put(0,100){\line(1,0){404}}
	       \put(0,75){Project {\bf Rosetta}}
	       \put(93.5,75){:}
	       \put(108,75){Machine Translation}
	       \put(0,50){Topic}
	       \put(93.5,50){:}
	       \put(108,50){\@RosTopic}
	       \put(0,30){\line(1,0){404}}
	    \end{picture}
	 \end{figure}
	 \bigskip
	 \bigskip
	 \begin{list}{-}{\setlength{\leftmargin}{3.0cm}
			 \setlength{\labelwidth}{2.7cm}
			 \setlength{\topsep}{2cm}}
	    \item [{\rm Title \hfill :}] {{\bf \@RosTitle}}
	    \item [{\rm Author \hfill :}] {\@RosAuthor}
	    \bigskip
	    \bigskip
	    \bigskip
	    \item [{\rm Doc.Nr. \hfill :}] {\@RosDocNr}
	    \item [{\rm Date \hfill :}] {\@RosDate}
	    \item [{\rm Status \hfill :}] {\@RosStatus}
	    \item [{\rm Supersedes \hfill :}] {\@RosSupersedes}
	    \item [{\rm Distribution \hfill :}] {\@RosDistribution}
	    \item [{\rm Clearance \hfill :}] {\@RosClearance}
	    \item [{\rm Keywords \hfill :}] {\@RosKeywords}
	 \end{list}
      \end{large}
      \title{\@RosTitle}
      \begin{figure}[b]
	 \begin{picture}(404,64)(0,0)
	    \put(0,64){\line(1,0){404}}
	    \put(0,-4){\line(1,0){404}}
	    \put(0,59){\line(1,0){42}}
	    \begin{small}
	    \put(3,48){\sf PHILIPS}
	    \end{small}
	    \put(0,23){\line(0,1){36}}
	    \put(42,23){\line(0,1){36}}
	    \put(21,23){\oval(42,42)[bl]}
	    \put(21,23){\oval(42,42)[br]}
	    \put(21,23){\circle{40}}
	    \put(4,33){\line(1,0){10}}
	    \put(9,28){\line(0,1){10}}
	    \put(9,36){\line(1,0){6}}
	    \put(12,33){\line(0,1){6}}
	    \put(29,13){\line(1,0){10}}
	    \put(34,8){\line(0,1){10}}
	    \put(28,10){\line(1,0){6}}
	    \put(31,7){\line(0,1){6}}

	    \put(1,21){\line(1,0){0.5}}
	    \put(1.5,21.3){\line(1,0){0.5}}
	    \put(2,21.6){\line(1,0){0.5}}
	    \put(2.5,21.9){\line(1,0){0.5}}
	    \put(3,22.1){\line(1,0){0.5}}
	    \put(3.5,22.3){\line(1,0){0.5}}
	    \put(4,22.5){\line(1,0){0.5}}
	    \put(4.5,22.7){\line(1,0){0.5}}
	    \put(5,22.8){\line(1,0){0.5}}
	    \put(5.5,22.9){\line(1,0){0.5}}
	    \put(6,23){\line(1,0){0.5}}
	    \put(6.5,22.9){\line(1,0){0.5}}
	    \put(7,22.8){\line(1,0){0.5}}
	    \put(7.5,22.7){\line(1,0){0.5}}
	    \put(8,22.5){\line(1,0){0.5}}
	    \put(8.5,22.3){\line(1,0){0.5}}
	    \put(9,22.1){\line(1,0){0.5}}
	    \put(9.5,21.9){\line(1,0){0.5}}
	    \put(10,21.6){\line(1,0){0.5}}
	    \put(10.5,21.3){\line(1,0){0.5}}

	    \put(1,23){\line(1,0){0.5}}
	    \put(1.5,23.3){\line(1,0){0.5}}
	    \put(2,23.6){\line(1,0){0.5}}
	    \put(2.5,23.9){\line(1,0){0.5}}
	    \put(3,24.1){\line(1,0){0.5}}
	    \put(3.5,24.3){\line(1,0){0.5}}
	    \put(4,24.5){\line(1,0){0.5}}
	    \put(4.5,24.7){\line(1,0){0.5}}
	    \put(5,24.8){\line(1,0){0.5}}
	    \put(5.5,24.9){\line(1,0){0.5}}
	    \put(6,25){\line(1,0){0.5}}
	    \put(6.5,24.9){\line(1,0){0.5}}
	    \put(7,24.8){\line(1,0){0.5}}
	    \put(7.5,24.7){\line(1,0){0.5}}
	    \put(8,24.5){\line(1,0){0.5}}
	    \put(8.5,24.3){\line(1,0){0.5}}
	    \put(9,24.1){\line(1,0){0.5}}
	    \put(9.5,23.9){\line(1,0){0.5}}
	    \put(10,23.6){\line(1,0){0.5}}
	    \put(10.5,23.3){\line(1,0){0.5}}

	    \put(1,25){\line(1,0){0.5}}
	    \put(1.5,25.3){\line(1,0){0.5}}
	    \put(2,25.6){\line(1,0){0.5}}
	    \put(2.5,25.9){\line(1,0){0.5}}
	    \put(3,26.1){\line(1,0){0.5}}
	    \put(3.5,26.3){\line(1,0){0.5}}
	    \put(4,26.5){\line(1,0){0.5}}
	    \put(4.5,26.7){\line(1,0){0.5}}
	    \put(5,26.8){\line(1,0){0.5}}
	    \put(5.5,26.9){\line(1,0){0.5}}
	    \put(6,27){\line(1,0){0.5}}
	    \put(6.5,26.9){\line(1,0){0.5}}
	    \put(7,26.8){\line(1,0){0.5}}
	    \put(7.5,26.7){\line(1,0){0.5}}
	    \put(8,26.5){\line(1,0){0.5}}
	    \put(8.5,26.3){\line(1,0){0.5}}
	    \put(9,26.1){\line(1,0){0.5}}
	    \put(9.5,25.9){\line(1,0){0.5}}
	    \put(10,25.6){\line(1,0){0.5}}
	    \put(10.5,25.3){\line(1,0){0.5}}

	    \put(11,21){\line(1,0){0.5}}
	    \put(11.5,20.7){\line(1,0){0.5}}
	    \put(12,20.4){\line(1,0){0.5}}
	    \put(12.5,20.1){\line(1,0){0.5}}
	    \put(13,19.9){\line(1,0){0.5}}
	    \put(13.5,19.7){\line(1,0){0.5}}
	    \put(14,19.5){\line(1,0){0.5}}
	    \put(14.5,19.3){\line(1,0){0.5}}
	    \put(15,19.2){\line(1,0){0.5}}
	    \put(15.5,19.1){\line(1,0){0.5}}
	    \put(16,19){\line(1,0){0.5}}
	    \put(16.5,19.1){\line(1,0){0.5}}
	    \put(17,19.2){\line(1,0){0.5}}
	    \put(17.5,19.3){\line(1,0){0.5}}
	    \put(18,19.5){\line(1,0){0.5}}
	    \put(18.5,19.7){\line(1,0){0.5}}
	    \put(19,19.9){\line(1,0){0.5}}
	    \put(19.5,20.1){\line(1,0){0.5}}
	    \put(20,20.4){\line(1,0){0.5}}
	    \put(20.5,20.7){\line(1,0){0.5}}

	    \put(11,23){\line(1,0){0.5}}
	    \put(11.5,22.7){\line(1,0){0.5}}
	    \put(12,22.4){\line(1,0){0.5}}
	    \put(12.5,22.1){\line(1,0){0.5}}
	    \put(13,21.9){\line(1,0){0.5}}
	    \put(13.5,21.7){\line(1,0){0.5}}
	    \put(14,21.5){\line(1,0){0.5}}
	    \put(14.5,21.3){\line(1,0){0.5}}
	    \put(15,21.2){\line(1,0){0.5}}
	    \put(15.5,21.1){\line(1,0){0.5}}
	    \put(16,21){\line(1,0){0.5}}
	    \put(16.5,21.1){\line(1,0){0.5}}
	    \put(17,21.2){\line(1,0){0.5}}
	    \put(17.5,21.3){\line(1,0){0.5}}
	    \put(18,21.5){\line(1,0){0.5}}
	    \put(18.5,21.7){\line(1,0){0.5}}
	    \put(19,21.9){\line(1,0){0.5}}
	    \put(19.5,22.1){\line(1,0){0.5}}
	    \put(20,22.4){\line(1,0){0.5}}
	    \put(20.5,22.7){\line(1,0){0.5}}

	    \put(11,25){\line(1,0){0.5}}
	    \put(11.5,24.7){\line(1,0){0.5}}
	    \put(12,24.4){\line(1,0){0.5}}
	    \put(12.5,24.1){\line(1,0){0.5}}
	    \put(13,23.9){\line(1,0){0.5}}
	    \put(13.5,23.7){\line(1,0){0.5}}
	    \put(14,23.5){\line(1,0){0.5}}
	    \put(14.5,23.3){\line(1,0){0.5}}
	    \put(15,23.2){\line(1,0){0.5}}
	    \put(15.5,23.1){\line(1,0){0.5}}
	    \put(16,23){\line(1,0){0.5}}
	    \put(16.5,23.1){\line(1,0){0.5}}
	    \put(17,23.2){\line(1,0){0.5}}
	    \put(17.5,23.3){\line(1,0){0.5}}
	    \put(18,23.5){\line(1,0){0.5}}
	    \put(18.5,23.7){\line(1,0){0.5}}
	    \put(19,23.9){\line(1,0){0.5}}
	    \put(19.5,24.1){\line(1,0){0.5}}
	    \put(20,24.4){\line(1,0){0.5}}
	    \put(20.5,24.7){\line(1,0){0.5}}

	    \put(21,21){\line(1,0){0.5}}
	    \put(21.5,21.3){\line(1,0){0.5}}
	    \put(22,21.6){\line(1,0){0.5}}
	    \put(22.5,21.9){\line(1,0){0.5}}
	    \put(23,22.1){\line(1,0){0.5}}
	    \put(23.5,22.3){\line(1,0){0.5}}
	    \put(24,22.5){\line(1,0){0.5}}
	    \put(24.5,22.7){\line(1,0){0.5}}
	    \put(25,22.8){\line(1,0){0.5}}
	    \put(25.5,23.9){\line(1,0){0.5}}
	    \put(26,23){\line(1,0){0.5}}
	    \put(26.5,22.9){\line(1,0){0.5}}
	    \put(27,22.8){\line(1,0){0.5}}
	    \put(27.5,22.7){\line(1,0){0.5}}
	    \put(28,22.5){\line(1,0){0.5}}
	    \put(28.5,22.3){\line(1,0){0.5}}
	    \put(29,22.1){\line(1,0){0.5}}
	    \put(29.5,21.9){\line(1,0){0.5}}
	    \put(30,21.6){\line(1,0){0.5}}
	    \put(30.5,21.3){\line(1,0){0.5}}

	    \put(21,23){\line(1,0){0.5}}
	    \put(21.5,23.3){\line(1,0){0.5}}
	    \put(22,23.6){\line(1,0){0.5}}
	    \put(22.5,23.9){\line(1,0){0.5}}
	    \put(23,24.1){\line(1,0){0.5}}
	    \put(23.5,24.3){\line(1,0){0.5}}
	    \put(24,24.5){\line(1,0){0.5}}
	    \put(24.5,24.7){\line(1,0){0.5}}
	    \put(25,24.8){\line(1,0){0.5}}
	    \put(25.5,24.9){\line(1,0){0.5}}
	    \put(26,25){\line(1,0){0.5}}
	    \put(26.5,24.9){\line(1,0){0.5}}
	    \put(27,24.8){\line(1,0){0.5}}
	    \put(27.5,24.7){\line(1,0){0.5}}
	    \put(28,24.5){\line(1,0){0.5}}
	    \put(28.5,24.3){\line(1,0){0.5}}
	    \put(29,24.1){\line(1,0){0.5}}
	    \put(29.5,23.9){\line(1,0){0.5}}
	    \put(30,23.6){\line(1,0){0.5}}
	    \put(30.5,23.3){\line(1,0){0.5}}

	    \put(21,25){\line(1,0){0.5}}
	    \put(21.5,25.3){\line(1,0){0.5}}
	    \put(22,25.6){\line(1,0){0.5}}
	    \put(22.5,25.9){\line(1,0){0.5}}
	    \put(23,26.1){\line(1,0){0.5}}
	    \put(23.5,26.3){\line(1,0){0.5}}
	    \put(24,26.5){\line(1,0){0.5}}
	    \put(24.5,26.7){\line(1,0){0.5}}
	    \put(25,26.8){\line(1,0){0.5}}
	    \put(25.5,26.9){\line(1,0){0.5}}
	    \put(26,27){\line(1,0){0.5}}
	    \put(26.5,26.9){\line(1,0){0.5}}
	    \put(27,26.8){\line(1,0){0.5}}
	    \put(27.5,26.7){\line(1,0){0.5}}
	    \put(28,26.5){\line(1,0){0.5}}
	    \put(28.5,26.3){\line(1,0){0.5}}
	    \put(29,26.1){\line(1,0){0.5}}
	    \put(29.5,25.9){\line(1,0){0.5}}
	    \put(30,25.6){\line(1,0){0.5}}
	    \put(30.5,25.3){\line(1,0){0.5}}

	    \put(31,21){\line(1,0){0.5}}
	    \put(31.5,20.7){\line(1,0){0.5}}
	    \put(32,20.4){\line(1,0){0.5}}
	    \put(32.5,20.1){\line(1,0){0.5}}
	    \put(33,19.9){\line(1,0){0.5}}
	    \put(33.5,19.7){\line(1,0){0.5}}
	    \put(34,19.5){\line(1,0){0.5}}
	    \put(34.5,19.3){\line(1,0){0.5}}
	    \put(35,19.2){\line(1,0){0.5}}
	    \put(35.5,19.1){\line(1,0){0.5}}
	    \put(36,19){\line(1,0){0.5}}
	    \put(36.5,19.1){\line(1,0){0.5}}
	    \put(37,19.2){\line(1,0){0.5}}
	    \put(37.5,19.3){\line(1,0){0.5}}
	    \put(38,19.5){\line(1,0){0.5}}
	    \put(38.5,19.7){\line(1,0){0.5}}
	    \put(39,19.9){\line(1,0){0.5}}
	    \put(39.5,20.1){\line(1,0){0.5}}
	    \put(40,20.4){\line(1,0){0.5}}
	    \put(40.5,20.7){\line(1,0){0.5}}

	    \put(31,23){\line(1,0){0.5}}
	    \put(31.5,22.7){\line(1,0){0.5}}
	    \put(32,22.4){\line(1,0){0.5}}
	    \put(32.5,22.1){\line(1,0){0.5}}
	    \put(33,21.9){\line(1,0){0.5}}
	    \put(33.5,21.7){\line(1,0){0.5}}
	    \put(34,21.5){\line(1,0){0.5}}
	    \put(34.5,21.3){\line(1,0){0.5}}
	    \put(35,21.2){\line(1,0){0.5}}
	    \put(35.5,21.1){\line(1,0){0.5}}
	    \put(36,21){\line(1,0){0.5}}
	    \put(36.5,21.1){\line(1,0){0.5}}
	    \put(37,21.2){\line(1,0){0.5}}
	    \put(37.5,21.3){\line(1,0){0.5}}
	    \put(38,21.5){\line(1,0){0.5}}
	    \put(38.5,21.7){\line(1,0){0.5}}
	    \put(39,21.9){\line(1,0){0.5}}
	    \put(39.5,22.1){\line(1,0){0.5}}
	    \put(40,22.4){\line(1,0){0.5}}
	    \put(40.5,22.7){\line(1,0){0.5}}

	    \put(31,25){\line(1,0){0.5}}
	    \put(31.5,24.7){\line(1,0){0.5}}
	    \put(32,24.4){\line(1,0){0.5}}
	    \put(32.5,24.1){\line(1,0){0.5}}
	    \put(33,23.9){\line(1,0){0.5}}
	    \put(33.5,23.7){\line(1,0){0.5}}
	    \put(34,23.5){\line(1,0){0.5}}
	    \put(34.5,23.3){\line(1,0){0.5}}
	    \put(35,23.2){\line(1,0){0.5}}
	    \put(35.5,23.1){\line(1,0){0.5}}
	    \put(36,23){\line(1,0){0.5}}
	    \put(36.5,23.1){\line(1,0){0.5}}
	    \put(37,23.2){\line(1,0){0.5}}
	    \put(37.5,23.3){\line(1,0){0.5}}
	    \put(38,23.5){\line(1,0){0.5}}
	    \put(38.5,23.7){\line(1,0){0.5}}
	    \put(39,23.9){\line(1,0){0.5}}
	    \put(39.5,24.1){\line(1,0){0.5}}
	    \put(40,24.4){\line(1,0){0.5}}
	    \put(40.5,24.7){\line(1,0){0.5}}
	    \begin{large}
	       \put(60,45){Philips Research Laboratories}
	       \put(60,30){\copyright\ 1988 Nederlandse Philips Bedrijven B.V.}
	    \end{large}
	 \end{picture}
      \end{figure}
      \newpage
      \pagenumbering{roman}
      \tableofcontents
      \newpage
      \pagenumbering{arabic}
   \end{titlepage}
}
\title{}
\topmargin 0pt
\oddsidemargin 36pt
\evensidemargin 36pt
\textheight 600pt
\textwidth 405pt
\pagestyle{headings}
\newcommand{\@RosTopic}{General}
\newcommand{\@RosTitle}{-}
\newcommand{\@RosAuthor}{-}
\newcommand{\@RosDocNr}{}
\newcommand{\@RosDate}{\today}
\newcommand{\@RosStatus}{informal}
\newcommand{\@RosSupersedes}{-}
\newcommand{\@RosDistribution}{Project}
\newcommand{\@RosClearance}{Project}
\newcommand{\@RosKeywords}{}
\newcommand{\RosTopic}[1]{\renewcommand{\@RosTopic}{#1}}
\newcommand{\RosTitle}[1]{\renewcommand{\@RosTitle}{#1}}
\newcommand{\RosAuthor}[1]{\renewcommand{\@RosAuthor}{#1}}
\newcommand{\RosDocNr}[1]{\renewcommand{\@RosDocNr}{#1}}
\newcommand{\RosDate}[1]{\renewcommand{\@RosDate}{#1}}
\newcommand{\RosStatus}[1]{\renewcommand{\@RosStatus}{#1}}
\newcommand{\RosSupersedes}[1]{\renewcommand{\@RosSupersedes}{#1}}
\newcommand{\RosDistribution}[1]{\renewcommand{\@RosDistribution}{#1}}
\newcommand{\RosClearance}[1]{\renewcommand{\@RosClearance}{#1}}
\newcommand{\RosKeywords}[1]{\renewcommand{\@RosKeywords}{#1}}
R0335_A.tex



\section{Introduction}
This document discusses the subgrammar CLAUSEtoSENTENCE for Dutch.
The documentation of certain substitution rules for idioms has been written
by Andr\'{e} Schenk.
The documentation of transformation dealing with tense and aspect has been 
written by Lisette Appelo.
The rest of the documentation has been written by Jan Odijk.

\section{Subgrammar Specification}
\begin{description}
  \item[Head] CLAUSE
  \item[Export] SENTENCE
  \item[Import] NP, PREPP, ADVP, NEG, POS, PROSENT
  \item[File] dutch:clausetosentence.mrule (mrules3.mrule)
\end{description}

\section{Control Expression}


 The control expression can be represented in the following way:


\begin{verbatim}
 [RC_relmarking]
.(TC_argRtoRpos)
.(TC_advrtorpos)
.{Hettoer}!
.{Ertoerpos}!
.(TC_erXins)
.{TC_erq}!
.(TC_whshift)
.[RC_posandnegvar]
.{RC_substitution}
.{TC_negadapt}!
.{TC_toer}!
.(Cliticplacement)
.[TC_subjectshift]
.[TC_gaandeletion]
.(RC_mood)
.[RC_conjsent]
.[TC_refdeletion]!
.[TC_retrodeletion]!
.[TC_deixisretroadaptation]!
.[TC_retroneutralization]!
.(TC_aspectneutralization)
.(TC_V2)
.[TC_modalswitch]
.(TC_erqer)
.(TC_conjdel)
.[TC_sORppoutofnp]
.[TC_erPglue]!
.[TC_erxdeletion]
.(TC_vpdeletion]
.(RC_punctuation)
.{TC_RinPPglue}!
.[TC_popldlcomma]!

\end{verbatim}



\section{Rule and Transformation Classes}

\begin{mruleclass}{RC\_Relmarking}
\begin{classdescr}
\kind optional rule class
\classtask to mark variables for relativization or topicalization 
\end{classdescr}

There are four rules Rrelmarking1-4. They are parametrized over an
index parameter and a moodparameter. It is their task to mark variables
with index = indexpar with the value of the moodparameter, so that one
shift transformation can do the shifting required.
The reasons that this is done in this manner are basically:

\begin{enumerate}
\item the shift rules
are extremely complex, and we do not want a repetition of such rules for
topicalization and relativization
\item we should remember which variable has been topicalized or relativized
in translation. For relativization this is an efficiency matter (but one that
we cannot do without, I think), but for topicalization it is crucially 
required.
\end{enumerate}
They perform the following tasks:

\begin{description}
  \item[Rrelmarking1(xpmoodpar=relativexpmood)] It 
marks NPVAR's outside VP with mood= relativexpmood;
  \item[Rrelmarking1(xpmoodpar=topicxpmood)]]
     it marks NPVAR(if it does not have relation=subjrel), 
     PREPPVAR, ADVPVAR outside VP with mood= topicxpmood 
  \item[Rrelmarking2(xpmoodpar=relativexpmood)] It 
marks NPVAR's inside VP with mood= relativexpmood;
  \item[Rrelmarking2(xpmoodpar=topicxpmood)]]
     it marks NPVAR, PREPPVAR, ADVPVAR  inside VP with mood= topicxpmood 
  \item[Rrelmarking3(xpmoodpar=relativexpmood)] It 
marks NPVAR's under VARPREPP outside of VP with mood= relativexpmood;
  \item[Rrelmarking3(xpmoodpar=topicxpmood)]]
     it marks NPVAR
     PREPPVAR, ADVPVAR under VARPREPP outside of VP with mood= topicxpmood 
  \item[Rrelmarking4(xpmoodpar=relativexpmood)] It 
marks NPVAR's in VARPREPP's inside of VP with mood= relativexpmood;
  \item[Rrelmarking1(xpmoodpar=topicxpmood)]]
     it marks NPVAR
     PREPPVAR, ADVPVAR in VARPREPP inside of VP with mood= topicxpmood 
\end{description}
\begin{members}

\begin{member}
\rulename Rrelmarking1
\ruletask It 
marks NPVAR's outside VP with mood= relativexpmood;
     it marks NPVAR(if it does not have relation=subjrel), 
     PREPPVAR, ADVPVAR outside VP with mood= topicxpmood 
\file dutch:rc\_relmarking.mrule (mrules105.mrule)
\semantics \nosemantics
\example
\remarks \noremarks

\end{member}
\begin{member}
\rulename RRelmarking2
\ruletask It 
marks NPVAR's inside VP with mood= relativexpmood;
     it marks NPVAR, PREPPVAR, ADVPVAR  inside VP with mood= topicxpmood 

\file dutch:rc\_relmarking.mrule (mrules105.mrule)
\semantics \nosemantics
\example
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rrelmarking3
\ruletask It 
marks NPVAR's under VARPREPP outside of VP with mood= relativexpmood;
     it marks NPVAR
     PREPPVAR, ADVPVAR under VARPREPP outside of VP with mood= topicxpmood 
\file dutch:rc\_relmarking.mrule (mrules105.mrule)
\semantics \nosemantics
\example
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rrelmarking4
\ruletask  It 
marks NPVAR's in VARPREPP's inside of VP with mood= relativexpmood;
     it marks NPVAR
     PREPPVAR, ADVPVAR in VARPREPP inside of VP with mood= topicxpmood 
\file dutch:rc\_relmarking.mrule (mrules105.mrule)
\semantics \nosemantics
\example
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_argrtorpos}
\begin{classdescr}
\kind obligatory transformation class
\classtask to put locative argument R-pronouns in their proper position
\end{classdescr}

\begin{members}
\begin{member}
\rulename TargRtoRpos1
\ruletask puts locargrel ADVPs dominating {\em er} into erposrel
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example
hij graag locargrel/er woont \to hij erposrel/er graag woont
\remarks \noremarks
\end{member}

\begin{member}
\rulename Targrtorpos2
\ruletask puts locargrel ADVPs dominating {\em hier, daar, waar} into
defRadvrel
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example
hij waarschijnlijk locargrel/daar woont \to hij defRadvrel/daar waarschijnlijk woont
\remarks \noremarks
\end{member}

\begin{member}
\rulename Targrtorpos0
\ruletask lets ADVPs dominating indefinite RADVs 
({\em ergens, nergens, overal}) pass this transformation class
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example hij waarschijnlijk locargrel/ergens woont \to hij waarschijnlijk locargrel/ergens woont
\remarks \noremarks
\end{member}

\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename TnoerORVR
\ruletask it filters non Verb Raising structures containing {\em erposrel,
erqrel} or {\em defRadvrel} 
\file dutch:tc\_speed.mrule (mrules94.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}
\begin{mruleclass}{TC\_advrtorpos}
\begin{classdescr}
\kind obligatory transformation class
\classtask to put locative adverbial R-pronouns in their proper position
\end{classdescr}

\begin{members}


\begin{member}
\rulename TadvRtoRpos1
\ruletask to put locadvrel/{\em er} into {\em erposrel}
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example hij graag locadvrel/er zwemt \to hij erposrel/er graag zwemt
\remarks This transformation uses the so-called \^{\ }-construction, which
is officially not allowed
\end{member}

\begin{member}
\rulename TadvRtorpos0
\ruletask to let structures containing locadvrel/{\em ergens, nergens, overal}
pass this transformation class
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example hij graag locadvrel/ergens zwemt \to hij graag locadvrel/ergens zwemt 
\remarks  This transformation uses the so-called \^{\ }-construction, which
is officially not allowed
\end{member}

\begin{member}
\rulename TadvRtoRpos2
\ruletask to put locadvrel/{\em daar, hier, waar} into defRadvrel
\file dutch:tc\_argrtorpos.mrule (mrules102.mrule)
\semantics \nosemantics
\example hij graag locargrel/daar zwemt \to hij defRadvrel/daar graag zwemt
\remarks  This transformation uses the so-called \^{\ }-construction, which
is officially not allowed
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}
\begin{mruleclass}{Hettoer}
\begin{classdescr}
\kind several iterative transformations plus filters
\classtask 
The NP, CNVAR or NPVAR functioning as 
objrel/.. to the right of the head is changed (into errel/.. to the left of
of the head), and it gets dominated by RADVP.
It is assigned the case value {\em Rcase}. 
This case value is there only for historical reasons.
It was intended to mark that the variable was later going to be an R-pronoun,
but this is now marked by the fact that the variable is dominated by RADVP.
\end{classdescr}

The following rules exist:
\begin{description}
\item[TVPhettoer1] turns {\em voor het} into {\em er voor} if under VP
\item[TVPhettoer2] turns {\em met het} into {\em er mee} if under VP
\item[FVPhettoer12] postfilter  for TVPhettoer1 and TVPhettoer2 
\item[TShettoer1] turns {\em voor het} into {\em er voor} if under CLAUSE
\item[TShettoer2] turns {\em met het} into {\em er mee} if under CLAUSE
\item[FShettoer12] postfilter   for TShettoer1 and TShettoer2
\item[Fprehettoer]   prefilter                           *
\item[TAdjhettoer1] {\em naast het} \to  {\em er naast} in ADJP if 
synzijn IN synvpefs  
\item[TAdjhettoer2] {\em met het} \to {\em er mee} in ADJP if synzijn IN
synvpefs
\item[FAdjhettoer12] postfilter for Tadjhettoer1 and Tadjhettoer2
\end{description}



\begin{members}
\begin{member}
\rulename TVPhettoer1
\ruletask  to turn {\em het} etc. into {\em er} etc. under VERBP
if the preposition has the attribute {\bf postform} specified as {\em both}
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\semantics \nosemantics
\example voor het \to er voor
\remarks \noremarks
\end{member}

\begin{member}
\rulename TVPhettoer2
\ruletask  to turn {\em het} etc. into {\em er} etc. under VERBP
if the preposition is {\em  met} or {\em  tot}.
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\semantics \nosemantics
\example met het \to er mee
\remarks \noremarks
\end{member}

\begin{member}
\rulename TShettoer1
\ruletask   to turn {\em het} etc. into {\em er} etc. under S 
if the preposition has the attribute {\bf postform} specified as {\em both}
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\semantics \nosemantics
\example voor het \to er voor
\remarks \noremarks
\end{member}

\begin{member}
\rulename TShettoer2
\ruletask   to turn {\em het} etc. into {\em er} etc. under S 
if the preposition is {\em  met} or {\em  tot}.
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\semantics \nosemantics
\example met het \to er mee
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tadjhettoer1
\ruletask    to turn {\em het} etc. into {\em er} etc. under ADJP
if the preposition has the attribute {\bf postform} specified as {\em both}
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example (tevreden) over het \to (tevreden) er over
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tadjhettoer2
\ruletask    to turn {\em het} etc. into {\em er} etc. under ADJP 
if the preposition is {\em  met} or {\em  tot}.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example (blij) met het \to (blij) er mee
\remarks \noremarks
\end{member}



\end{members}
\noindent
{\bf Filters} Associated Filters are:
\begin{members}
\begin{member}
\rulename FVPhettoer1
\ruletask to guarantee application of TVPhettoer1 and TVPhettoer2
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\remarks \noremarks
\end{member}

\begin{member}
\rulename FShettoer12
\ruletask  to guarantee application of TShettoer1 and TShettoer2
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\remarks \noremarks
\end{member}

\begin{member}
\rulename Fadjhettoer12
\ruletask  to guarantee application of TAdjhettoer1 and TAdjhettoer2
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fprehettoer
\ruletask to speed up analysis
\file dutch:tc\_errules2.mrule (mrules99.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{ErtoErpos}
\begin{classdescr}
\kind several iterative transformation classes with filters
\classtask to put RADVs or PREPPs containing RADVs into {\em erposrel}.
\end{classdescr}

\begin{members}
\begin{member}
\rulename TPPtoerpos1
\ruletask to put PREPPs containing an RADV ({\em daar, hier, waar}) into
{\em erposrel} (analysis only)
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example hij prepobjrel/[x naar] keek \to hij erposrel/[x naar] keek\\
(de huizen) waarnaar hij keek)
\remarks The presence of {\em  er} in PREPP should be excluded, otherwise we
can accept e.g. {\em  *Hij keek ernaar niet}. 
\end{member}

\begin{member}
\rulename Tertoerpos1
\ruletask to put RADVs bearing relation {\em errel} into {\em erposrel}.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example hij gisteren [er naar] keek \to hij er gisteren naar keek
\remarks The rule is currently applied for all RADVs. This is probably not
correct. See doc. R0307 for discussion.
\end{member}

\begin{member}
\rulename Tertoerpos2
\ruletask to put RADVs bearing relation {\em errel} into {\em erposrel}, and
at the same time displacing the PREPP it comes from. This is required for
PREPPs bearing relations {\em  byobjrel, vpadvrel}. The cases of
stranding from {\em aanobjrel,
voorobjrel} should be prohibited in full. These can be dealt with by stranding 
from {\em prepobjrel}.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example hij gisteren [er door] werd gedood \to
         hij {\bf er} gisteren {\bf door} werd gedood\\
         hij gisteren [er mee] Piet sloeg \to
         hij {\bf er} gisteren Piet {\bf mee} sloeg
\remarks At the moment these transformations also delete the relevant PREPP
node. This is not compatible anymore with the surface parser, and the rules
should be adapted. These adaptations will make them simpler.
\end{member}


\begin{member}
\rulename Tadjertoerpos1
\ruletask  to put RADVs bearing relation {\em errel} into {\em erposrel},
if the PREPP they occur in precedes the adjective. 
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example hij [er toe instaat] is \to hij er [toe instaat] is
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Filter} associated Filter are:
\begin{members}
\begin{member}
\rulename Fertoerpos12
\ruletask to guarantee application of Tertoerpos1 and Tertoerpos12
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks \noremarks
\end{member}
\begin{member}
\rulename Fadjertoerpos12 
\ruletask  to guarantee application of Tadjertoerpos1. It is also suited to
guarantee application of a transformation (Tadjertoerpos2)
dealing with post-head PREPPs, which is still to be written.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks \noremarks
\end{member}
\end{members}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename PFpreertoerpos
\ruletask to speed up analysis. It filters all non verbraising structures that
still contain an erposrel/RADVP with prepositional functions.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_Erxins}
\begin{classdescr}
\kind obligatory transformation class
\classtask  to delete the abstract subjects EC and erEC and to introduce {\em er}
if required
\end{classdescr}

\begin{members}
\begin{member}
\rulename TERxIns1
\ruletask   to delete the abstract subject erEC and to introduce {\em er}
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example erEC danst iemand \to er danst iemand\\
         erEC wordt gedanst \to er wordt gedanst 
\remarks \noremarks
\end{member}

\begin{member}
\rulename TerXins0
\ruletask   to let structures without an EC or erEC subject pass this 
transformation class
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example hij zwemt \to hij zwemt
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terxins2
\ruletask   to delete the abstract subject EC 
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example dat EC hem dat boek bevalt \to dat hem dat boek bevalt
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}



\begin{mruleclass}{TC\_erqrules}
\begin{classdescr}
\kind iterative transformation class with filter
\classtask to introduce quantitative {\em er} if this is required by some
headless count NP.
\end{classdescr}

\begin{members}
\begin{member}
\rulename Terq1
\ruletask to introduce quantitative {\em er} if this is required by some
headless count NP that bears objrel.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example
hij ziet er twee\\
\remarks This rule should be extended to deal with {\em indobjrel} and
{\em predrel} as well
\end{member}

\begin{member}
\rulename Terq2
\ruletask  to introduce quantitative {\em er} if this is required by some
headless count NP that bears {\em preadvrel} or {\em postsubjrel}.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example
er lopen er twee\\ 
hij ziet er twee niet
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terq3
\ruletask   to introduce quantitative {\em er} if this is required by some
headless count NP that bears {\em subjrel}.
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example
Twee hebben er een boek gekocht
\remarks \noremarks
\end{member}


\end{members}

\noindent
{\bf Filters} Associated filters are:
\begin{description}
\rulename Ferq
\ruletask Filter to guarantee application of Terq1, Terq2 and Terq3
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks The filter contains a typing error. In the matchcondition, the
second EXIST statement should hold for mu2, not for mu1. For this reason
a sentence such as {\em  hij ziet twee} will be accepted. This has been
ameliorated already (JO,  31-MAY-1989 09:58:49 )
\end{description}

\begin{description}
\rulename Fpreerq
\ruletask to guarntee application of the relevant transformations in analysis
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\remarks  
The filter contains a typing error. In the matchcondition, the
second EXIST statement should hold for mu2, not for mu1. For this reason
a sentence such as {\em  hij ziet twee} will be accepted. This has been
ameliorated already (JO,  31-MAY-1989 09:58:49 )

Apart form this, the rule is still wrong w.r.t verb raising structures. 
See doc. R0307 for discussion.

\end{description}
\nospeedrules
\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_whshift}
\begin{classdescr}
\kind obligatory transformation class
\classtask to shift constituents if required, i.e. if they have mood =
wh, relativexpmood or topicxpmood.
\end{classdescr}


The following shift rules exist:

\begin{description}
\item[Twhshift1a] for shifting inside a sentence
\item[Twhshift1b]  for shifting inside a sentence
\item[Twhshift0] to pass structures where shifting does not apply
\item[Twhshift2] for shifting out of a subordinate clause
\end{description}

\begin{members}
\begin{member}
\rulename TWhshift1a
\ruletask  for shifting inside a sentence, from under CLAUSE
\file dutch:tc\_whshift.mrule (mrules84.mrule)
\semantics \nosemantics
\example For every subrule an example is supplied:
\begin{description}
    \item[subjrel]      {\em Wie} heeft hem gezien
    \item[postsubjrel] {\em Wie} heeft er een boek gekocht?
    \item[tempadvrel/ADVPVAR] {\em Wanneer} heeft hij het boek gekocht? 
    \item[defRadvrel] {\em Waar} heeft hij het boek gekocht?
    \item[tempadvrel/PREPPVAR] {\em Op welke dag} heeft hij het boek gekocht?
    \item[locadvrel,PREPPVAR] {\em In welke stad} heeft hij het boek gekocht?
    \item[erposrel, RADVP] {\em Waar} kijkt hij naar?
    \item[erposrel,VARPREPP] {\em Waarnaar} kijkt hij
\end{description}
\remarks Shifting of {\em preadvrels} has been put off, because it caused too 
many ambiguities. If {\em defRadvrel}s are done away with, then it should
be replaced by {\em locadvrel}.
\end{member}

\begin{member}
\rulename Twhshift1b
\ruletask  for shifting inside a sentence, from under VERBP
\file dutch:tc\_whshift.mrule (mrules84.mrule)
\semantics \nosemantics
\example For each subrule an example is given:
\begin{description}
    \item[objrel] {\em Wat} heeft hij gekocht?
    \item[indobjrel] {\em Wie} heeft hij een boek gegeven?
    \item[aanobjrel] {\em Aan wie} heeft hij een boek gegeven?
    \item[voorobjrel] {\em Voor wie} heeft hij een boek gekocht?
    \item[byobjrel] {\em Door wie } werd er een boek gekocht?
    \item[predrel/ADJP] {\em Hoe groot} is hij geworden
    \item[predrel/NP] {\em Wat} is hij geworden
    \item[predrel/NPVAR] {\em Wat} is dat?
    \item[locargrel/VARPREPP] {\em In welke stad} woont hij?
    \item[dirargrel/VARPREPP] {\em Uit welk raam} is hij gevallen?
    \item[prepobjrel/VARPREPP] {\em Naar wie} keek hij?
\end{description}
\remarks 
The following remarks can be made:
\begin{description}
  \item[predrel] We allow for movement of predrel/ADJP and predrel/NP despite
the fact that they are not variables. Of course, relativization and 
topicalization of such constituents cannot take place. 
  \item[dirargrel] The subrule mentioned can deal with all kinds of
directional VARPREPPs. This is wrong. Movement of PREPPs headed by a postposition 
or a circumposition cannot be moved to a sentence initial position.
(cf. *{\em op welk huis af} is hij gelopen?, *{\em Welk huis uit} is hij 
gelopen?, etc.). In these cases it should be made possible to move the 
first part of the circumposition on its own, or the NP on its own, cf.
{\em  Op welk huis} is hij afgelopen?, {\em  Welk huis} is hij uitgelopen.
This certainly is related to the fact that postpositions must be integrated
with the verb, cf. {\em hij is op het huis afgelopen, hij is het huis 
ingelopen}. This should be ameliorated.
\item[vpadvrel] Certain constituents cannot be shifted yet, e.g. vpadvrels.
The rules should be extended to deal with them. Notice, however, that there
is no variable for such adverbials.
\end{description}
\end{member}

\begin{member}
\rulename Twhshift0
\ruletask to let structures where no shift must take place pass this 
transformation class
\file dutch:tc\_whshift.mrule (mrules84.mrule)
\semantics \nosemantics
\example hij zwemt \to hij zwemt
\remarks \noremarks
\end{member}

\begin{member}
\rulename Twhshift2
\ruletask  for shifting out of a subordinate clause
\file dutch:tc\_whshift.mrule (mrules84.mrule)
\semantics \nosemantics
\example hij denkt [ wat dat Piet ziet] \to wat hij denkt [dat Piet ziet]
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename PFshiftcheck
\ruletask It filters non VR structures containing {\em shiftrel} unless this
{\em shiftrel} is the adverb {\em dan}
\file dutch:tc\_speed.mrule (mrules94.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{RC\_negandposvar}
\begin{classdescr}
\kind optional rule class
\classtask to introduce posvar or negvar
\end{classdescr}

\begin{members}
\begin{member}
\rulename RPOSVAR
\ruletask to introduce posvar
\file dutch:tc\_negandposvar.mrule (mrules103.mrule)
\semantics \nosemantics
\example
hij kwam $\rightarrow$
hij w\'{e}l kwam \\
wanneer hij 't die man waarschijnlijk gegeven  heeft $\rightarrow$\\
wanneer hij 't die man waarschijnlijk w\'{e}l gegeven heeft 
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rnegvar1
\ruletask To insert the element NEGVAR under the CLAUSEnode. The element 
NEGVAR introduced by this rule will never be replaced by a NEG 
that is going to melt together with some other
constituent. For this, see rules Rnegvar2,3
\file dutch:tc\_negandposvar.mrule (mrules103.mrule)
\semantics \nosemantics
\example
x1 kwam $\rightarrow$\\
x1 niet kwam\\
x1 x2 kocht $\rightarrow$\\
x1 x2 niet kocht\\
x1 x2 er (waarschijnlijk) trof $\rightarrow$\\
x1 x2 er (waarschijnlijk) niet trof\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rnegvar2
\ruletask To insert NEGVARs before constituents that can melt together with
the NEG element introduced here later on. 
\file dutch:tc\_negandposvar.mrule (mrules103.mrule)
\semantics \nosemantics
\example
iemand Jan tegen kwam $\rightarrow$\\
niet iemand Jan tegenkwam\\
( $\rightarrow$ niemand Jan tegenkwam)
x1 naar iemand keek$\rightarrow$\\
x1 niet naar iemand keek\\
($\rightarrow$ niemand )\\
\remarks Parameters over relations are used as internal parameters
to get all possible matches.

\end{member}

\begin{member}
\rulename Rnegvar3
\ruletask To insert NEGVARs before constituents that can melt together with
the NEG element appearing here later on. 
\file dutch:tc\_negandposvar.mrule (mrules103.mrule)
\semantics \nosemantics
\example
x1 iemand tegen kwam $\rightarrow$\\
x1 niet iemand gisteren tegenkwam\\
($\rightarrow$ x1 niemand gisteren tegenkwam )\\
\remarks  Parameters over relations are used as internal parameters
to get all possible matches.
\end{member}
\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fnonegorposvar
\ruletask to speed up analysis. It checks whether there are still NEGVARs or
POSVARs in the structure. If so, the structure is filtered.
\file dutch:tc\_negandposvar.mrule (mrules103.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{RC\_Substitution}
\begin{classdescr}
\kind iterative rule class
\classtask to substitute elements for variables and to introduce phrases.
\end{classdescr}


The following substitutionrules exits
\begin{description}
  \item[Ridsubstitution2] genitive NP in subjrel/NP in S.
  \item[Rsubstitution1] NP in VP, nongeneric. 
( dirargrel, objrel, indobjrel, predrel, argrel)
   \item[Rsubstitution2]  2. NP in S , nongeneric. 
(subjrel, preadvrel, postsubjrel, shiftrel)
   \item[Rsubstitution3] NP in VARPREPP in VP, nongeneric. 
     (prepobjrel, locargrel, dirargrel, instradvrel, vpadvrel, postvPorel, 
              postVerbrel, byobjrel, aanobjrel, voorobjrel, predrel)
   \item[Rsubstitution3a] NP in VARPREPP in ADJP in VP, nongeneric. 
             (prepobjrel, aanobjrel, voorobjrel, locargrel, postadjrel)
   \item[Rsubstitution4]  (VAR)PREPP for  PREPPVAR in S, nongeneric.
            ( locadvrel, causadvrel, shiftrel), in front of VP
   \item[Rsubstitution4a]  (VAR)PREPP for  PREPPVAR in S , nongeneric. 
            ( Spostverbrel), to the right of VP
   \item[Rsubstitution4b](VAR)PREPP for  PREPPVAR in VP , nongeneric.
            ( vpadvrel, postverbrel, instradvrel)
   \item[Rsubstitution5]  ER as a locative adverbial (erposrel)
   \item[Rsubstitution6]  DAAR,HIER as locative adverbials. (defRadvrel) 
   \item[Rsubstitution8] ADVP under S,
               not containing an RADV (locadvrel, shiftrel)
   \item[Rsubstitution9]  sentadvrel/.. (sentadvrel, causadvrel)
   \item[Rsubstitution10] hetPROSENT (complrel) 
   \item[Rsubstitution11] POS (posrel)
   \item[Rsubstitution12] NEG, no melting (negrel)
   \item[Rsubstitution13] NEG, melting, in VP (meltnegrel) 
   \item[Rsubstitution14] NEG, melting, in S (meltnegrel) 
   \item[Ridsubstitution1] genitive NP in objrel/NP in S.
   \item[Ridsubstitution3] genitive NP in objrel/NP in PREPP in VP
   \item[Rsubstitution7]  Indefinite RADVs as locative adverbials 
                   (ergens, overal etc.)
   \item[Rsubstitution16] NP in VARPREPP in S. (shiftrel)
   \item[Rsubstitution17] NP under RADVP in S (shiftrel, erposrel)
   \item[Rsubstitution18] NP under RADVP in VARPREPP under S (shiftrel, 
locadvrel, tempadvrel)
   \item[Rsubstennp1] NPs with count EN head in S. (shiftrel, subjrel, preadvrel,
postsubjrel)
   \item[Rsubstennp2] NPs with count EN head in VERBP. (objrel)
   \item[Rbigprosubst] NP headed by BIGPRO (subjrel)
   \item[Rsadjsubstitution1] NP in ADJP. (objrel, indobjrel,dirargrel, predrel,
argrel)
 
\end{description}

Most substitution rules look rather complicated. They are complicated because
\begin{description}
  \item[] The Substitution order condition must apply, one in analysis, and one
in generation 
  \item[] All kinds of special phrases that are substituted by special 
substitution rules, or that must not be substituted at all must be excluded.
Examples: Negative Phrases, BIGPRO-NPs, reflexive and reciprocal NPs, NPs
without an overt head
  \item[] Case must be transmitted (for NP substitution rules) and superdeixis
must be taken care of.
\end{description}


\begin{members}

\begin{member}
\rulename RIdSubstitution2
\ruletask It substitutes (*POSSADJs and *) NPs for variables under NP
under S, in particular, for variables bearing relation subjrel. 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example x1 hart word gebroken, Jans/mijn/mijn vaders/wiens 
hart word gebroken door haar
\remarks \noremarks
\end{member}

\begin{member}
\rulename RSubstitution1
\ruletask It substitutes nongeneric NPs for variables under VP, in 
particular, for variables bearing the relations {\em 
dirargrel, objrel, indobjrel, predrel, argrel}
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 x2 verkoop- $\rightarrow$
x1 de boeken verkoop-
\remarks Substitution for predrel is required for identificational sentences.
Substitution for {\em argrel} has been added for idioms. It causes
a lot of extra ambiguities, and should be dealt with in some other way, in my 
opinion. \problem

\end{member}
\begin{member}
\rulename Rsubstitution2
\ruletask To substitute NPs for variables under S, in particular for
variables bearing relation 
{\em (subjrel, preadvrel, postsubjrel, shiftrel}
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 de boeken koop $\rightarrow$\\
Jan de boeken koop
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution3
\ruletask To substitute NP's for variables inside VARPREPPs, changing 
these VARPREPPs into PREPPs. The VARPREPPS can bear one of the following 
relations: 
{\em prepobjrel, locargrel, dirargrel, instradvrel, vpadvrel, postvPorel, 
postVerbrel, byobjrel, aanobjrel, voorobjrel, predrel}
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 [naar x2] keek $\rightarrow$\\
x1 naar de TV keek\\
x1 [in x2] woont $\rightarrow$\\
x1 in Amsterdam woont\\
x1 [naar x2] toe gaat $\rightarrow$\\
x1 naar de kermis toe gaat\\
x1 [met x2 ] geslagen wordt $\rightarrow$\\
x1 [met een hamer] geslagen wordt\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution3a
\ruletask  to substitute NPs in VARPREPP in ADJP in VP, nongeneric 
Relations: {\em prepobjrel, aanobjrel, voorobjrel, locargrel, postadjrel}
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 [ blij met x2] is + hij \to x1 [blij met hem] is\\
\remarks \noremarks
\end{member}
\
\begin{member}
\rulename Rsubstitution4
\ruletask   to substitute  (VAR)PREPP for  PREPPVAR in S, nongeneric
in front of VP. relations: {\em  locadvrel, causadvrel, shiftrel)}/
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 locadvrel/x3 danste $\rightarrow$\\
x1 [in de tuin ] danste\\
x1 x3 niet werkte $\rightarrow$\\
x1 [ om die reden] niet werkte\\
x1 locadvrel/x3 danste $\rightarrow$\\
x1 [in  x2 ] danste\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution4a
\ruletask substitution of (VAR)PREPP for  PREPPVAR in S , nongeneric 
to the right of VP. relations : {\em Spostverbrel}.
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 locadvrel/x3 danste $\rightarrow$\\
x1 [in de tuin ] danste\\
x1 x3 niet werkte $\rightarrow$\\
x1 [ om die reden] niet werkte\\
x1 locadvrel/x3 danste $\rightarrow$\\
x1 [in  x2 ] danste\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution4b
\ruletask    substitution of (VAR)PREPP for  PREPPVAR in VP , nongeneric.
Relations: {\em vpadvrel, postverbrel, instradvrel}.
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
met een hamer; met de man 
\remarks \noremarks
\end{member}

\begin{member}
\rulename RSubstitution5
\ruletask To insert the locative adverbial ER in the erposrel. 
It is presupposed that there is an erposrel already. 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
hij x [danst] + er $\rightarrow$\\
hij er danst\\
hij de man x [ gezien had ] $\rightarrow$\\
hij de man er [gezien had ]\\
hij x1 gisteren  [ iemand gezien had] $\rightarrow$\\
hij er gisteren [iemand gezien had 
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution6
\ruletask To insert the locative adverbials DAAR and HIER, and to put it
in a position immediately following erposrel (defRadvrel). 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
hij x [danst] + daar$\rightarrow$\\
hij er danst\\
hij de man x [ gezien had ] + hier $\rightarrow$\\
hij de man hier [gezien had ]\\
hij gisteren x1 [ iemand gezien had] + daar$\rightarrow$\\
hij daar gisteren [iemand gezien had 
\remarks It is doubtful whether this special position for {\em  daar/hier}
should be maintained.
\end{member}

\begin{member}
\rulename Rsubstitution8
\ruletask To insert locative adverbial phrases that do not contain a
RADV 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
hij x1 danst $\rightarrow$\\
hij daarginter/boven/onder/beneden/thuis  danst
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsentadvsubst
\ruletask to substitute ADVPS for the relations {\em sentadvrel} and 
{\em causadvrel}
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
hijh x1 zwemt + waarschijnlijk \to hij waarschijnlijk zwemt
\remarks \noremarks
\end{member}

\begin{member}
\rulename RSubstitution10
\ruletask To substitute PROSENTs for PROSENTVARs
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 weet x2 + PROSENT $\rightarrow$\\
x1 weet het\\
x1 zich x2 afvraagt $\rightarrow$\\
x1 zich het afvraagt\\ 
(Cf. English: I know, I wonder)
\remarks \noremarks
\end{member}

\begin{member}
\rulename RSUBSTITUTION11
\ruletask To introduce the element {\em w\'{e}l} into the sentence.
It is introduced basically to allow for an adequate translation of English
emphatic do-constructions. These can be handled very simply.
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
hij posvar kwam + w\'{e}l $\rightarrow$
hij w\'{e}l kwam \\
wanneer hij 't die man waarschijnlijk posvar gegeven  heeft $\rightarrow$\\
wanneer hij 't die man waarschijnlijk w\'{e}l gegeven heeft 
\remarks This rule is not a substitution rule, but an introduction rule. POSVAR 
is not a variable.
\end{member}

\begin{member}
\rulename RSubstitution12
\ruletask To introduce the element NEG under the CLAUSEnode on the position of
negrel/NEGVAR. The element 
NEG introduced by this rule is never going to melt together with some other
constituent. For this, see rules Rsubstitution13,14
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 NEGVAR kwam $\rightarrow$\\
x1 niet kwam\\
x1 x2 NEGVAR kocht $\rightarrow$\\
x1 x2 niet kocht\\
x1 x2 er (waarschijnlijk) NEGVAR trof $\rightarrow$\\
x1 x2 er (waarschijnlijk) niet trof\\
\remarks This rule is not a substitution rule, but an introduction rule. 
NEGVAR is not a variable.
\end{member}
\begin{member}
\rulename RSubstitution13
\ruletask To insert NEGs before constituents that can melt together with
this NEG element. 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
NEGVAR iemand Jan tegen kwam $\rightarrow$\\
niet iemand Jan tegenkwam\\
( $\rightarrow$ niemand Jan tegenkwam)
x1 NEGVAR naar iemand keek$\rightarrow$\\
x1 niet naar iemand keek\\
($\rightarrow$ niemand )\\
\remarks This rule is not a substitution rule, but an introduction rule. 
NEGVAR is not a variable.
\end{member}

\begin{member}
\rulename Rsubstitution14
\ruletask To insert NEGs before constituents that can melt together with
this NEG element. 
\file dutch:rc\_substitution.mrule (mrules2.mrule)
\semantics \nosemantics
\example
x1 NEGVAR iemand tegen kwam $\rightarrow$\\
x1 niet iemand gisteren tegenkwam\\
($\rightarrow$ x1 niemand gisteren tegenkwam )\\
\remarks This rule is not a substitution rule, but an introduction rule. 
NEGVAR is not a variable.
\end{member}

\begin{member}
\rulename RIdSubstitution1
\ruletask It substitutes POSSADJs for variables under NP under VP, in 
particular, for variables bearing relation objrel.
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example x1 breekt x2 hart, Jan breekt haar / Maries / zijn moeders hart
\remarks \noremarks
\end{member}

\begin{member}
\rulename RIdSubstitution3
\ruletask It substitutes POSSADJs for variables under NP under VP, in 
particular, for variables bearing relation objrel.
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example x1 ramt x2 door x3s strot, Jan ramt het stuk door 
zijn / Maries / zijn vaders strot
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution7
\ruletask to substitute indefinite RADVs as locative adverbials 
                   (ergens, overal etc.)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
Hij werkt ergens; Hij werkt overal; 
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution16
\ruletask    to substitute NPs in VARPREPP in S. (shiftrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
naar x1 keek hij + wie \to naar wie keek hij?
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstitution17
\ruletask to substitute NPs under RADVP in S (shiftrel, erposrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example hij x1 niet naar keek + het \to hij het+R niet naar keek\\
x1 hij naar keek + wat \to wat+R hij naar keek
\remarks \noremarks
\end{member}

\begin{member}
\rulename rsubstitution18
\ruletask    to substitute NPs under RADVP in VARPREPP under S (shiftrel, 
locadvrel, tempadvrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example [x1 naast] hij woont + wat \to [wat+R naast] hij woont
hij [x1 na ] kwam + het \to hij [het+R na ] kwam
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsubstennp1
\ruletask    to substitute NPs with count EN head in S. 
(shiftrel, subjrel, preadvrel,
postsubjrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
x1 hij er gezien heeft + NP[hoeveel EN] \to NP[hoeveel] hij er gezien heeft 
\remarks \noremarks
\end{member}

\begin{member}
\rulename RsubstenNP2
\ruletask to substitute NPs with count EN head in VERBP. (objrel)

\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
hij er x1 gezien heeft + NP[ twee EN] \to hij er NP[twee] gezien heeft
\remarks This rule must be extended to deal with {indobjrel}s as well.
(cf. Hij heeft er twee een boek gegeven)
\end{member}

\begin{member}
\rulename Rbigprosubst
\ruletask to substitute NPs headed by BIGPRO (subjrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
x1 samen te zwemmen + NP[BIGPRO] \to NP[BIGPRO] samen te zwemmen
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rsadjsubstitution1
\ruletask    to substitute NPs in predrel/ADJP. (objrel, indobjrel,dirargrel, predrel,
argrel)
\file dutch:rc\_substitution2.mrule (mrules93.mrule)
\semantics \nosemantics
\example
hij [x1 beu] is + het gezeur \to hij [het gezeur beu] is \\
hij [x1 dit schuldig] is + deze man \to hij [deze man dit schuldig] is
\remarks \noremarks
\end{member}



\begin{member}
\rulename Rtempadvsubstitution1
\ruletask To insert temporal adverbial phrases of category ADVP and
frequential phrases of category NP
\file dutch:rc\_refvar.mrule (mrules64.mrule)
\semantics \nosemantics
\example
hij x1 danst $\rightarrow$\\
hij nu/vandaag/morgen danst
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rtempadvsubstitution2
\ruletask To insert temporal adverbial phrases of category PREPP
\file dutch:rc\_refvar.mrule (mrules64.mrule)
\semantics \nosemantics
\example
hij x1 een brief schrijft $\rightarrow$\\
hij in 3 uur/om 3 uur/op een dag een brief schrijft
\remarks \noremarks
\end{member}



\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Ttempadvcheck
\ruletask it filters structures that do not contain a variable or a
sentence under tempadvrel if deixis does not equal omegadeixis, unless
we are dealing with a VR structure.
\file dutch:tc\_speed.mrule (mrules94.mrule)
\remarks \noremarks
\end{description}


\noplannedrules

\norulesnotince



\begin{comments}
A first version of a transformation that would speed up derivations by 
checking whether substitution has applied already has been written 
(Tsubstspeed). It is
not in the control expression, since additional measures must be taken to deal
with idioms.
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_negadapt}
\begin{classdescr}
\kind iterative transformation class plus filter
\classtask to take care of melting NEG with the words following NEG if required
\end{classdescr}

The following rules exist:
\begin{description}
\item[Tnegadapt1] Negadaptation  under S, plus a filter
\item[Tnegadapt2] Negadaptation under VP, plus a filter
\item[Tnegadapt3] Negadaptation in PREPP (optional, only in analysis) under S
\item[Tnegadapt4] Negadaptation in PREPP (optional, only in analysis) under VP
\item[Fnegspeed] to speed up analysis.
The  speedfilter Fnegspeed checks whether negative words still occur in the structure.
This is only allowed if we are dealing with verb raising structures;
It is never allowed for {\em subjrel, objrel, indobjrel, preadvrel}. 
We might even
strengthen this: it is allowed if and only if there is verbraising,  
the actual verbpatterns contain [synclosedsent, synclosedinfsent] 
and thetavp in [vp010, vp012].
\item[Tnegadaptfilter] to guarantee application of the transformation in generation
\end{description}


Each rule takes care of the following changes:

\begin{itemize}
  \item meltnegrel/NEG + iemand \to niemand
  \item meltnegrel/NEG + iets   \to niets
  \item meltnegrel/NEG + ergens \to nergens
  \item meltnegrel/NEG + ooit   \to nooit
  \item meltnegrel/NEG + een    \to geen
  \item meltnegrel/NEG + --     \to geen
\end{itemize}

\begin{members}
\begin{member}
\rulename Tnegadapt1
\ruletask Negadaptation  under S
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\semantics \nosemantics
\example NEG iemand ziet hem \to niemand ziet hem
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tnegadapt2
\ruletask Negadaptation under VP
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\semantics \nosemantics
\example hij ziet NEG iemand \to hij ziet niemand
\remarks We should perhaps exclude this transformation if NP has the 
relation predrel/.., especially if the NP is modified cf.
{\em  Hij is niet iemand/*niemand die dat gauw zal doen} \\
{\em  Dat is niet iets/*niets om licht over te denken}
\end{member}

\begin{member}
\rulename Tnegadapt3
\ruletask Negadaptation in PREPP (optional, only in analysis) under S
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\semantics \nosemantics
\example hij NEG naast iemand zwemt \to hij naast niemand zwemt
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tnegadapt4
\ruletask Negadaptation in PREPP (optional, only in analysis) under VP
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\semantics \nosemantics
\example hij NEG naar iemand kijkt \to hij kijkt naar niemand
\remarks \noremarks
\end{member}


\end{members}

\noindent
{\bf Filters} Associated filters are:
\begin{description}
\rulename Negadaptfilter
\ruletask to guarantee application of the transformations in generation
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fnegspeed
\ruletask to speed up analysis.
The  speedfilter Fnegspeed checks whether negative words still occur in the
structure. This is only allowed if we are dealing with verb raising structures;
It is never allowed for {\em subjrel, objrel, indobjrel, preadvrel}. 
We might even
strengthen this: it is allowed if and only if there is verbraising,  
the actual verbpatterns contain [synclosedsent, synclosedinfsent] 
and thetavp in [vp010, vp012].
\file dutch:tc\_negadapt.mrule (mrules89.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_toer}
\begin{classdescr}
\kind iterative transformation class with filter
\classtask to turn {\em het} into {\em er} etc.
\end{classdescr}

\begin{members}

\begin{member}
\rulename Ttoer1
\ruletask turns {\em het} into {\em er} etc. when under RADVP under S
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example hij het+R niet naar keek \to hij keek er niet naar keek 
\remarks \noremarks
\end{member}

\begin{member}
\rulename Ttoer2
\ruletask turns {\em het} into {\em er} etc. when under RADVP under PREPP in S
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example [wat+R naar] hij keek \to [waar naar] hij keek
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Filter} Associated filters are:
\begin{description}
\rulename Ftoer12
\ruletask to guarantee application of Ttoer1,Ttoer2
\file dutch:tc\_errules.mrule (mrules86.mrule)
\remarks \noremarks
\end{description}

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{Cliticrules}
\begin{classdescr}
\kind several obligatory transformation classes
\classtask to put clitic pronouns in their proper position
\end{classdescr}

The following clitic placement rules are exist:

\begin{description}
  \item[Thetclplacement1] puts an object `het' into {\em hetclrel},
                            e.g. {\em ik zie 't/het}
  \item[Thetclplacement0] lets structures without an object or predrel 
{\em het} or an object {\em het} in an ADJP 
                          pass this transformation class, e.g. {\em ik zwem}
  \item[Thetclplacement2] puts a predrel {\em het} into {\em hetclrel},
                          e.g. {\em ik ben 't/het}
  \item[Tobjtocl1] puts personal pronouns (not: {\em het}) into 
{\em firstclrel} or 
                   {\em secondclrel}.
                   It does so for reduced pronouns and for nonreduced pronouns,
  \item[Tobjtocl0] lets objects or predrels in VP or in predrel ADJP in VP
that are not personal pronouns or that are
                     unreduced personal pronouns pass this transformation class
  \item[Tindobjtocl1]puts personal pronouns (not {\em het}) 
                      into {\em firstclrel}.
                   It does so for reduced pronouns and for nonreduced pronouns
  \item[Tindobjtocl0] lets indirect objects in VP or in ADJP in VP
that are not personal pronouns
                            or that are
                     unreduced personal pronouns pass this transformation class
  \item[Tpredtocl1] puts predicative pronouns in {\em firstclrel} or 
{\em secondclrel}
                 (e.g. {\em ik ben 'm})

  \item[Tadjhetclplacement1] puts {\em het} or {\em 't} from ADJP into 
{\em hetclrel}! 
  \item[Tadjobjtocl1] puts personal pronouns (not: {\em het}) from ADJP into
                    {\em firstclrel} or {\em secondclrel}
  \item[Tadjindobjcl1] puts personal pronouns (not {\em het}) 
                      into {\em firstclrel}.
                   It does so for reduced pronouns and for nonreduced pronouns
\end{description}

The control expression is:

\begin{verbatim}
(TCliticspeed)
.(Thetclplacement2 | Thetclplacement1 | | Tadjhetclplacement1 | Thetclplacement0)
.(Tindobjtocl1 | Tadjindobjtocl1 | Tindobjtocl0)
.(Tpredtocl1 | Tobjtocl1 | Tobjtocl0 | Tadjobjtocl1)
\end{verbatim}

If predicative clitics and object-clitics can cooccur (examples
{\em *Ik maak 'r 'm; *Ik vind 'm 'm}), then objtocl1 and predtocl1 must be
separated.

The transformation  preceding these t-classes speeds up analysis. 
It requires
that either no cliticrel is found or that we are dealing with Verbraising.

\begin{members}

\begin{member}
\rulename Thetclplacement1
\ruletask puts an object `het' into {\em hetclrel}
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik de jongen het geef \to ik het de jongen geef
\remarks \noremarks
\end{member}

\begin{member}
\rulename Thetclplacement2
\ruletask puts a predrel {\em het} into {\em hetclrel},
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik ben wel het \to ik ben het wel
\remarks \noremarks
\end{member}

\begin{member}
\rulename Thetclplacement0
\ruletask   lets structures without an object or predrel 
{\em het} or an object {\em het} in an ADJP 
                          pass this transformation class
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik zwem \to ik zwem
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tindobjtocl1
\ruletask   
 puts personal pronouns (not {\em het}) 
                      into {\em firstclrel}.
                   It does so for reduced pronouns and for nonreduced pronouns



\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik geef wel hem het boek \to ik geef hem wel het boek
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tindobjtocl0
\ruletask   \item[Tindobjtocl0] lets indirect objects in VP or in ADJP in VP
that are not personal pronouns
                            or that are
                     unreduced personal pronouns pass this transformation class
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik zwem \to ik zwem
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tobjtocl1
\ruletask puts personal pronouns (not: {\em het}) into 
{\em firstclrel} or  {\em secondclrel}.
It does so for reduced pronouns and for nonreduced pronouns.
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik zie graag haar \to ik zie haar graag\\
ik geef hem graag haar \to ik geef hem haar graag
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tpredtocl1
\ruletask   \item[Tpredtocl1] puts predicative pronouns in {\em firstclrel} or 
{\em secondclrel}
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik ben wel 'm \to ik ben 'm wel
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tobjtocl0
\ruletask   lets objects or predrels in VP or in predrel ADJP in VP
that are not personal pronouns or that are
            unreduced personal pronouns pass this transformation class
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik zwem \to ik zwem
\remarks \noremarks
\end{member}


\begin{member}
\rulename Tadjhetclplacement1
\ruletask  puts {\em het} or {\em 't} from ADJP into 
{\em hetclrel} 
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik ben nu [het beu] \to ik ben het nu beu
\remarks  \noremarks
\end{member}

\begin{member}
\rulename Tadjindobjtocl1
\ruletask puts personal pronouns (not {\em het}) 
                      into {\em firstclrel}.
                   It does so for reduced pronouns and for nonreduced pronouns

\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik ben nu [hem veel schuldig] \to ik ben hem nu [veel schuldig]
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tadjobjtocl1
\ruletask puts personal pronouns (not: {\em het}) from ADJP into
                    {\em firstclrel} or {\em secondclrel}
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\semantics \nosemantics
\example ik ben nu [hem haar schuldig] \to
ik ben hem haar nu schuldig\\
ik ben nu [hem beu] \to ik ben hem nu beu
\remarks \noremarks
\end{member}

\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Tcliticspeed
\ruletask to speed up analysis. It requires
that either no cliticrel is found or that we are dealing with Verbraising.
\file dutch:tc\_cliticrules.mrule (mrules97.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_subjectshift}
\begin{classdescr}
\kind optional transformation class
\classtask to move the subject NP into {\em shiftrel} 
\end{classdescr}

\begin{members}
\begin{member}
\rulename TSubjectshift1
\ruletask To turn the subject into a shiftrel. By applying this rule
a main clause will result that is declarative.
The transformation must turn the subject into a shiftrel, whatever the content
(argument-NP, idiomchunk-NP, wheather-het, extraposition-het), in contrast
to the normal shiftrule. The category of this subject must be NP. 
It must have Nominative among its cases
\file dutch:tc\_subjectshift.mrule (mrules6.mrule)
\semantics \nosemantics
\example
subjrel/jan het boek koopt $\rightarrow$
shiftrel/jan het boek koopt\\
subjrel/het regent $\rightarrow$
shiftrel/het regent\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tsubjectshift2
\ruletask To turn er$_{x}$ into a shiftrel. Cf. Tsubjectshift1.
\file dutch:tc\_subjectshift.mrule (mrules6.mrule)
\semantics \nosemantics
\example
erposrel/er iemand aankwam$\rightarrow$\\
shiftrel/er iemand aankwam
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fpresubjshift
\ruletask to speed up analysis. It takes care of the fact that for
certain NPs it can be determined now already that they must be subject to 
tsubjectshift1.
\file dutch:tc\_speed.mrule (mrules94.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_gaandeletion}
\begin{classdescr}
\kind optional transformation class
\classtask to delete {\em gaan} when it is a complement of modal verbs
(analysis only)
\end{classdescr}

\begin{members}
\begin{member}
\rulename Tgaandeletion
\ruletask  to delete {\em gaan} when it is a complement of modal verbs
(analysis only). It deals with simple cases only, i.e. it cannot deal with
structures such as {\em hij heeft naar huis willen gaan} 
\file dutch:tc\_modalswitch.mrule (mrules13.mrule)
\semantics \nosemantics
\example
hij wil naar huis gaan \to hij wil naar huis.
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\problem
This rule class should be extended with rules dealing with more complicated 
cases and a filter should precede this class to prevent a `normal' analysis
(i.e. without application of Tgaandeletion) of the relevant constructions.
(this is necessary to maintain isomorphy!) 
\end{comments}

\end{mruleclass}
R0335_B.tex
\begin{mruleclass}{RC\_mooddetermination}
\begin{classdescr}
\kind obligatory rule class
\classtask to determine the mood and and the main clause or subordinate clause
status of a sentence.
\end{classdescr}

\begin{members}
\begin{member}
\rulename RMooddetermination1
\ruletask To make a finite indicative declarative main clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example
CLAUSE[shift/hij het boek koopt] $\rightarrow$\\
SENTENCE[ hij het boek koopt]
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmood2
\ruletask to make a finite indicative declarative subordinate clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example
CLAUSE [hij het boek koopt] \to SENTENCE[dat hij het boek koopt]
\remarks \noremarks
\end{member}

\begin{member}
\rulename RMood3
\ruletask to make a finite indicative wh-interrogative main clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example
CLAUSE[shift/wie boeken koopt] $\rightarrow$\\
SENTENCE[ wie boeken koopt]
\remarks \noremarks
\end{member}

\begin{member}
\rulename RMood4
\ruletask  to make a finite indicative yes-no-interrogative main clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example
CLAUSE[subjrel/hij boeken koopt] $\rightarrow$\\
SENTENCE[ hij boeken koopt]  (eventually: koopt hij boeken?)
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmood5
\ruletask  to make a finite indicative yes-no-interrogative subordinate clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example 
CLAUSE[subjrel/hij boeken koopt] \to SENTENCE[of hij boeken koopt]
\remarks \noremarks
\end{member}

\begin{member}
\rulename RMood6
\ruletask  to make a finite indicative wh-interrogative subordinate clause
\file dutch:rc\_mooddetermination.mrule (mrules5.mrule)
\semantics \nosemantics
\example
CLAUSE[shift/wie boeken koopt] $\rightarrow$\\
SENTENCE[ wie of boeken koopt]
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodfinrel
\ruletask to make a finite indicative relative subordinate clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
shiftrel/x1 hij zag \to shiftrel/x1 dat hij zag (* die hij zag *)
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodfinwhmod
\ruletask  to make a finite indicative whmod subordinate clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
shiftrel/x1 hij zag \to shiftrel/x1 dat hij zag \\
(eventually: (meer dan) dat hij zag )
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodopeninf
\ruletask to make an open infinite bare infinitival declarative subordinate 
clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
[x1 zwemmen] \to [x1 zwemmen] (cf. {\em  (ik wil) zwemmen})
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodclosedinf
\ruletask  to make an open infinite bare infinitival declarative subordinate 
clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
[het regenen] \to [het regenen] (cf. {\em (ik hoorde) het regenen})
\remarks \noremarks
\end{member}

\begin{member}
\rulename RMood7 
\ruletask to make a finite imperative singular imperative main clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
CLAUSE[subjrel/jij boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (eventually: koop boeken!)
\remarks  \noremarks
\end{member}

\begin{member}
\rulename RMood8 (imperative plural)
\ruletask To make a finite imperative plural imperative main clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
CLAUSE[subjrel/jullie boeken koop] $\rightarrow$\\
SENTENCE[ boeken koopt]  (uiteindelijk: koopt boeken!)
\remarks In my opinion the imperative form ending in {\em t} is completely
ungrammatical, although normative grammars prescribes it.
\end{member}

\begin{member}
\rulename Rmoodpoliteimp
\ruletask to make a finite imperative polite imperative main clause
\file dutch:rc\_mood2.mrule (mrules87.mrule)
\semantics \nosemantics
\example
CLAUSE[subjrel/u zwemt] \to SENTENCE[zwemt]
\remarks  In my opinion the imperative form ending in {\em t} is completely
ungrammatical, although normative grammars prescribes it.
\end{member}

\begin{member}
\rulename Rlatenmood
\ruletask to make a finite indicative latenmood (adhortative) main clause 
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
CLAUSE[ wij weggaan] \to SENTENCE[ laten wij weggaan]
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodprespart
\ruletask to make an open infinite present participle declarative subordinate 
clause
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
[x1 op straat loop] \to [x1 op straat lopende]
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodopenteinf
\ruletask   to make an open infinite {\em te}-infinitival declarative subordinate 
clause
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
[x1 ziek zijn ] \to [x1 ziek te zijn] ({\em  (Piet denkt) ziek te zijn}
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodopenomteinf
\ruletask   to make an open infinite {\em om te}-infinitival declarative
subordinate clause 
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
[x1 dit doen] \to [om x1 dit te doen] (cf. {\em  (Piet heeft geprobeerd) om dit 
te doen})  
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rclosedteinf
\ruletask   to make a closed infinite  {\em te}-infinitival declarative
subordinate clause 
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
[x1 ziek zijn] \to [x1 ziek te zijn] (cf. {\em  Hij (schijnt) ziek te zijn})
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rmoodpastpart
\ruletask  to make an open infinite past participle declarative subordinate 
clause
\file dutch:rc\_mood3.mrule (mrules88.mrule)
\semantics \nosemantics
\example
[x1 aan hem verkocht zijn] \to [x1 aan hem verkocht] 
(cf. {\em  (de) aan hem verkochte (boeken)})
\remarks \noremarks
\end{member}


\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}



\begin{mruleclass}{Rc\_conjsent}
\begin{classdescr}
\kind optional rule class
\classtask to form adverbial subordinate clauses
\end{classdescr}

There are five rules to form adverbial subordinate clauses:
\begin{description}
 \item[Rconjsent1] finite subordinate adverbial clauses introduced by a
                     conjunction: {\em toen hij wegging}
 \item[Rconjsent2] infinite subordinate adverbial clauses intorduced by a
                     conjunction: {\em alvorens te vertrekken}
 \item[Rconjsent3] finite subordinate adverbial clauses intorduced by a
                     preposition: {\em zonder dat hij wegging}
 \item[Rconjsent4] infinite subordinate adverbial clauses intorduced by a
                     preposition: {\em zonder weg te gaan}
 \item[Rconjsent5] finite conditional subordinate adverbial clauses not
                   introduced by a preposition or a conjunction: 
                      {\em Koopt hij dit boek, dan ...}

\end{description}

A rule forming special concessive structures containing the verb 
{\em mogen} and the adverb {\em dan} from the conjunction
{\em hoewel} and a finite subordonate clause might be added:\\
\mbox{}[dat hij ziek is ] + hoewel \to [hij dan ziek mag zijn]
\begin{members}

\begin{member}
\rulename Rconjsent1
\ruletask to form an adverbial clause from a subordinate finite clause
and an adverbial CONJUNCTION.
\file dutch:rc\_conjsent.mrule (mrules101.mrule)
\semantics \nosemantics
\example
dat hij wegging + toen \to toen hij wegging\\
dat het vriest + omdat \to omdat het vriest
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rconjsent2
\ruletask to form an adverbial clause from a subordinate infinite clause
and an adverbial CONJUNCTION.
\file dutch:rc\_conjsent.mrule (mrules101.mrule)
\semantics \nosemantics
\example
x1 te komen + alvorens \to alvorens x1 te komen
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rconjsent3
\ruletask to form an adverbial clause from a subordinate finite clause
and an PREP
\file dutch:rc\_conjsent.mrule (mrules101.mrule)
\semantics \nosemantics
\example
dat hij wegging + zonder \to zonder dat hij wegging
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rconjsent4
\ruletask to form an adverbial clause from a subordinate infinite clause
and an PREP
\file dutch:rc\_conjsent.mrule (mrules101.mrule)
\semantics \nosemantics
\example
x1 weg te gaan + zonder \to  zonder x1 weg te gaan
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rconjsent5
\ruletask to form a condional sentence from a finite subordinate clause
plus the conjunction `als'
\file dutch:rc\_conjsent.mrule (mrules101.mrule)
\semantics \nosemantics
\example
dat hij weggaat + als \to hij weggaat (ultimately: gaat hij weg,..)
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
The method adopted makes it possible to translate prepositions introducing
adverbial sentences into conjunctions introducing them. A disadvantage is that
we must repeat the rules that modify prepositional phases, cf.
{\em vlak voordat we weggingen} and {\em vlak voor ons vertrek} and
{\em drie dagen voordat we weggingen} and {drie dagen voor ons vertrek}.
This also shows that a conjunction such as {\em voordat} should actually be
analyzed as the preposition {\em voor} + {\em dat}, cf.
{\em * vlak/drie dagen terwijl wij weggingen}.
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_refdeletion.mrule}
\begin{classdescr}
\kind optional transformation class with filter
\classtask to delete abstract temporal reference  ADVPs
\end{classdescr}

\begin{members}

\begin{member}
\rulename trefdeletion
\ruletask Delete (or insert in analysis) abstract temporal reference 
adverbs in finite sentences.
\file dutch:tc\_tempemptydeletion.mrule (mrules77.mrule)
\semantics \nosemantics
\example \noexample
\remarks In mrules68.mrule a non valid version of this transformation 
existed.
\end{member}
\end{members}

\noindent
{\bf Filters} Associated Filters are:
\begin{description}
\rulename Frefdeletion
\ruletask Filter the existence of abstract temporal reference 
adverbs in finite sentences.
\file dutch:tc\_tempemptydeletion.mrule (mrules77.mrule)
\remarks \noremarks
\end{description}


\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Ttempadvrelpres
\ruletask It checks whether an adverb with class=reference and retro = false
is present in the structure.
\file dutch:tc\_speed.mrule (mrules94.mrule)
\remarks \noremarks
\end{description}


\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_retrodeletion}
\begin{classdescr}
\kind optional transformation with filter
\classtask to delete abstract temporal retrospective ADVPs
\end{classdescr}

\begin{members}

\begin{member}
\rulename tretrodeletion
\ruletask Delete (or insert in analysis) abstract temporal retrospective
adverb.
\file dutch:tc\_tempemptydeletion.mrule (mrules77.mrule)
\semantics \nosemantics
\example \noexample
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Filters} Associated Filters are:
\begin{description}
\rulename Fretrodeletion
\ruletask Filter the existence of an abstract temporal retrospective
adverb.
\file dutch:tc\_tempemptydeletion.mrule (mrules77.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fpreretrodeletion
\ruletask to speed up analysis
\file dutch:tc\_tempemptydeletion.mrule (mrules77.mrule)
\remarks \noremarks
\end{description}


\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_deixisretroadaptation}
\begin{classdescr}
\kind optional transformation class with filter
\classtask to set attributes 
that got a value in special deixis rules to a more or less `default value' for 
the S-parser so that it will not have to deal with these special deixis 
configurations. 
\end{classdescr}

\begin{members}
\begin{member}
\rulename Tdeixisretroadaptation1
\ruletask This rule is for efficiency of the S-parser. It sets attributes 
that got a value in special deixis rules to a more or less "default value" for 
the S-parser so that it will not have to deal with these special deixis 
configurations. These special rules are: Rfinpastdeixisspec, 
Rinfinpastdeixisspec, Rfinpastsuperdeixisspec and Rinfinpastsuperdeixisspec.
The attribute retro is made true in generation 
and in analysis it is set false as one of the options.\\
This rule is meant for a clause that is marked for perfective aspect.\\
The auxiliary verb {\em hebben} or {\em zijn} must be present.
\file dutch:tc\_deixisretroadaptation.mrule (mrules75.mrule)
\semantics \nosemantics
\example
Hij beweert, dat hij gisteren gewerkt heeft\\
Hij beweerde dat hij om 3 uur gewerkt had\\
Hij beweert het gisteren geprobeerd te hebben\\
Hij beweert het gisteren te hebben geprobeerd\\
Hij beweert dat hij gisteren heeft gewerkt\\
Hij beweerde dat hij om 3 uur had gewerkt
\remarks This rule is optional, but must be applied if it can be applied.

\end{member}
\end{members}

\noindent
{\bf Filters} Associated Filters are:
\begin{description}
\rulename Fdeixisretroadaptation1
\ruletask Filter after the rule Tdeixisretroadaptation that sets attributes 
that got a value in special deixis rules to a more or less `default value' for 
the S-parser so that it will not have to deal with these special deixis 
configurations. \file dutch:tc\_deixisretroadaptation.mrule (mrules75.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fpredeixisretro
\ruletask to speed up analysis
\file dutch:tc\_deixisretroadaptation.mrule (mrules75.mrule)
\remarks The rule is not in the control expression. 
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_retroneutralization}
\begin{classdescr}
\kind optional transformation class with filter
\classtask to neutralize the value of the attribute retro
\end{classdescr}

\begin{members}
\begin{member}
\rulename Tretroneutralization
\ruletask The attribute retro is made false in generation if it was true 
and in analysis it is made true as one of the options.\\
\file dutch:tc\_finaltemptransf.mrule (mrules66.mrule)
\semantics \nosemantics
\example \noexample
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Filters} Associated Filters are:

\begin{description}
\rulename Fretroneutralization
\ruletask Filter the situation that the attribute retro was not made false
in generation if it was true 
and in analysis it was true already.\\
\file dutch:tc\_finaltemptransf.mrule (mrules66.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed rules are:
\begin{description}
\rulename FPreretroneutralization
\ruletask Filter to make sure that in analysis the attribute retro has 
been made true in the right cases.\\
\file dutch:tc\_finaltemptransf.mrule (mrules66.mrule)
\remarks \noremarks
\end{description}


\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}




\begin{mruleclass}{TC\_aspectneutralization}
\begin{classdescr}
\kind obligatory transformation class 
\classtask to neutralize the value of the attribute aspect
\end{classdescr}

\begin{members}
\begin{member}
\rulename Taspectneutralization
\ruletask This rule is for efficiency of the surface parser. In analysis 
it creates the three paths for imperfective, habitual
 and perfective aspect that are needed 
because of distinctions in other languages. In generation it sets the value for 
aspect to omegaaspect after application of the time rules (symmetry reasons).
\file dutch:tc\_finaltemptransf.mrule (mrules66.mrule)
\semantics \nosemantics
\example \noexample
\remarks \noremarks
\end{member}


\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}




\begin{mruleclass}{TC\_verbsecond}
\begin{classdescr}
\kind obligatory transformation class
\classtask to account for verb-second phenomena
\end{classdescr}

\begin{members}
\begin{member}
\rulename TV21
\ruletask To prepose bare finite verbs
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
shift/hij een boek koopt $\rightarrow$\\
hij koopt een boek\\
subjrel/hij een boek koopt$\rightarrow$\\
koopt hij een boek\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename TV22
\ruletask to prepose finite verbs that have a particle
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
Hij het meisje opbelt $\rightarrow$\\
hij belt het meisje op 
\remarks \noremarks
\end{member}

\begin{member}
\rulename TV23
\ruletask to prepose a verb with relation {\em auxrel} or {\em progauxrel}
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
hij het boek aan het kopen is $\rightarrow$\\
hij is het boek aan het kopen\\
hij het boek gekocht heeft $\rightarrow$\\
hij heeft het boek gekocht\\
Het boek verkocht werd/is  $\rightarrow$\\
Het boek werd/is verkocht 
Hij het boek aan het verkopen geweest is
Hij is het boek aan het verkopen geweest 
\remarks \noremarks
\end{member}

\begin{member}
\rulename TnoV2
\ruletask to let initivival sentences and finite sentences containing
 a conjrel pass this transformationclass
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
[de boeken te kopen]
[dat hij wegging/danste]
\remarks \noremarks
\end{member}

\begin{member}
\rulename TV24
\ruletask to prepose the finite head verb from a verb cluster
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
hij de boeken [ wil lezen] $\rightarrow$\\
hij wil de boeken lezen\\
hij de boeken [probeert te lezen] $\rightarrow$\\
hij probeert de boeken te lezen\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename TV25
\ruletask to prepose the auxiliary verb from a verb cluster if the auxiliary
is followed by an infinitival verb cluster
\file dutch:tc\_verbsecond.mrule (mrules7.mrule)
\semantics \nosemantics
\example
hij de boeken [ heeft willen lezen] $\rightarrow$\\
hij heeft de boeken willen lezen\\
hij de boeken [is vergeten te lezen] $\rightarrow$\\
hij is de boeken vergeten te lezen\\
\remarks \noremarks
\end{member}

\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_modalswitch}
\begin{classdescr}
\kind optional transformation (analysis only)
\classtask to take care of the order head verb - finite modal verb which is possible 
in addition to the more normal order finite modal verb - head verb
\end{classdescr}

\begin{members}
\begin{member}
\rulename TModalswitch1
\ruletask To switch a finite modal verb and an infinitive inside a verbal
cluster.
\file dutch:tc\_modalswitch.mrule (mrules13.mrule)
\semantics \nosemantics
\example
..dat hij dit [kon doen] $\rightarrow$\\
..dat hij dit [doen kon]\\
..dat hij deze boeken [wou lezen] $\rightarrow$\\
..dat hij deze boeken [lezen wou]
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_erqer}
\begin{classdescr}
\kind obligatory transformation class
\classtask it makes {\em erqrel/er} and {\em erposrel/er} melt together into 
{\em erposrel/er}
if they are adjacent, and it turns certain instances of {\em erqrel/er} 
into {\em erposrel/er} to avoid too many ambiguities in the surface parser.
\end{classdescr}

\begin{members}
\begin{member}
\rulename Terqer1
\ruletask  to let adjacent {\em erqrel/er erposrel/er} melt together into
{\em erposrel/er}
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
dat er er twee zijn $\rightarrow$\\
dat    er twee zijn\\
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terqer2
\ruletask lets structures containing only {\em erposrel} (but not {\em erqrel})
pass this transformation class
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
Hij kijkt er vandaag naar \to
Hij kijkt er vandaag naar
Hij zwemt er \to
Hij zwemt er
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terqer3
\ruletask turns {\em erqrel/er} into {\em erposrel/er} provided there is 
some headless count NP in the appropriate position
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
Hij kocht erqrel/er twee \to
Hij kocht erposrel/er twee
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terqer4
\ruletask lets structures containing {\em erqrel/er} and {\em er} in shiftrel
pass this transformation class
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
shift/Er zijn erqrel/er twee \to
shift/Er zijn erqrel/er twee
\remarks \noremarks
\end{member}

\begin{member}
\rulename Terqer0
\ruletask to let structure not containing {\em erqrel} or {\em erposrel} pass
this transformation class
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
Hij zwemt \to
Hij zwemt
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_conjdel}
\begin{classdescr}
\kind obligatory transformation class
\classtask to delete conjunctions that must be deleted
\end{classdescr}

There are three rules in this class:
\begin{description}
  \item[Tconjdel0] lets any structure pass this transformation class
except for finite subordinate wh-interrogatives and finite relatives
  \item[Tconjdel1] deletes {\em of} in finite subordinate wh interrogatives
  \item[Tconjdel2] deletes  {\em dat} in finite relative clauses.
\end{description}

These conjunctions were still present to prevent an application of verb second
in such clauses.

Maybe Tconjdel2 must be extended in such a way that
it applies to finite whmod clauses as well.
\begin{members}

\begin{member}
\rulename Tconjdel0
\ruletask  to let any structure pass this transformation class
except for finite subordinate wh-interrogatives and finite relatives
\file dutch:tc\_conjdeletion.mrule (mrules92.mrule)
\semantics \nosemantics
\example 
dat hij zwemt \to dat hij zwemt
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tconjdel1
\ruletask to delete {\em of} in finite subordinate wh interrogatives
\file dutch:tc\_conjdeletion.mrule (mrules92.mrule)
\semantics \nosemantics
\example
wie of hij gezien heeft \to wie hij gezien heeft
\remarks In analysis this rule allows the presence of the conjunction {\em of}.
\end{member}

\begin{member}
\rulename Tconjdel2
\ruletask to delete  {\em dat} in finite relative clauses.
\file dutch:tc\_conjdeletion.mrule (mrules92.mrule)
\semantics \nosemantics
\example
[ shiftrel/x1 dat hij gezien heeft] \to [shiftrel/x1 hij gezien heeft]
(ultimately: die/dat hij gezien heeft)
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_SorPPoutofNP}
\begin{classdescr}
\kind optional transformation (analysis only)
\classtask to take care of PREPPs and SENTENCES that have been moved out of NPs
\end{classdescr}

\begin{members}
\begin{member}
\rulename TSuitNP1
\ruletask to take care of extraposition of relative clauses out of NP's
(in analysis only). 
\file dutch:tc\_sorppoutofnp.mrule (mrules115.mrule)
\semantics \nosemantics
\example
Hij heeft [een man die ziek is] gezien $\rightarrow$\\
Hij heeft [een man] gezien die ziek is
\remarks \noremarks
\end{member}


\end{members}

\nofilters

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fnorelsentrel
\ruletask to speed up analysis. After application of TSuitNP (analytically
speaking) no relsentrels should exist anymore.
\file dutch:tc\_sorppoutofnp.mrule (mrules115.mrule)
\remarks \noremarks
\end{description}


\noplannedrules

\norulesnotince

\begin{comments}
\problem
This transformation class clearly must be extended with more rules.
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_erPglue}
\begin{classdescr}
\kind optional transformation class with filter
\classtask to take care of the proper orthography of Rpronouns such as
{\em er, daar, hier} in combination with  a preposition.
\end{classdescr}


\begin{members}

\begin{member}
\rulename TerPglue
\ruletask The transformation TerPglue puts a GLUE immediately to the right of
erposrel containing er, daar, hier, waar with kindefs = [Pk]
if it is followed immediately by a stranded prepositional
phrase.
In analysis absence of the GLUE is always allowed
\file dutch:tc\_errules.mrule (mrules86.mrule)
\semantics \nosemantics
\example
hij kijkt er naar \to hij kijkt ernaar
wordt er naar gekeken \to wordt er naar gekeken
\remarks Notice that the two cases mentioned in the examples are correctly
distinguished. In analysis {\em hij kijkt er naar} is accepted as well.
\end{member}
\end{members}

\noindent
{\bf Filters} Associated filters are:
\begin{description}
\rulename FErPglue
\ruletask The filter guarantees application of the T, only in generation.
In analysis absence of the GLUE is always allowed
\file dutch:tc\_errules.mrule (mrules86.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename FpreErPglue
\ruletask The prefilter filters all structures containing a GLUE to the right
of a erposrel/... This speeds up analysis.
\file dutch:tc\_errules.mrule (mrules86.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_erxdeletion}
\begin{classdescr}
\kind optional transformation (analysis only)
\classtask to delete expletive {\em er} if possible
\end{classdescr}

\begin{members}
\begin{member}
\rulename Terxdeletion1
\ruletask  to delete expletive {\em er} if possible
\file dutch:tc\_errules3.mrule (mrules85.mrule)
\semantics \nosemantics
\example
In de tuin wordt er gedanst \to in de tuin wordt gedanst\\
(hij zei) dat er gezegd werd dat dat niet waar was \to\\
(hij zei) dat gezegd werd dat dat niet waar was
\remarks 
\problem
It is not clear to me under which circumstances expletive {\em er}
can be deleted. The rule performs a deletion in the following circumstances:

\begin{itemize}
  \item if there is a topicalized locative PREPP or ADVP
  \item in subordinate clauses if there is an extraposed sentence
\end{itemize}

The precise circumstances in which expletive {\em er} can be deleted
should be investigated.

\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


\begin{mruleclass}{TC\_vpdeletion}
\begin{classdescr}
\kind obligatory transformation class
\classtask to delete VERBP when it does not dominate a head
\end{classdescr}

\begin{members}
\begin{member}
\rulename Tvpdel1
\ruletask To delete VP when it does not dominate a head/...
This transformation became necessary after having written the surface parser.
\file dutch:tc\_vpdeletion.mrule (mrules4.mrule)
\semantics \nosemantics
\example
hij kocht VP[het boek] \to hij kocht het boek
\remarks \noremarks
\end{member}

\begin{member}
\rulename Tvpdel0
\ruletask to let structures containing a VERBP dominating a head pass 
this transformation class
\file dutch:tc\_vpdeletion.mrule (mrules4.mrule)
\semantics \nosemantics
\example
hij heeft VP[een boek gekocht] \to hij heeft VP[een boek gekocht]
\remarks \noremarks
\end{member}
\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{RC\_Punctuation}
\begin{classdescr}
\kind obligatory rule class
\classtask to account for the proper punctuation of main clauses
\end{classdescr}

There are 4 punctuationrules:
\begin{description}
  \item[Rpunc0] for subordinate clauses; it makes subordinate clauses pass
                this rule class
  \item[Rpunc1] places a `?' after main clause questions
  \item[Rpunc2] places a `!' after imperatives and latenmood-sentences
  \item[Rpunc3] places a `.' after all other main clauses
\end{description}
In analysis the absence of punctuation marks is allowed.

\begin{members}
\begin{member}
\rulename Rpunc0
\ruletask for subordinate clauses; it makes subordinate clauses pass
                this rule class
\file dutch:rc\_punctuation.mrule (mrules96.mrule)
\semantics \nosemantics
\example
dat hij ziek is \to dat hij ziek is
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rpunc1
\ruletask  places a `?' after main clause questions
\file dutch:rc\_punctuation.mrule (mrules96.mrule)
\semantics \nosemantics
\example wat doet hij \to wat doet hij?
\remarks noremarks
\end{member}

\begin{member}
\rulename Rpunc2
\ruletask   places a `!' after imperatives and latenmood-sentences
\file dutch:rc\_punctuation.mrule (mrules96.mrule)
\semantics \nosemantics
\example  koop de boeken \to koop de boeken!\\
Laten we weggaan \to Laten we weggaan!
\remarks \noremarks
\end{member}

\begin{member}
\rulename Rpunc3
\ruletask   places a `.' after all other sentences
\file dutch:rc\_punctuation.mrule (mrules96.mrule)
\semantics \nosemantics
\example hij zwemt \to hij zwemt.
\remarks \noremarks
\end{member}

\end{members}

\nofilters

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_RinPPglue}
\begin{classdescr}
\kind optional transformation plus filter
\classtask to deal with the proper orthography of Rpronouns that are
inside PREPPs
\end{classdescr}

\begin{members}
\begin{member}
\rulename TRinPPglue
\ruletask to deal with the proper orthography of Rpronouns that are
inside PREPPs
\file dutch:tc\_puncandglue.mrule (mrules113.mrule)
\semantics \nosemantics
\example
[waar naar] hij keek \to [waarnaar] hij keek
\remarks \noremarks
\end{member}

\end{members}

\noindent
{\bf Filters} Associated filters are:
\begin{description}
\rulename FRinppglue
\ruletask to guarantee application of TRinppglue
\file dutch:tc\_puncandglue.mrule (mrules113.mrule)
\remarks \noremarks
\end{description}

\nospeedrules

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}

\begin{mruleclass}{TC\_Popldlcomma}
\begin{classdescr}
\kind optional transformation class with filter
\classtask to deal adequately with commas of subordinatye clauses
\end{classdescr}

\begin{members}
\begin{member}
\rulename Tpopldlcomma
\ruletask It `pops' the comma from  a subordinate clause into the 
superordinate clause
\file dutch:tc\_puncandglue.mrule (mrules113.mrule)
\semantics \nosemantics
\example
[hoewel hij ziek is,] is hij toch gekomen \to\\
\mbox{}[hoewel hij ziek is], is hij toch gekomen
\remarks This transformation has been made to make it possible to `hide' the
comma inside the subordinate clause. Otherwise all rules must take care of the 
presence of such commas.
\end{member}


\end{members}

\noindent
{\bf Filters} Associated Filters are :
\begin{description}
\rulename Fpopldlkomma
\ruletask to guarantee application of Tpopldlkomma
\file dutch:tc\_puncandglue.mrule (mrules113.mrule)
\remarks \noremarks
\end{description}

\noindent
{\bf Speed Rules} Associated Speed Rules are:
\begin{description}
\rulename Fprepopldl
\ruletask to speed up analysis
\file dutch:tc\_puncandglue.mrule (mrules113.mrule)
\remarks \noremarks
\end{description}

\noplannedrules

\norulesnotince

\begin{comments}
\end{comments}

\end{mruleclass}


