{*DUTCH}
 PROCEDURE commrules9_init;EXTERNAL;
{*
SUBGRAMMAR
XPPROPTOCLAUSE
FUNCTION XPPROPTOCLAUSE:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROPENADJPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLOSEDADJPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROPENNPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLOSEDNPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RLOCOPENPREPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RLCPPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDIROPENPREPPROPSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDIRCLOSEDPREPPPROP
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      FUNCTION CONCGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROOPPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH9:=result;
END;
                                                      FUNCTION CONCGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROCPPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH10:=result;
END;
                                                      FUNCTION CONCGRAPH11:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCECOMPL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH11:=result;
END;
                                                      FUNCTION CONCGRAPH12:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCEOMTECOMPL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH12:=result;
END;
                                                      FUNCTION CONCGRAPH13:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROPENADJPPROPPREPOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH13:=result;
END;
                                                      FUNCTION CONCGRAPH14:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLOSEDADJPPROPPREPOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH14:=result;
END;
                                                      FUNCTION CONCGRAPH15:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROPENNPPROPPREPOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH15:=result;
END;
                                                      FUNCTION CONCGRAPH16:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLOSEDNPPROPPREPOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH16:=result;
END;
                                                      FUNCTION CONCGRAPH17:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCEPREPOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH17:=result;
END;
                                                      FUNCTION CONCGRAPH18:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCESUBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH18:=result;
END;
                                                      FUNCTION CONCGRAPH19:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCEEXTRAPOS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH19:=result;
END;
                                                      FUNCTION CONCGRAPH20:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSENTENCELDISLOC
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH20:=result;
END;
                                                      FUNCTION CONCGRAPH21:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RPROPSUBST13
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH21:=result;
END;
                                                      FUNCTION CONCGRAPH22:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RPROPSUBST14
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH22:=result;
END;
                                                      FUNCTION CONCGRAPH23:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: ROADVPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH23:=result;
END;
                                                      FUNCTION CONCGRAPH24:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCADVPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH24:=result;
END;
                                                      FUNCTION CONCGRAPH25:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RTEMPADVSENTSUBSTITUTION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH25:=result;
END;
                                                      FUNCTION CONCGRAPH26:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCONJSENTSUBST1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH26:=result;
END;
                                                      FUNCTION CONCGRAPH27:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCONJSENTSUBST2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH27:=result;
END;
                                                      FUNCTION CONCGRAPH28:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSADJSENTSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH28:=result;
END;
                                                      FUNCTION CONCGRAPH29:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCONJSENTSUBST3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH29:=result;
END;
                                                      FUNCTION CONCGRAPH30:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCONJSENTSUBST4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH30:=result;
END;
                                                      FUNCTION CONCGRAPH31:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCVPPSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH31:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
AppendCtrlExpr(CONCGRAPH9,result);
AppendCtrlExpr(CONCGRAPH10,result);
AppendCtrlExpr(CONCGRAPH11,result);
AppendCtrlExpr(CONCGRAPH12,result);
AppendCtrlExpr(CONCGRAPH13,result);
AppendCtrlExpr(CONCGRAPH14,result);
AppendCtrlExpr(CONCGRAPH15,result);
AppendCtrlExpr(CONCGRAPH16,result);
AppendCtrlExpr(CONCGRAPH17,result);
AppendCtrlExpr(CONCGRAPH18,result);
AppendCtrlExpr(CONCGRAPH19,result);
AppendCtrlExpr(CONCGRAPH20,result);
AppendCtrlExpr(CONCGRAPH21,result);
AppendCtrlExpr(CONCGRAPH22,result);
AppendCtrlExpr(CONCGRAPH23,result);
AppendCtrlExpr(CONCGRAPH24,result);
AppendCtrlExpr(CONCGRAPH25,result);
AppendCtrlExpr(CONCGRAPH26,result);
AppendCtrlExpr(CONCGRAPH27,result);
AppendCtrlExpr(CONCGRAPH28,result);
AppendCtrlExpr(CONCGRAPH29,result);
AppendCtrlExpr(CONCGRAPH30,result);
AppendCtrlExpr(CONCGRAPH31,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH1:=result;
END;
                                                      FUNCTION ELEMGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TMODALEXP1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TMODALEXP2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TMODALEXP0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TMODALEXP3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH2:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION6
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RCLAUSEFORMATION7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH3:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOAUXORPASS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH4:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RASPECTIMPERFECTIVE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RASPECTPERFECTIVE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RASPECTHABITUAL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH5:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RRETROIMPERFECTIVE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RRETROPERFECTIVE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH1:=GRAPH
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH6:=result;
END;
                                                      FUNCTION ELEMGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FVRCOMPL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH7:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TFINITE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TINFINITE
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH8:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPRESENTDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTDEIXISSPEC
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPRESENTDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTDEIXISSPEC
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPRESENTSUPERDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXIS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXIS2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      FUNCTION CONCGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXISSPEC
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH9:=result;
END;
                                                      FUNCTION CONCGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPRESENTSUPERDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH10:=result;
END;
                                                      FUNCTION CONCGRAPH11:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTSUPERDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH11:=result;
END;
                                                      FUNCTION CONCGRAPH12:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTSUPERDEIXISSPEC
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH12:=result;
END;
                                                      FUNCTION CONCGRAPH13:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RIMPDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH13:=result;
END;
                                                      FUNCTION CONCGRAPH14:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINIRRMODALDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH14:=result;
END;
                                                      FUNCTION CONCGRAPH15:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINIRRMODALSUPERDEIXIS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH15:=result;
END;
                                                      FUNCTION CONCGRAPH16:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPRESENTDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH16:=result;
END;
                                                      FUNCTION CONCGRAPH17:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH17:=result;
END;
                                                      FUNCTION CONCGRAPH18:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTDEIXISSPECA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH18:=result;
END;
                                                      FUNCTION CONCGRAPH19:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPRESENTDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH19:=result;
END;
                                                      FUNCTION CONCGRAPH20:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTDEIXISSPECA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH20:=result;
END;
                                                      FUNCTION CONCGRAPH21:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPRESENTSUPERDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH21:=result;
END;
                                                      FUNCTION CONCGRAPH22:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXIS1A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH22:=result;
END;
                                                      FUNCTION CONCGRAPH23:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXIS2A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH23:=result;
END;
                                                      FUNCTION CONCGRAPH24:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPRESENTSUPERDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH24:=result;
END;
                                                      FUNCTION CONCGRAPH25:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTSUPERDEIXISA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH25:=result;
END;
                                                      FUNCTION CONCGRAPH26:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RFINPASTSUPERDEIXISSPECA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH26:=result;
END;
                                                      FUNCTION CONCGRAPH27:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RINFINPASTSUPERDEIXISSPECA
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH27:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
AppendCtrlExpr(CONCGRAPH9,result);
AppendCtrlExpr(CONCGRAPH10,result);
AppendCtrlExpr(CONCGRAPH11,result);
AppendCtrlExpr(CONCGRAPH12,result);
AppendCtrlExpr(CONCGRAPH13,result);
AppendCtrlExpr(CONCGRAPH14,result);
AppendCtrlExpr(CONCGRAPH15,result);
AppendCtrlExpr(CONCGRAPH16,result);
AppendCtrlExpr(CONCGRAPH17,result);
AppendCtrlExpr(CONCGRAPH18,result);
AppendCtrlExpr(CONCGRAPH19,result);
AppendCtrlExpr(CONCGRAPH20,result);
AppendCtrlExpr(CONCGRAPH21,result);
AppendCtrlExpr(CONCGRAPH22,result);
AppendCtrlExpr(CONCGRAPH23,result);
AppendCtrlExpr(CONCGRAPH24,result);
AppendCtrlExpr(CONCGRAPH25,result);
AppendCtrlExpr(CONCGRAPH26,result);
AppendCtrlExpr(CONCGRAPH27,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH9:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPASSIVEGEWORDENDELETION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH1:=GRAPH
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH10:=result;
END;
                                                      FUNCTION ELEMGRAPH11:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPASSIVEGEWORDENDELETION
ELEMGRAPH11:=result;
END;
                                                      FUNCTION ELEMGRAPH12:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOSUPERDEIXISADAPTATION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TIDSUPERDEIXISADAPTATION
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION6
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH12:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH13:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH13:=result;
END;
                                                      FUNCTION ELEMGRAPH14:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSUPERDEIXISADAPTATION7
ELEMGRAPH14:=result;
END;
                                                      FUNCTION ELEMGRAPH15:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FTEMPINDEP1
ELEMGRAPH15:=result;
END;
                                                      FUNCTION ELEMGRAPH16:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION8
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH16:=result;
END;
                                                      FUNCTION ELEMGRAPH17:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSUPERDEIXISADAPTATION8
ELEMGRAPH17:=result;
END;
                                                      FUNCTION ELEMGRAPH18:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FTEMPINDEP2
ELEMGRAPH18:=result;
END;
                                                      FUNCTION ELEMGRAPH19:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION9
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH19:=result;
END;
                                                      FUNCTION ELEMGRAPH20:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSUPERDEIXISADAPTATION9
ELEMGRAPH20:=result;
END;
                                                      FUNCTION ELEMGRAPH21:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUPERDEIXISADAPTATION10
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH21:=result;
END;
                                                      FUNCTION ELEMGRAPH22:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSUPERDEIXISADAPTATION10
ELEMGRAPH22:=result;
END;
                                                      FUNCTION ELEMGRAPH23:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSADJPRECOMPLEXTRAPOS
ELEMGRAPH23:=result;
END;
                                                      FUNCTION ELEMGRAPH24:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJCOMPLEXTRAPOS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH24:=result;
END;
                                                      FUNCTION ELEMGRAPH25:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSADJPOSTCOMPLEXTRAPOS
ELEMGRAPH25:=result;
END;
                                                      FUNCTION ELEMGRAPH26:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJMEERTOER
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJMEERNOTTOER
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJNOMEERNOMEEST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJMEESTTOST2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJMEESTNOTTOST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TMEERTOERDEFAULT
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH26:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH27:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: SENTENCEOK0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: EXTRAPOSITION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: EXTRAPOSITION2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: VERBRAISING1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: VERBRAISING2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TVERBRAISING3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJEXTRAPOS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJEXTRAPOS2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH27:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH28:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TVPPRUNING1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TVPPRUNING0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH28:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH29:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREAUX
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH29:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH30:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: THATOA1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH30:=result;
END;
                                                      FUNCTION ELEMGRAPH31:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FHATOA1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH31:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH32:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: THTOA2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: THTOA3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH32:=result;
END;
                                                      FUNCTION ELEMGRAPH33:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPTOA1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH33:=result;
END;
                                                      FUNCTION ELEMGRAPH34:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCONTROL0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL1A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL1B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL2A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL2B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL3A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      FUNCTION CONCGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL3B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH9:=result;
END;
                                                      FUNCTION CONCGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH10:=result;
END;
                                                      FUNCTION CONCGRAPH11:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROLID
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH11:=result;
END;
                                                      FUNCTION CONCGRAPH12:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL4A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH12:=result;
END;
                                                      FUNCTION CONCGRAPH13:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL4B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH13:=result;
END;
                                                      FUNCTION CONCGRAPH14:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH14:=result;
END;
                                                      FUNCTION CONCGRAPH15:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL4ID
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH15:=result;
END;
                                                      FUNCTION CONCGRAPH16:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL5A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH16:=result;
END;
                                                      FUNCTION CONCGRAPH17:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL5B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH17:=result;
END;
                                                      FUNCTION CONCGRAPH18:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH18:=result;
END;
                                                      FUNCTION CONCGRAPH19:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL5A1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH19:=result;
END;
                                                      FUNCTION CONCGRAPH20:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL5B1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH20:=result;
END;
                                                      FUNCTION CONCGRAPH21:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL51
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH21:=result;
END;
                                                      FUNCTION CONCGRAPH22:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL6A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH22:=result;
END;
                                                      FUNCTION CONCGRAPH23:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL6B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH23:=result;
END;
                                                      FUNCTION CONCGRAPH24:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL7A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH24:=result;
END;
                                                      FUNCTION CONCGRAPH25:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBLCONTROL7B
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH25:=result;
END;
                                                      FUNCTION CONCGRAPH26:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH26:=result;
END;
                                                      FUNCTION CONCGRAPH27:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOCONTROL8
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH27:=result;
END;
                                                      FUNCTION CONCGRAPH28:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH28:=result;
END;
                                                      FUNCTION CONCGRAPH29:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH29:=result;
END;
                                                      FUNCTION CONCGRAPH30:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH30:=result;
END;
                                                      FUNCTION CONCGRAPH31:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH31:=result;
END;
                                                      FUNCTION CONCGRAPH32:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC8
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH32:=result;
END;
                                                      FUNCTION CONCGRAPH33:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOC9
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH33:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
AppendCtrlExpr(CONCGRAPH9,result);
AppendCtrlExpr(CONCGRAPH10,result);
AppendCtrlExpr(CONCGRAPH11,result);
AppendCtrlExpr(CONCGRAPH12,result);
AppendCtrlExpr(CONCGRAPH13,result);
AppendCtrlExpr(CONCGRAPH14,result);
AppendCtrlExpr(CONCGRAPH15,result);
AppendCtrlExpr(CONCGRAPH16,result);
AppendCtrlExpr(CONCGRAPH17,result);
AppendCtrlExpr(CONCGRAPH18,result);
AppendCtrlExpr(CONCGRAPH19,result);
AppendCtrlExpr(CONCGRAPH20,result);
AppendCtrlExpr(CONCGRAPH21,result);
AppendCtrlExpr(CONCGRAPH22,result);
AppendCtrlExpr(CONCGRAPH23,result);
AppendCtrlExpr(CONCGRAPH24,result);
AppendCtrlExpr(CONCGRAPH25,result);
AppendCtrlExpr(CONCGRAPH26,result);
AppendCtrlExpr(CONCGRAPH27,result);
AppendCtrlExpr(CONCGRAPH28,result);
AppendCtrlExpr(CONCGRAPH29,result);
AppendCtrlExpr(CONCGRAPH30,result);
AppendCtrlExpr(CONCGRAPH31,result);
AppendCtrlExpr(CONCGRAPH32,result);
AppendCtrlExpr(CONCGRAPH33,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH34:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH35:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TFINCONTROL1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TFINCONTROL0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH35:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH36:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPOSTPREPOK0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPOSTPREPOK1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH36:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH37:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOVPADVS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH37:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH38:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RVPADV
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RAGVPADV1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RAGVPADV2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RAGVPADV3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH38:=result;
END;
                                                      FUNCTION ELEMGRAPH39:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOPASSORBYOBJ
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH39:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH40:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMPTYSUBSTITUTION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMPTYSUBSTITUTION2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMPTYSUBSTITUTION3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMPTYSUBSTITUTION4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMPTYSUBSTITUTION5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RPREPEMPTYSUBST1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RDIREMPTYSUBST1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RZEEMPTYSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      FUNCTION CONCGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RIDEMPTYSUBSTITUTION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH9:=result;
END;
                                                      FUNCTION CONCGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RSADJEMPTYSUBST
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH10:=result;
END;
                                                      FUNCTION CONCGRAPH11:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RPREPEMPTYSUBST2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH11:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
AppendCtrlExpr(CONCGRAPH9,result);
AppendCtrlExpr(CONCGRAPH10,result);
AppendCtrlExpr(CONCGRAPH11,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH40:=result;
END;
                                                      FUNCTION ELEMGRAPH41:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREPROSTATUS
ELEMGRAPH41:=result;
END;
                                                      FUNCTION ELEMGRAPH42:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPROSTATUS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH42:=result;
END;
                                                      FUNCTION ELEMGRAPH43:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPOSTSUBJFORMATION1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPOSTSUBJFORMATION2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH43:=result;
END;
                                                      FUNCTION ELEMGRAPH44:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPOSTSUBJFORMATION1
ELEMGRAPH44:=result;
END;
                                                      FUNCTION ELEMGRAPH45:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK6
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TOBJECTOK7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH45:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH46:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREADVCONTROL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH46:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH47:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TADVCONTROL1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TADVCONTROL2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH47:=result;
END;
                                                      FUNCTION ELEMGRAPH48:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FADVCONTROL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH48:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH49:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: SVA0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: SVA1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH49:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH50:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRECASEASSIGNMENT1
ELEMGRAPH50:=result;
END;
                                                      FUNCTION ELEMGRAPH51:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCASEASSIGNMENT1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH51:=result;
END;
                                                      FUNCTION ELEMGRAPH52:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPOSTCASEASSIGNMENT1
ELEMGRAPH52:=result;
END;
                                                      FUNCTION ELEMGRAPH53:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRECA1A
ELEMGRAPH53:=result;
END;
                                                      FUNCTION ELEMGRAPH54:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCASEASSIGNMENT1A
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH54:=result;
END;
                                                      FUNCTION ELEMGRAPH55:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRECASEASSIGNMENT2
ELEMGRAPH55:=result;
END;
                                                      FUNCTION ELEMGRAPH56:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCASEASSIGNMENT2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH56:=result;
END;
                                                      FUNCTION ELEMGRAPH57:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRECASEASSIGNMENT3
ELEMGRAPH57:=result;
END;
                                                      FUNCTION ELEMGRAPH58:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCASEASSIGNMENT3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH58:=result;
END;
                                                      FUNCTION ELEMGRAPH59:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPOSTCASEASSIGNMENT3
ELEMGRAPH59:=result;
END;
                                                      FUNCTION ELEMGRAPH60:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRECASEASSIGNMENT4
ELEMGRAPH60:=result;
END;
                                                      FUNCTION ELEMGRAPH61:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TCASEASSIGNMENT4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH61:=result;
END;
                                                      FUNCTION ELEMGRAPH62:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPOSTCASEASSIGNMENT4
ELEMGRAPH62:=result;
END;
                                                      FUNCTION ELEMGRAPH63:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRESADJCA1
ELEMGRAPH63:=result;
END;
                                                      FUNCTION ELEMGRAPH64:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJCA1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH64:=result;
END;
                                                      FUNCTION ELEMGRAPH65:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSADJCA1
ELEMGRAPH65:=result;
END;
                                                      FUNCTION ELEMGRAPH66:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRESADJCA2
ELEMGRAPH66:=result;
END;
                                                      FUNCTION ELEMGRAPH67:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSADJCA2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH67:=result;
END;
                                                      FUNCTION ELEMGRAPH68:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FSADJCA2
ELEMGRAPH68:=result;
END;
                                                      FUNCTION ELEMGRAPH69:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: THETACIADAPT
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH69:=result;
END;
                                                      FUNCTION ELEMGRAPH70:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FHETACIADAPT
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH70:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH71:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREARGREFL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH71:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH72:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING5
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      FUNCTION CONCGRAPH6:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING6
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH6:=result;
END;
                                                      FUNCTION CONCGRAPH7:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING7
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH7:=result;
END;
                                                      FUNCTION CONCGRAPH8:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING8
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH8:=result;
END;
                                                      FUNCTION CONCGRAPH9:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING9
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH9:=result;
END;
                                                      FUNCTION CONCGRAPH10:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING10
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH10:=result;
END;
                                                      FUNCTION CONCGRAPH11:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TARGREFLSPELLING11
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH11:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
AppendCtrlExpr(CONCGRAPH6,result);
AppendCtrlExpr(CONCGRAPH7,result);
AppendCtrlExpr(CONCGRAPH8,result);
AppendCtrlExpr(CONCGRAPH9,result);
AppendCtrlExpr(CONCGRAPH10,result);
AppendCtrlExpr(CONCGRAPH11,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH72:=result;
END;
                                                      FUNCTION ELEMGRAPH73:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FARGREFLSPELLING1
ELEMGRAPH73:=result;
END;
                                                      FUNCTION ELEMGRAPH74:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FBTB1
ELEMGRAPH74:=result;
END;
                                                      FUNCTION ELEMGRAPH75:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPRERECIPRO1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH75:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH76:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: RRECIPROCALSUBST1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH76:=result;
END;
                                                      FUNCTION ELEMGRAPH77:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREPURPOSEADVERBIAL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH77:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH78:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPURPOSEADVERBIAL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH78:=result;
END;
                                                      FUNCTION ELEMGRAPH79:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPURPOSEADVERBIAL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH79:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH80:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FREMOVESPEED1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH80:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH81:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FNOCLITICS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH81:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH82:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FNOSHIFT
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH82:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH83:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FNOR
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH83:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH84:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FNOARGS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH84:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH85:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVESHIFT1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH85:=result;
END;
                                                      FUNCTION ELEMGRAPH86:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVESUBJ1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVESUBJ2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSUBJTOCL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: THETSUBJTOCL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH86:=result;
END;
                                                      FUNCTION ELEMGRAPH87:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVECLITICS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVECLITICS2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVECLITICS3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVECLITICS4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
GRAPH:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=option;
result^.ce:=GRAPH;
ELEMGRAPH87:=result;
END;
                                                      FUNCTION ELEMGRAPH88:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVESADVS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: REMOVER1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH88:=result;
END;
                                                      FUNCTION ELEMGRAPH89:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TEXTRAPOSANDNOVR
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNOEXTRAPOS
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH89:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH90:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVEVPADVS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVEVPARGS1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVEARGNP
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TREMOVECOMPL
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH90:=result;
END;
                                                      FUNCTION ELEMGRAPH91:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSPRUNING1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TSPRUNING0
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH91:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH92:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FPREPPOVERV
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH92:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH93:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPPOVERV1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      FUNCTION CONCGRAPH2:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPPOVERV2
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH2:=result;
END;
                                                      FUNCTION CONCGRAPH3:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPPOVERV3
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH3:=result;
END;
                                                      FUNCTION CONCGRAPH4:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TPPOVERV4
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH4:=result;
END;
                                                      FUNCTION CONCGRAPH5:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TADJPPOVERV1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH5:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
AppendCtrlExpr(CONCGRAPH2,result);
AppendCtrlExpr(CONCGRAPH3,result);
AppendCtrlExpr(CONCGRAPH4,result);
AppendCtrlExpr(CONCGRAPH5,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH93:=result;
END;
                                                      FUNCTION ELEMGRAPH94:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: FNOPREADV
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      BEGIN
ELEMGRAPH94:=GRAPH
END;
                                                      FUNCTION ELEMGRAPH95:LDMRULES_pCtrlExpr;
FUNCTION GRAPH:LDMRULES_pCtrlExpr;
FUNCTION CONCGRAPH1:LDMRULES_pCtrlExpr;
FUNCTION ELEMGRAPH1:LDMRULES_pCtrlExpr;
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
NAME: TNPOVERADV1
ELEMGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
                                                      
VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=iteration;
result^.ce:=GRAPH;
ELEMGRAPH95:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=concatenation;
InitCtrlExprLst(result);
AppendCtrlExpr(ELEMGRAPH1,result);
AppendCtrlExpr(ELEMGRAPH2,result);
AppendCtrlExpr(ELEMGRAPH3,result);
AppendCtrlExpr(ELEMGRAPH4,result);
AppendCtrlExpr(ELEMGRAPH5,result);
AppendCtrlExpr(ELEMGRAPH6,result);
AppendCtrlExpr(ELEMGRAPH7,result);
AppendCtrlExpr(ELEMGRAPH8,result);
AppendCtrlExpr(ELEMGRAPH9,result);
AppendCtrlExpr(ELEMGRAPH10,result);
AppendCtrlExpr(ELEMGRAPH11,result);
AppendCtrlExpr(ELEMGRAPH12,result);
AppendCtrlExpr(ELEMGRAPH13,result);
AppendCtrlExpr(ELEMGRAPH14,result);
AppendCtrlExpr(ELEMGRAPH15,result);
AppendCtrlExpr(ELEMGRAPH16,result);
AppendCtrlExpr(ELEMGRAPH17,result);
AppendCtrlExpr(ELEMGRAPH18,result);
AppendCtrlExpr(ELEMGRAPH19,result);
AppendCtrlExpr(ELEMGRAPH20,result);
AppendCtrlExpr(ELEMGRAPH21,result);
AppendCtrlExpr(ELEMGRAPH22,result);
AppendCtrlExpr(ELEMGRAPH23,result);
AppendCtrlExpr(ELEMGRAPH24,result);
AppendCtrlExpr(ELEMGRAPH25,result);
AppendCtrlExpr(ELEMGRAPH26,result);
AppendCtrlExpr(ELEMGRAPH27,result);
AppendCtrlExpr(ELEMGRAPH28,result);
AppendCtrlExpr(ELEMGRAPH29,result);
AppendCtrlExpr(ELEMGRAPH30,result);
AppendCtrlExpr(ELEMGRAPH31,result);
AppendCtrlExpr(ELEMGRAPH32,result);
AppendCtrlExpr(ELEMGRAPH33,result);
AppendCtrlExpr(ELEMGRAPH34,result);
AppendCtrlExpr(ELEMGRAPH35,result);
AppendCtrlExpr(ELEMGRAPH36,result);
AppendCtrlExpr(ELEMGRAPH37,result);
AppendCtrlExpr(ELEMGRAPH38,result);
AppendCtrlExpr(ELEMGRAPH39,result);
AppendCtrlExpr(ELEMGRAPH40,result);
AppendCtrlExpr(ELEMGRAPH41,result);
AppendCtrlExpr(ELEMGRAPH42,result);
AppendCtrlExpr(ELEMGRAPH43,result);
AppendCtrlExpr(ELEMGRAPH44,result);
AppendCtrlExpr(ELEMGRAPH45,result);
AppendCtrlExpr(ELEMGRAPH46,result);
AppendCtrlExpr(ELEMGRAPH47,result);
AppendCtrlExpr(ELEMGRAPH48,result);
AppendCtrlExpr(ELEMGRAPH49,result);
AppendCtrlExpr(ELEMGRAPH50,result);
AppendCtrlExpr(ELEMGRAPH51,result);
AppendCtrlExpr(ELEMGRAPH52,result);
AppendCtrlExpr(ELEMGRAPH53,result);
AppendCtrlExpr(ELEMGRAPH54,result);
AppendCtrlExpr(ELEMGRAPH55,result);
AppendCtrlExpr(ELEMGRAPH56,result);
AppendCtrlExpr(ELEMGRAPH57,result);
AppendCtrlExpr(ELEMGRAPH58,result);
AppendCtrlExpr(ELEMGRAPH59,result);
AppendCtrlExpr(ELEMGRAPH60,result);
AppendCtrlExpr(ELEMGRAPH61,result);
AppendCtrlExpr(ELEMGRAPH62,result);
AppendCtrlExpr(ELEMGRAPH63,result);
AppendCtrlExpr(ELEMGRAPH64,result);
AppendCtrlExpr(ELEMGRAPH65,result);
AppendCtrlExpr(ELEMGRAPH66,result);
AppendCtrlExpr(ELEMGRAPH67,result);
AppendCtrlExpr(ELEMGRAPH68,result);
AppendCtrlExpr(ELEMGRAPH69,result);
AppendCtrlExpr(ELEMGRAPH70,result);
AppendCtrlExpr(ELEMGRAPH71,result);
AppendCtrlExpr(ELEMGRAPH72,result);
AppendCtrlExpr(ELEMGRAPH73,result);
AppendCtrlExpr(ELEMGRAPH74,result);
AppendCtrlExpr(ELEMGRAPH75,result);
AppendCtrlExpr(ELEMGRAPH76,result);
AppendCtrlExpr(ELEMGRAPH77,result);
AppendCtrlExpr(ELEMGRAPH78,result);
AppendCtrlExpr(ELEMGRAPH79,result);
AppendCtrlExpr(ELEMGRAPH80,result);
AppendCtrlExpr(ELEMGRAPH81,result);
AppendCtrlExpr(ELEMGRAPH82,result);
AppendCtrlExpr(ELEMGRAPH83,result);
AppendCtrlExpr(ELEMGRAPH84,result);
AppendCtrlExpr(ELEMGRAPH85,result);
AppendCtrlExpr(ELEMGRAPH86,result);
AppendCtrlExpr(ELEMGRAPH87,result);
AppendCtrlExpr(ELEMGRAPH88,result);
AppendCtrlExpr(ELEMGRAPH89,result);
AppendCtrlExpr(ELEMGRAPH90,result);
AppendCtrlExpr(ELEMGRAPH91,result);
AppendCtrlExpr(ELEMGRAPH92,result);
AppendCtrlExpr(ELEMGRAPH93,result);
AppendCtrlExpr(ELEMGRAPH94,result);
AppendCtrlExpr(ELEMGRAPH95,result);
CONCGRAPH1:=result;
END;
                                                      VAR result:LDMRULES_pCtrlExpr;
BEGIN
LDMRULES_makectrlexpr(result);
result^.kind:=alternative;
InitCtrlExprLst(result);
AppendCtrlExpr(CONCGRAPH1,result);
GRAPH:=result;
END;
BEGIN
XPPROPTOCLAUSE:=GRAPH
END;
*
VERBPPROP
ADJPPROP
ADVPPROP
NPPROP
PREPPPROP
*
CLAUSE
*
}

